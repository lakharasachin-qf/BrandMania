Index: app/src/main/java/com/app/brandmania/Activity/ViewBrandActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Adapter.BrandAdapter;\r\nimport com.app.brandmania.Common.MakeMyBrandApp;\r\nimport com.app.brandmania.Common.ObserverActionID;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.SliderItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\n\r\nimport com.app.brandmania.databinding.ActivityViewBrandBinding;\r\nimport com.google.gson.Gson;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Observable;\r\n\r\npublic class ViewBrandActivity extends BaseActivity {\r\n    Activity act;\r\n    private ActivityViewBrandBinding binding;\r\n    private static final int REQUEST_CALL = 1;\r\n    ArrayList<BrandListItem> multiListItems=new ArrayList<>();\r\n    PreafManager preafManager;\r\n    private String is_frame=\"\";\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act=this;\r\n        captureScreenShort();\r\n\r\n        preafManager=new PreafManager(this);\r\n        binding= DataBindingUtil.setContentView(act,R.layout.activity_view_brand);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        binding.BackButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n\r\n        binding.addBrandImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent=new Intent(getApplicationContext(),AddBrandMultipleActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        binding.swipeContainer.setColorSchemeResources(R.color.colorPrimary,\r\n                R.color.colorsecond,\r\n                R.color.colorthird);\r\n        binding.swipeContainer.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n                startAnimation();\r\n                getBrandList(false);\r\n            }\r\n        });\r\n\r\n        startAnimation();\r\n        getBrandList(false);\r\n    }\r\n    private void startAnimation() {\r\n        binding.shimmerViewContainer.startShimmer();\r\n        binding.shimmerViewContainer.setVisibility(View.VISIBLE);\r\n        binding.getBrandList.setVisibility(View.GONE);\r\n        binding.emptyStateLayout.setVisibility(View.GONE);\r\n    }\r\n    private void GetBrandAddaptor() {\r\n        BrandAdapter MenuAddaptor = new BrandAdapter(multiListItems, this);\r\n        BrandAdapter.BRANDBYIDIF brandbyidif=new BrandAdapter.BRANDBYIDIF() {\r\n            @Override\r\n            public void fireBrandList(int position, BrandListItem model) {\r\n                getBrandById(model);\r\n            }\r\n        };\r\n        MenuAddaptor.setBrandbyidif(brandbyidif);\r\n        RecyclerView.LayoutManager mLayoutManager = new LinearLayoutManager(act, RecyclerView.VERTICAL, false);\r\n        binding.getBrandList.setHasFixedSize(true);\r\n        binding.getBrandList.setLayoutManager(mLayoutManager);\r\n        binding.getBrandList.setAdapter(MenuAddaptor);\r\n\r\n    }\r\n    private void getBrandList(boolean wantToLoadHome) {\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                binding.swipeContainer.setRefreshing(false);\r\n                Utility.Log(\"GET_BRAND : \", response);\r\n                try {\r\n\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    multiListItems = ResponseHandler.HandleGetBrandList(jsonObject);\r\n                    if (multiListItems != null && multiListItems.size() != 0) {\r\n                        GetBrandAddaptor();\r\n                        binding.shimmerViewContainer.stopShimmer();\r\n                        binding.shimmerViewContainer.setVisibility(View.GONE);\r\n                        binding.getBrandList.setVisibility(View.VISIBLE);\r\n                        binding.emptyStateLayout.setVisibility(View.GONE);\r\n                        preafManager.setAddBrandList(multiListItems);\r\n                    }\r\n                    if (multiListItems == null || multiListItems.size() == 0) {\r\n                        binding.emptyStateLayout.setVisibility(View.VISIBLE);\r\n                        binding.getBrandList.setVisibility(View.GONE);\r\n                        binding.shimmerViewContainer.stopShimmer();\r\n                        binding.shimmerViewContainer.setVisibility(View.GONE);\r\n                    }\r\n                    if (wantToLoadHome)\r\n                        MakeMyBrandApp.getInstance().getObserver().setValue(ObserverActionID.REFRESH_BRAND_NAME);\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        binding.swipeContainer.setRefreshing(false);\r\n                        error.printStackTrace();\r\n\r\n                        binding.swipeContainer.setRefreshing(false);\r\n                        binding.emptyStateLayout.setVisibility(View.VISIBLE);\r\n                        binding.getBrandList.setVisibility(View.GONE);\r\n                        binding.shimmerViewContainer.stopShimmer();\r\n                        binding.shimmerViewContainer.setVisibility(View.GONE);\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n    private void makePhoneCall() {\r\n        String number =\"8460638464\";\r\n        if (number.trim().length() > 0) {\r\n            if (ContextCompat.checkSelfPermission(act, Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) {\r\n                ActivityCompat.requestPermissions(act,\r\n                        new String[]{Manifest.permission.CALL_PHONE}, REQUEST_CALL);\r\n            } else {\r\n                String dial = \"tel:\" + number;\r\n                startActivity(new Intent(Intent.ACTION_CALL, Uri.parse(dial)));\r\n            }\r\n        }\r\n    }\r\n    @Override public void onRequestPermissionsResult(int requestCode,  String[] permissions,  int[] grantResults) {\r\n        if (requestCode == REQUEST_CALL) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                makePhoneCall();\r\n            } else {\r\n                Toast.makeText(act, \"Permission DENIED\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }\r\n    }\r\n    @Override public void onBackPressed() {\r\n        CodeReUse.activityBackPress(act);\r\n    }\r\n    public void captureScreenShort() {\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n    }\r\n    private void getBrandById(BrandListItem model) {\r\n\r\n        Utility.Log(\"API : \", APIs.GET_BRAND_BY_ID);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND_BY_ID, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                binding.swipeContainer.setRefreshing(false);\r\n                Utility.Log(\"GET_BRAND_BY_ID : \", response);\r\n                ArrayList<BrandListItem> brandListItems=new ArrayList<>();\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    multiListItems = ResponseHandler.HandleGetBrandById(jsonObject);\r\n\r\n\r\n                    SliderItem sliderItem=new SliderItem();\r\n                    sliderItem.setPriceForPay(multiListItems.get(0).getRate());\r\n                    sliderItem.setPackageTitle(multiListItems.get(0).getPackagename());\r\n                    sliderItem.setPackageid(multiListItems.get(0).getPackage_id());\r\n                    sliderItem.setTemplateTitle(multiListItems.get(0).getNo_of_frame());\r\n                    sliderItem.setImageTitle(multiListItems.get(0).getNo_of_total_image());\r\n                    sliderItem.setBrandId(multiListItems.get(0).getId());\r\n\r\n                    Gson gson=new Gson();\r\n                    Log.e(\"DATA\",gson.toJson(sliderItem));\r\n\r\n\r\n\r\n                    Intent i = new Intent(act, RazorPayActivity.class);\r\n\r\n                    i.putExtra(\"detailsObj\",gson.toJson(sliderItem));\r\n                    /*i.addCategory(Intent.CATEGORY_HOME);\r\n                    i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);*/\r\n                    startActivity(i);\r\n                    overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        binding.swipeContainer.setRefreshing(false);\r\n                        error.printStackTrace();\r\n\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                params.put(\"brand_id\",model.getId());\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    @Override\r\n    public void update(Observable observable, Object data) {\r\n        if (MakeMyBrandApp.getInstance().getObserver().getValue() == ObserverActionID.JUSTBRAND) {\r\n            getBrandList(true);\r\n            //MakeMyBrandApp.getInstance().getObserver().setValue(ObserverActionID.REFRESH_BRAND_NAME);\r\n        }\r\n        if (MakeMyBrandApp.getInstance().getObserver().getValue() == ObserverActionID.RELOAD_BRANDS) {\r\n            getBrandList(false);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/ViewBrandActivity.java	(revision 501064faadb223a77801b2f583c536f2c23c144c)
+++ app/src/main/java/com/app/brandmania/Activity/ViewBrandActivity.java	(date 1608379190756)
@@ -214,7 +214,7 @@
             if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                 makePhoneCall();
             } else {
-                Toast.makeText(act, "Permission DENIED", Toast.LENGTH_SHORT).show();
+                Toast.makeText(act, "Permission Denied", Toast.LENGTH_SHORT).show();
             }
         }
     }
@@ -311,7 +311,7 @@
     public void update(Observable observable, Object data) {
         if (MakeMyBrandApp.getInstance().getObserver().getValue() == ObserverActionID.JUSTBRAND) {
             getBrandList(true);
-            //MakeMyBrandApp.getInstance().getObserver().setValue(ObserverActionID.REFRESH_BRAND_NAME);
+
         }
         if (MakeMyBrandApp.getInstance().getObserver().getValue() == ObserverActionID.RELOAD_BRANDS) {
             getBrandList(false);
Index: app/src/main/java/com/app/brandmania/Fragment/bottom/ProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Fragment.bottom;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Activity.AboutUsActivity;\r\nimport com.app.brandmania.Activity.AddReportAndBug;\r\nimport com.app.brandmania.Activity.FaqActivity;\r\nimport com.app.brandmania.Activity.LoginActivity;\r\nimport com.app.brandmania.Activity.PackageActivity;\r\nimport com.app.brandmania.Common.MakeMyBrandApp;\r\nimport com.app.brandmania.Common.ObserverActionID;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Activity.HelpAndSupport;\r\nimport com.app.brandmania.Activity.PartnerProgramActivity;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Fragment.BaseFragment;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Activity.ViewBrandActivity;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.FragmentProfileBinding;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.net.URI;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Observable;\r\n\r\npublic class ProfileFragment extends BaseFragment {\r\n    Activity act;\r\n    private FragmentProfileBinding binding;\r\n    PreafManager preafManager;\r\n\r\n\r\n    @Override\r\n    public View provideFragmentView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState) {\r\n        act = getActivity();\r\n        binding= DataBindingUtil.inflate(inflater, R.layout.fragment_profile,parent,false);\r\n        preafManager=new PreafManager(act);\r\n        binding.businessName.setText(preafManager.getActiveBrand().getName());\r\n        binding.mybusinessRelative.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(act, ViewBrandActivity.class);\r\n\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n\r\n            }\r\n        });\r\n        binding.logoutRelative.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n            }\r\n        });\r\n        binding.helpandsupportLayout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(act, HelpAndSupport.class);\r\n\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n\r\n            }\r\n        });\r\n        binding.partnerProgRelative.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Intent i = new Intent(act, PartnerProgramActivity.class);\r\n\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n\r\n            }\r\n        });\r\n        binding.myFaqRelative.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(act, FaqActivity.class);\r\n                 startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n\r\n            }\r\n        });\r\n        binding.aboutUsRelative.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(act, AboutUsActivity.class);\r\n\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n\r\n            }\r\n        });\r\n        binding.shareText.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent shareIntent =   new Intent(android.content.Intent.ACTION_SEND);\r\n                shareIntent.setType(\"text/plain\");\r\n                // shareIntent.putExtra(Intent.EXTRA_SUBJECT,\"Insert Subject here\");\r\n                String app_url = \"https://play.google.com/store/apps/details?id=com.make.mybrand\";\r\n                shareIntent.putExtra(android.content.Intent.EXTRA_TEXT,app_url);\r\n                startActivity(Intent.createChooser(shareIntent, \"Share via\"));\r\n            }\r\n        });\r\n        binding.packageRelative.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent=new Intent(act, PackageActivity.class);\r\n                intent.putExtra(\"Profile\",\"1\");\r\n                startActivity(intent);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n            }\r\n        });\r\n        binding.rateUsLayout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Uri uri=Uri.parse(\"https://play.google.com/store/apps/details?id=com.make.mybrand\");\r\n                Intent intent=new Intent(Intent.ACTION_VIEW,uri);\r\n                try {\r\n\r\n                    startActivity(intent);\r\n                }\r\n                catch (Exception e)\r\n                {\r\n\r\n                }\r\n\r\n            }\r\n        });\r\n        binding.reportbugsLayout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent=new Intent(act, AddReportAndBug.class);\r\n                startActivity(intent);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n            }\r\n        });\r\n        return binding.getRoot();\r\n    }\r\n\r\n    ArrayList<BrandListItem> multiListItems=new ArrayList<>();\r\n    private void getBrandList() {\r\n\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n\r\n                Utility.Log(\"GET_BRAND : \", response);\r\n\r\n                try {\r\n\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n\r\n                    multiListItems = ResponseHandler.HandleGetBrandList(jsonObject);\r\n                    preafManager.setAddBrandList(multiListItems);\r\n                    for (int i=0;i<multiListItems.size();i++){\r\n                        if (multiListItems.get(i).getId().equalsIgnoreCase(preafManager.getActiveBrand().getId())){\r\n                            preafManager.setActiveBrand(multiListItems.get(i));\r\n                            break;\r\n                        }\r\n                    }\r\n                    //FirstLogin\r\n                    if (act.getIntent().hasExtra(\"FirstLogin\")){\r\n\r\n\r\n                        preafManager.setIS_Brand(true);\r\n\r\n                        if (multiListItems.size() != 0) {\r\n                            preafManager.setActiveBrand(multiListItems.get(0));\r\n                        }\r\n\r\n                    }\r\n                    preafManager=new PreafManager(act);\r\n                    binding.businessName.setText(preafManager.getActiveBrand().getName());\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                         error.printStackTrace();\r\n\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    @Override\r\n    public void update(Observable observable, Object data) {\r\n\r\n        if (MakeMyBrandApp.getInstance().getObserver().getValue() == ObserverActionID.REFRESH_BRAND_NAME) {\r\n\r\n\r\n            getBrandList();\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Fragment/bottom/ProfileFragment.java	(revision 501064faadb223a77801b2f583c536f2c23c144c)
+++ app/src/main/java/com/app/brandmania/Fragment/bottom/ProfileFragment.java	(date 1608372365981)
@@ -176,13 +176,9 @@
         StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {
             @Override
             public void onResponse(String response) {
-
                 Utility.Log("GET_BRAND : ", response);
-
                 try {
-
                     JSONObject jsonObject = new JSONObject(response);
-
                     multiListItems = ResponseHandler.HandleGetBrandList(jsonObject);
                     preafManager.setAddBrandList(multiListItems);
                     for (int i=0;i<multiListItems.size();i++){
@@ -191,10 +187,9 @@
                             break;
                         }
                     }
+
                     //FirstLogin
                     if (act.getIntent().hasExtra("FirstLogin")){
-
-
                         preafManager.setIS_Brand(true);
 
                         if (multiListItems.size() != 0) {
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:card_view=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:app=\"http://schemas.android.com/tools\"\r\n    xmlns:shimmer=\"http://schemas.android.com/apk/res-auto\"\r\n    app:ignore=\"NamespaceTypo\">\r\n<RelativeLayout\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:visibility=\"visible\"\r\n            android:id=\"@+id/my_toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"@dimen/_70sdp\"\r\n            android:background=\"@drawable/toolbar_background_second\"\r\n            android:elevation=\"4dp\"\r\n            android:theme=\"@style/ThemeOverlay.AppCompat.ActionBar\"\r\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\">\r\n                <RelativeLayout\r\n                    android:layout_marginTop=\"@dimen/_10sdp\"\r\n                    android:layout_marginRight=\"@dimen/_7sdp\"\r\n                    android:id=\"@+id/main_linearlayout_title\"\r\n                    android:elevation=\"0dp\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"@dimen/_70sdp\">\r\n                        <TextView\r\n                            android:id=\"@+id/firsttitle\"\r\n                            android:text=\"@string/yourbusiness_text\"\r\n                            android:textColor=\"@color/colorNavText\"\r\n                            android:textSize=\"@dimen/_6sdp\"\r\n                            android:fontFamily=\"@font/montserratlight\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:textStyle=\"bold\"\r\n                            android:layout_height=\"wrap_content\">\r\n\r\n                        </TextView>\r\n                        <RelativeLayout\r\n                            android:id=\"@+id/businessNameDropDown\"\r\n                            android:layout_marginTop=\"@dimen/_10sdp\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\">\r\n                        <TextView\r\n\r\n                            android:id=\"@+id/businessName\"\r\n                            android:text=\"QueryFinderSolution\"\r\n                            android:textColor=\"@color/colorNavText\"\r\n                            android:textSize=\"@dimen/_12sdp\"\r\n\r\n                            android:fontFamily=\"@font/montserratsemibold\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\">\r\n                        </TextView>\r\n                        <ImageView\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_toEndOf=\"@+id/businessName\"\r\n                            android:src=\"@drawable/ic_outline_expand_more_24\"\r\n                            android:layout_height=\"wrap_content\">\r\n\r\n                        </ImageView>\r\n                        </RelativeLayout>\r\n                        <ImageView\r\n                            android:id=\"@+id/showNotification\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_alignParentEnd=\"true\"\r\n                            android:visibility=\"visible\"\r\n                            android:src=\"@drawable/ic_baseline_notifications_none_24\"\r\n                            android:layout_height=\"wrap_content\">\r\n\r\n                        </ImageView>\r\n\r\n                </RelativeLayout>\r\n        </androidx.appcompat.widget.Toolbar>\r\n        <ImageView\r\n            android:layout_marginStart=\"-100dp\"\r\n            android:layout_alignParentBottom=\"true\"\r\n\r\n            android:src=\"@drawable/bottom\"\r\n            android:layout_width=\"@dimen/_300sdp\"\r\n            android:layout_height=\"@dimen/_300sdp\">\r\n\r\n        </ImageView>\r\n\r\n\r\n        <androidx.swiperefreshlayout.widget.SwipeRefreshLayout\r\n            android:id=\"@+id/swipeContainer\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_below=\"@+id/my_toolbar\"\r\n            android:scrollbars=\"none\">\r\n        <androidx.core.widget.NestedScrollView\r\n\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:clipToPadding=\"false\"\r\n            android:scrollbars=\"none\"\r\n            app:behavior_overlapTop=\"50dp\"\r\n            app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\r\n                <RelativeLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\">\r\n                        <RelativeLayout\r\n                            android:layout_marginTop=\"@dimen/_10sdp\"\r\n                            android:id=\"@+id/viewpagerRelativ\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"match_parent\">\r\n                                <androidx.cardview.widget.CardView\r\n                                    android:layout_marginRight=\"@dimen/_7sdp\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_marginLeft=\"@dimen/_7sdp\"\r\n                                    android:layout_height=\"@dimen/_140sdp\"\r\n                                    card_view:cardCornerRadius=\"@dimen/_10sdp\">\r\n                                        <androidx.viewpager.widget.ViewPager\r\n                                            android:id=\"@+id/ViewPagerView\"\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"@dimen/_140sdp\"\r\n                                            android:visibility=\"visible\" />\r\n                                </androidx.cardview.widget.CardView>\r\n\r\n                        </RelativeLayout>\r\n                        <RelativeLayout\r\n                            android:background=\"@android:color/transparent\"\r\n                            android:layout_below=\"@+id/viewpagerRelativ\"\r\n                            android:layout_marginTop=\"@dimen/_7sdp\"\r\n                            android:id=\"@+id/alertForFrmae\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"match_parent\">\r\n\r\n                                        <RelativeLayout\r\n                                            android:background=\"@android:color/transparent\"\r\n                                            android:layout_width=\"wrap_content\"\r\n                                            android:layout_height=\"wrap_content\">\r\n                                        <RelativeLayout\r\n                                            android:background=\"@android:color/transparent\"\r\n                                            android:id=\"@+id/alertRelative\"\r\n                                            android:layout_marginLeft=\"@dimen/_5sdp\"\r\n                                            android:layout_marginRight=\"@dimen/_5sdp\"\r\n                                            android:layout_gravity=\"center\"\r\n                                            android:gravity=\"center\"\r\n\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"wrap_content\">\r\n\r\n                                                <TextView\r\n                                                    android:gravity=\"center\"\r\n                                                    android:layout_centerHorizontal=\"true\"\r\n                                                    android:layout_marginTop=\"@dimen/_5sdp\"\r\n                                                    android:textColor=\"@color/colorPrimary\"\r\n                                                    android:id=\"@+id/alertText\"\r\n                                                    android:textSize=\"@dimen/_10sdp\"\r\n                                                    android:singleLine=\"true\"\r\n                                                    android:ellipsize=\"marquee\"\r\n                                                    android:marqueeRepeatLimit=\"marquee_forever\"\r\n                                                    android:focusable=\"true\"\r\n                                                    android:focusableInTouchMode=\"true\"\r\n                                                    android:scrollHorizontally=\"true\"\r\n                                                    android:fontFamily=\"@font/montserratsemibold\"\r\n                                                    android:text=\"\"\r\n                                                    android:layout_width=\"match_parent\"\r\n                                                    android:layout_height=\"wrap_content\" />\r\n                                                <LinearLayout\r\n                                                    android:visibility=\"gone\"\r\n                                                    android:layout_marginTop=\"@dimen/_5sdp\"\r\n                                                    android:layout_marginBottom=\"@dimen/_5sdp\"\r\n                                                    android:layout_centerHorizontal=\"true\"\r\n                                                    android:orientation=\"horizontal\"\r\n                                                    android:layout_below=\"@+id/alertText\"\r\n                                                    android:layout_width=\"wrap_content\"\r\n                                                    android:layout_height=\"wrap_content\">\r\n\r\n                                                        <ImageView\r\n                                                            android:visibility=\"gone\"\r\n                                                            android:id=\"@+id/call\"\r\n                                                            android:src=\"@drawable/ic_phone\"\r\n                                                            android:layout_width=\"@dimen/_18sdp\"\r\n                                                            android:layout_height=\"@dimen/_18sdp\" />\r\n\r\n                                                        <ImageView\r\n                                                            android:id=\"@+id/whatsapp\"\r\n                                                            android:layout_marginStart=\"@dimen/_5sdp\"\r\n                                                            android:src=\"@drawable/ic_whatsapp\"\r\n                                                            android:layout_width=\"@dimen/_18sdp\"\r\n                                                            android:layout_height=\"@dimen/_18sdp\" />\r\n                                                </LinearLayout>\r\n                                        </RelativeLayout>\r\n\r\n\r\n                                        </RelativeLayout>\r\n\r\n\r\n                        </RelativeLayout>\r\n                        <RelativeLayout\r\n                            android:layout_marginTop=\"@dimen/_15sdp\"\r\n                            android:layout_below=\"@+id/alertForFrmae\"\r\n                            android:id=\"@+id/recommendationRelativ\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"match_parent\">\r\n                                <androidx.recyclerview.widget.RecyclerView\r\n                                    android:layout_marginTop=\"@dimen/_10sdp\"\r\n                                    android:id=\"@+id/rocommRecycler\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"match_parent\"\r\n                                    android:layout_marginBottom=\"@dimen/_1sdp\"\r\n                                    android:paddingBottom=\"@dimen/_30sdp\"\r\n                                    android:clipToPadding=\"false\" />\r\n                                <com.facebook.shimmer.ShimmerFrameLayout\r\n\r\n                                    android:layout_below=\"@+id/rocommRecycler\"\r\n                                    android:id=\"@+id/shimmerForPagination\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_gravity=\"center\"\r\n                                    android:orientation=\"vertical\"\r\n                                    shimmer:shimmer_duration=\"800\">\r\n                                        <LinearLayout\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"wrap_content\"\r\n                                            android:orientation=\"vertical\">\r\n                                                <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n                                                <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n                                        </LinearLayout>\r\n\r\n                                </com.facebook.shimmer.ShimmerFrameLayout>\r\n\r\n                        <com.facebook.shimmer.ShimmerFrameLayout\r\n\r\n                            android:id=\"@+id/shimmer_view_container\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"center\"\r\n                            android:orientation=\"vertical\"\r\n                            shimmer:shimmer_duration=\"800\">\r\n\r\n                                <LinearLayout\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:orientation=\"vertical\">\r\n\r\n                                        <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                                        <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                                        <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                                        <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                                        <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                                        <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                                        <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                                        <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                                </LinearLayout>\r\n\r\n                        </com.facebook.shimmer.ShimmerFrameLayout>\r\n                        </RelativeLayout>\r\n                </RelativeLayout>\r\n        </androidx.core.widget.NestedScrollView>\r\n\r\n\r\n        </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>\r\n\r\n\r\n\r\n</RelativeLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_home.xml	(revision 501064faadb223a77801b2f583c536f2c23c144c)
+++ app/src/main/res/layout/fragment_home.xml	(date 1608378132283)
@@ -118,6 +118,7 @@
 
                         </RelativeLayout>
                         <RelativeLayout
+                            android:visibility="gone"
                             android:background="@android:color/transparent"
                             android:layout_below="@+id/viewpagerRelativ"
                             android:layout_marginTop="@dimen/_7sdp"
@@ -145,7 +146,7 @@
                                                     android:layout_centerHorizontal="true"
                                                     android:layout_marginTop="@dimen/_5sdp"
                                                     android:textColor="@color/colorPrimary"
-                                                    android:id="@+id/alertText"
+                                                    android:id="@+id/alertText2"
                                                     android:textSize="@dimen/_10sdp"
                                                     android:singleLine="true"
                                                     android:ellipsize="marquee"
@@ -163,7 +164,7 @@
                                                     android:layout_marginBottom="@dimen/_5sdp"
                                                     android:layout_centerHorizontal="true"
                                                     android:orientation="horizontal"
-                                                    android:layout_below="@+id/alertText"
+                                                    android:layout_below="@+id/alertText2"
                                                     android:layout_width="wrap_content"
                                                     android:layout_height="wrap_content">
 
@@ -182,11 +183,7 @@
                                                             android:layout_height="@dimen/_18sdp" />
                                                 </LinearLayout>
                                         </RelativeLayout>
-
-
                                         </RelativeLayout>
-
-
                         </RelativeLayout>
                         <RelativeLayout
                             android:layout_marginTop="@dimen/_15sdp"
@@ -257,11 +254,32 @@
                         </RelativeLayout>
                 </RelativeLayout>
         </androidx.core.widget.NestedScrollView>
-
-
         </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>
 
+        <RelativeLayout
+            android:layout_width="match_parent"
+            android:layout_height="@dimen/_35sdp"
+            android:layout_alignParentBottom="true"
+            android:background="#79000000">
 
+                <TextView
+                    android:layout_centerVertical="true"
+                    android:id="@+id/alertText"
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:layout_centerHorizontal="true"
+                    android:ellipsize="marquee"
+                    android:focusable="true"
+                    android:focusableInTouchMode="true"
+                    android:fontFamily="@font/inter_medium"
+                    android:gravity="center"
+                    android:marqueeRepeatLimit="marquee_forever"
+                    android:scrollHorizontally="true"
+                    android:singleLine="true"
+                    android:text="You don't have frame please contact to admin for your brand frame"
+                    android:textColor="@color/white"
+                    android:textSize="@dimen/_11sdp" />
+        </RelativeLayout>
 
 </RelativeLayout>
 </layout>
\ No newline at end of file
Index: app/src/main/java/com/app/brandmania/Activity/RazorPayActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.preference.PreferenceManager;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.DashBoardItem;\r\nimport com.app.brandmania.Model.DownloadFavoriteItemList;\r\nimport com.app.brandmania.Model.SliderItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityRazorPayBinding;\r\nimport com.google.gson.Gson;\r\nimport com.razorpay.Checkout;\r\nimport com.razorpay.PaymentData;\r\nimport com.razorpay.PaymentResultListener;\r\nimport com.razorpay.PaymentResultWithDataListener;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RazorPayActivity extends BaseActivity implements PaymentResultWithDataListener,alertListenerCallback {\r\n    Activity act;\r\n    Button pay;\r\n    private ActivityRazorPayBinding binding;\r\n    String sliderItem;\r\n    SliderItem sliderItemList;\r\n    BrandListItem brandListItem;\r\n    private String amountToPay;\r\n    Gson gson;\r\n    private boolean isLoading=false;\r\n    private String orderIdStr;\r\n    private String paymentIdStr;\r\n    private String signatureStr;\r\n    private String generatedOrderId;\r\n    private String currency=\"INR\";\r\n    PreafManager preafManager;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act=this;\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_razor_pay);\r\n        Checkout.preload(getApplicationContext());\r\n        preafManager=new PreafManager(this);\r\n        gson=new Gson();\r\n\r\n        sliderItemList=gson.fromJson(getIntent().getStringExtra(\"detailsObj\"), SliderItem.class);\r\n        Gson gson =new Gson();\r\n        Log.e(\"EEEE\",gson.toJson(sliderItemList));\r\n\r\n\r\n        binding.BackButtonMember.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n        sliderItem = sliderItemList.getPriceForPay();\r\n\r\n        binding.amount.setText(\"INR \" +sliderItem+\".00\");\r\n\r\n        pay=(Button)findViewById(R.id.btn_pay);\r\n\r\n        pay.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                generateOrderID();\r\n            }\r\n        });\r\n    }\r\n//generat orderid\r\n\r\n    public void generateOrderID() {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.Log(\"APi\", APIs.GENERATE_ORDER_ID);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GENERATE_ORDER_ID, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                isLoading = false;\r\n                Utility.dismissProgress();\r\n\r\n                Utility.Log(\"OrderID ; \", response);\r\n\r\n                if (ResponseHandler.isSuccess(response, null)) {\r\n                    JSONObject jsonObject = ResponseHandler.getJSONObject(ResponseHandler.createJsonObject(response), \"data\");\r\n                    generatedOrderId = ResponseHandler.getString(jsonObject, \"orderId\");\r\n                    Log.e(\"RoserPay Order Id\",generatedOrderId);\r\n                    sliderItem = ResponseHandler.getString(jsonObject, \"orderAmount\");\r\n                    currency = ResponseHandler.getString(jsonObject, \"currency\");\r\n                    setUpPaymentMethod();\r\n                } else {\r\n                    Toast.makeText(act,\"\"+ResponseHandler.getString(ResponseHandler.createJsonObject(response), \"message\"),Toast.LENGTH_LONG).show();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                isLoading = false;\r\n                Utility.dismissProgress();\r\n\r\n                Utility.showSnackBar(binding.rootBackground, act, \"There is something internal problem\");\r\n\r\n                error.printStackTrace();\r\n         //       String body;\r\n                //get status code here\r\n//                body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                //   Log.e(\"Error \", body);\r\n\r\n\r\n\r\n            }\r\n        }) {\r\n            /** Passing some request headers* */\r\n            @Override\r\n            public Map<String, String> getHeaders() {\r\n                Utility.Log(\"Header\", getHeader(CodeReUse.GET_JSON_HEADER).toString());\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n\r\n                hashMap.put(\"Authorization\",\"Bearer\"+preafManager.getUserToken());\r\n\r\n                return hashMap;\r\n\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"amount\", sliderItemList.getPriceForPay());\r\n               //hashMap.put(\"amount\", \"1\");\r\n                hashMap.put(\"currency\", \"INR\");\r\n\r\n                Utility.Log(\"Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(10000, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        stringRequest.setShouldCache(false);\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.getCache().clear();\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n\r\n\r\n\r\n    private void setUpPaymentMethod() {\r\n\r\n        Checkout checkout = new Checkout();\r\n        checkout.setImage(R.drawable.ic_launcher_icon);\r\n        final Activity activity = this;\r\n\r\n\r\n        try {\r\n            JSONObject options = new JSONObject();\r\n            options.put(\"name\", \"Brand Mania\");\r\n            //options.put(\"description\", \"Reference No. #123456\");\r\n            options.put(\"image\", \"https://s3.amazonaws.com/rzp-mobile/images/rzp.png\");\r\n            options.put(\"orderId\", generatedOrderId);\r\n            options.put(\"theme.color\", \"#ad2753\");\r\n            options.put(\"currency\", \"INR\");\r\n            //int amountInPaisa = Integer.parseInt(sliderItem) * 100;\r\n            options.put(\"amount\", String.valueOf(sliderItem));\r\n            options.put(\"prefill.email\", preafManager.getActiveBrand().getEmail());\r\n            options.put(\"prefill.contact\",\"Enter Mobile Number\");\r\n            Log.e(\"Param : \", options.toString());\r\n            checkout.open(activity, options);\r\n        } catch(Exception e) {\r\n            e.printStackTrace();\r\n            Log.e(\"TAG\", \"Error in starting Razorpay Checkout\", e);\r\n        }\r\n\r\n    }\r\n    @Override\r\n    public void onPaymentSuccess(String s, PaymentData paymentData) {\r\n        try {\r\n            Log.e(\"Payment Succcessful\", gson.toJson(paymentData));\r\n            orderIdStr = paymentData.getOrderId();\r\n\r\n            paymentIdStr = paymentData.getPaymentId();\r\n\r\n            signatureStr = paymentData.getSignature();\r\n\r\n            makeSubscription(\"0\");\r\n        }\r\n        catch (Exception e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onPaymentError(int i, String s, PaymentData paymentData) {\r\n        Log.e(\"Payment Fail\",s);\r\n        makeSubscription(\"1\");\r\n    }\r\n\r\n\r\n\r\n    public void makeSubscription(String subscription) {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Utility.Log(\"APi\", APIs.MAKE_PAYMENT);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.MAKE_PAYMENT, response -> {\r\n            isLoading = false;\r\n            Utility.dismissProgress();\r\n            Utility.Log(\"Make-subscription\", response);\r\n\r\n            //{\"status\":true,\"data\":\"\",\"message\":\"Subscription Added Successfully.\"}\r\n            if (ResponseHandler.isSuccess(response, null)) {\r\n                //paymentSuccess();\r\n                JSONObject jsonObject=ResponseHandler.createJsonObject(response);\r\n                Utility.showAlert(act, ResponseHandler.getString(jsonObject, \"message\"), \"Success\");\r\n\r\n            } else {\r\n                JSONObject jsonObject=ResponseHandler.createJsonObject(response);\r\n                Utility.showAlert(act, ResponseHandler.getString(jsonObject, \"message\"), \"Error\");\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                isLoading = false;\r\n                Utility.dismissProgress();\r\n\r\n                Utility.showSnackBar(binding.rootBackground, act, \"There is something internal problem\");\r\n\r\n                error.printStackTrace();\r\n             /*   String body;\r\n                //get status code here\r\n                body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                Log.e(\"Error \", body);*/\r\n\r\n\r\n            }\r\n        }) {\r\n            /** Passing some request headers* */\r\n            @Override\r\n            public Map<String, String> getHeaders() {\r\n                Utility.Log(\"Header\", getHeader(CodeReUse.GET_JSON_HEADER).toString());\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n\r\n                hashMap.put(\"Authorization\",\"Bearer\"+preafManager.getUserToken());\r\n\r\n                return hashMap;\r\n            }\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"brand\",sliderItemList.getBrandId());\r\n                hashMap.put(\"package\",sliderItemList.getPackageid());\r\n                hashMap.put(\"amount\",sliderItemList.getPriceForPay());\r\n                hashMap.put(\"total_amount\",sliderItemList.getPriceForPay());\r\n                hashMap.put(\"img_counter\",sliderItemList.getImageTitle());\r\n                hashMap.put(\"frame_counter\",sliderItemList.getTemplateTitle());\r\n                hashMap.put(\"is_pending\",subscription);\r\n                if (subscription.equals(\"0\")){\r\n                    hashMap.put(\"razorpay_payment_id\",paymentIdStr);\r\n                    Log.e(\"razorpay_payment_id\",paymentIdStr);\r\n\r\n\r\n                    if (signatureStr!=null) {\r\n                        hashMap.put(\"razorpay_signature\", signatureStr);\r\n                    }\r\n\r\n                }\r\n                hashMap.put(\"razorpay_order_id\",generatedOrderId);\r\n//\r\n              //  razorpay_payment_id, razorpay_order_id, razorpay_signature\r\n                Utility.Log(\"Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(\r\n                10000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        stringRequest.setShouldCache(false);\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.getCache().clear();\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    @Override\r\n    public void alertListenerClick() {\r\n        Intent i = new Intent(act, HomeActivity.class);\r\n        i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        startActivity(i);\r\n        overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n        finish();\r\n\r\n    }\r\n\r\n//    private void paymentSuccess() {\r\n//        DialogPaymentSubscriptionSuccessBinding helpDialog = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.dialog_payment_subscription_success, null, false);\r\n//        AlertDialog.Builder builder = new AlertDialog.Builder(act);\r\n//        builder.setView(helpDialog.getRoot());\r\n//        AlertDialog alertDialog = builder.create();\r\n//        alertDialog.setCancelable(false);\r\n//        alertDialog.setContentView(helpDialog.getRoot());\r\n//\r\n//        // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//\r\n//        if (examTypeModel == null) {\r\n//            if (subjectModel != null) {\r\n//\r\n//                //helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//            } else if (testSeries != null) {\r\n//                // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//            } else {\r\n//                // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//            }\r\n//        }  // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//\r\n//        if (examTypeModel != null) {\r\n//            //Utility.printHtmlText(examTypeModel.getName(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(examTypeModel.getName()));\r\n//\r\n//        } else if (subjectModel != null) {\r\n//            //Utility.printHtmlText(subjectModel.getName(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(subjectModel.getName()));\r\n//\r\n//        } else if (testSeries != null) {\r\n//            Utility.printHtmlText(testSeries.getName(), helpDialog.title);\r\n//            binding.titleTxt.setText(Utility.convertFirstUpperWord(testSeries.getName()));\r\n//        } else if (bookModel != null) {\r\n//            Utility.printHtmlText(bookModel.getTitle(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(bookModel.getTitle()));\r\n//        }\r\n//\r\n//        helpDialog.saveNNext.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                alertDialog.dismiss();\r\n//                onBackPressed();\r\n//            }\r\n//        });\r\n//\r\n//        alertDialog.show();\r\n//    }\r\n//\r\n//    private void paymentFails(String msg) {\r\n//        DialogPaymentFailsBinding helpDialog = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.dialog_payment_fails, null, false);\r\n//        AlertDialog.Builder builder = new AlertDialog.Builder(act);\r\n//        builder.setView(helpDialog.getRoot());\r\n//        AlertDialog alertDialog = builder.create();\r\n//        alertDialog.setCancelable(false);\r\n//        alertDialog.setContentView(helpDialog.getRoot());\r\n//\r\n//        // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//\r\n//        if (examTypeModel == null) {\r\n//            if (subjectModel != null) {\r\n//\r\n//                //helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//            } else if (testSeries != null) {\r\n//                // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//            } else {\r\n//                // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//            }\r\n//        }  // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//\r\n//        // helpDialog.text1.setText(msg);\r\n//        if (examTypeModel != null) {\r\n//\r\n//            Utility.printHtmlText(examTypeModel.getName(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(examTypeModel.getName()));\r\n//        } else if (subjectModel != null) {\r\n//            Utility.printHtmlText(subjectModel.getName(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(subjectModel.getName()));\r\n//        } else if (testSeries != null) {\r\n//            Utility.printHtmlText(testSeries.getName(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(testSeries.getName()));\r\n//\r\n//        } else if (bookModel != null) {\r\n//            Utility.printHtmlText(bookModel.getTitle(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(bookModel.getTitle()));\r\n//\r\n//        }\r\n//\r\n//        helpDialog.saveNNext.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                alertDialog.dismiss();\r\n//\r\n//            }\r\n//        });\r\n//\r\n//        alertDialog.show();\r\n//    }\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {CodeReUse.activityBackPress(act);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/RazorPayActivity.java	(revision 501064faadb223a77801b2f583c536f2c23c144c)
+++ app/src/main/java/com/app/brandmania/Activity/RazorPayActivity.java	(date 1608375402482)
@@ -1,15 +1,23 @@
 package com.app.brandmania.Activity;
 
+import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.databinding.DataBindingUtil;
 
 import android.app.Activity;
 import android.content.Intent;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
 import android.os.Bundle;
 import android.preference.PreferenceManager;
 import android.util.Log;
+import android.view.LayoutInflater;
 import android.view.View;
+import android.view.ViewGroup;
 import android.widget.Button;
+import android.widget.EditText;
+import android.widget.ImageView;
+import android.widget.TextView;
 import android.widget.Toast;
 
 import com.android.volley.DefaultRetryPolicy;
@@ -221,7 +229,30 @@
         makeSubscription("1");
     }
 
-
+    private void showUploadAadharDialog() {
+        //before inflating the custom alert dialog layout, we will get the current activity viewgroup
+        ViewGroup viewGroup = findViewById(android.R.id.content);
+        View dialogView = LayoutInflater.from(this).inflate(R.layout.payment_success, viewGroup, false);
+        AlertDialog.Builder builder = new AlertDialog.Builder(this, R.style.DialogTheme);
+        builder.setView(dialogView);
+        final AlertDialog alertDialog = builder.create();
+        TextView element3=dialogView.findViewById(R.id.element3);
+        TextView closeBtn=dialogView.findViewById(R.id.closeBtn);
+        element3.setText("Your current package is "+sliderItemList.getPackageTitle());
+        closeBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent i = new Intent(act, HomeActivity.class);
+                i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
+                startActivity(i);
+                overridePendingTransition(R.anim.right_enter, R.anim.left_out);
+                finish();
+            }
+        });
+        alertDialog.setCancelable(false);
+        alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
+        alertDialog.show();
+    }
 
     public void makeSubscription(String subscription) {
         if (isLoading)
@@ -237,9 +268,7 @@
             //{"status":true,"data":"","message":"Subscription Added Successfully."}
             if (ResponseHandler.isSuccess(response, null)) {
                 //paymentSuccess();
-                JSONObject jsonObject=ResponseHandler.createJsonObject(response);
-                Utility.showAlert(act, ResponseHandler.getString(jsonObject, "message"), "Success");
-
+                showUploadAadharDialog();
             } else {
                 JSONObject jsonObject=ResponseHandler.createJsonObject(response);
                 Utility.showAlert(act, ResponseHandler.getString(jsonObject, "message"), "Error");
Index: app/src/main/java/com/app/brandmania/Utils/Utility.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Utils;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.Dialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\n\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport com.app.brandmania.Activity.PackageActivity;\r\nimport com.app.brandmania.Activity.RazorPayActivity;\r\nimport com.app.brandmania.Activity.ViewBrandActivity;\r\nimport com.app.brandmania.Interface.IPaymentFlow;\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.app.brandmania.Activity.alertListenerCallback;\r\nimport com.app.brandmania.BuildConfig;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.databinding.DetailImageviewBinding;\r\nimport com.app.brandmania.databinding.DialogImageViewLayoutBinding;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\n\r\npublic class Utility {\r\n    public static Dialog dialog;\r\n    private static Dialog progressDialog;\r\n    public static void Log(String act, Object msg) {\r\n        Log.e(act, msg + \"\");\r\n    }\r\n\r\n    public static void RemoveError(EditText editText) {\r\n        editText.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void onTextChanged(CharSequence cs, int arg1, int arg2, int arg3) {\r\n                editText.setError(null);\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable editable) {\r\n            }\r\n\r\n            @Override\r\n            public void beforeTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {\r\n            }\r\n        });\r\n    }\r\n    public static void loadImageOnURI(Activity act, ImageView imageView, Uri uri) {\r\n        Glide.with(act)\r\n                .load(uri)\r\n                .placeholder(R.drawable.placeholder)\r\n                .error(R.drawable.placeholder)\r\n                .diskCacheStrategy(DiskCacheStrategy.ALL)\r\n                .override(1200, 1000)\r\n                .into(imageView);\r\n    }\r\n    public static void dismissProgress() {\r\n        try {\r\n            if (progressDialog != null && progressDialog.isShowing())\r\n                progressDialog.dismiss();\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static void sendMail(Activity act, String emailId, String contactNumber) {\r\n        Intent emailIntent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts(\r\n                \"mailto\", \"lakharasachin.qf@gmail.com\", null));\r\n        emailIntent.putExtra(Intent.EXTRA_SUBJECT, \"iSmart Homes Android app support\");\r\n\r\n        emailIntent.putExtra(Intent.EXTRA_TEXT, \"\" +\r\n                \"===========================\\n\" +\r\n                \"App Details\\n\" +\r\n                \"\\n\" +\r\n                \"App Version : \" + BuildConfig.VERSION_NAME + \"\\n\" +\r\n                \"Android Version : \" + Build.VERSION.SDK_INT + \"\\n\" +\r\n                \"Android Device : \" + Build.BRAND + \"\\n\" +\r\n                \"Android Device Model : \" + Build.MODEL + \"\\n\" +\r\n                \"Email : \" + emailId + \"\\n\" +\r\n                \"Mobile : \" + contactNumber + \"\\n\" +\r\n                \"===========================\\n\"\r\n        );\r\n           /*  emailIntent.putExtra(Intent.EXTRA_TEXT, \"\" +\r\n                    \"===========================\\n\" +\r\n                    \"App Details\\n\" +\r\n                    \"\\n\" +\r\n                    \"App Version : \" + BuildConfig.VERSION_NAME + \"\\n\" +\r\n                    \"Android Version : \" + Build.VERSION.SDK_INT + \"\\n\" +\r\n                    \"Android Device : \" + Build.BRAND + \"\\n\" +\r\n                    \"Android Device Model : \" + Build.MODEL + \"\\n\" +\r\n                    \"===========================\\n\"\r\n            );*/\r\n\r\n        act.startActivity(Intent.createChooser(emailIntent, \"Send email...\"));\r\n    }\r\n\r\n\r\n    public static void showProgress(Activity act) {\r\n\r\n        if (progressDialog != null && progressDialog.isShowing())\r\n            return;\r\n\r\n        progressDialog = new Dialog(act);\r\n        progressDialog.setContentView(R.layout.progress_bar_layout);\r\n        progressDialog.setCancelable(false);\r\n        act.runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                // Showing Alert Message\r\n                try {\r\n                    if (progressDialog != null && !progressDialog.isShowing())\r\n                        progressDialog.show();\r\n                } catch (RuntimeException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void showAlert(Activity act, String msg) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        ((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public static void showAlertForPackage(Activity act, String msg) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        Intent intent=new Intent(act, PackageActivity.class);\r\n                        intent.addCategory(Intent.CATEGORY_HOME);\r\n                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                        act.startActivity(intent);\r\n                        act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                        //((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public static void showAlertForPayment(Activity act, String msg) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        Intent intent=new Intent(act, ViewBrandActivity.class);\r\n                        intent.addCategory(Intent.CATEGORY_HOME);\r\n                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                        act.startActivity(intent);\r\n                        act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                        //((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n\r\n\r\n    public static void showAlert(Activity act, String msg, String flag) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        act.onBackPressed();\r\n                        ((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public static void fullScreenImageViewer(Activity act, String imageUrl) {\r\n        Log(\"Image url\", imageUrl + \"s\");\r\n        DetailImageviewBinding binding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.detail_imageview, null, false);\r\n        androidx.appcompat.app.AlertDialog alertDialog;\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(act, R.style.MyAlertDialogStyle);\r\n        builder.setView(binding.getRoot());\r\n        alertDialog = builder.create();\r\n        alertDialog.setContentView(binding.getRoot());\r\n        binding.CloseImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n\r\n        Glide.with(act).load(imageUrl).error(R.drawable.placeholder)\r\n                .placeholder(R.drawable.placeholder).into(binding.fullImageViewer);\r\n        alertDialog.show();\r\n\r\n    }\r\n\r\n    public static void showAlertNew(Activity act, String msg) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        act.onBackPressed();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public static boolean isNetworkAvailable(Context context) {\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();\r\n        return activeNetworkInfo != null && activeNetworkInfo.isConnected();\r\n    }\r\n\r\n    public static void showLoading(Activity act) {\r\n\r\n        if (dialog != null && dialog.isShowing())\r\n            return;\r\n\r\n        dialog = new Dialog(act);\r\n        dialog.getWindow().setBackgroundDrawableResource(\r\n                R.color.colorProgressOverlay);\r\n        dialog.setContentView(R.layout.dialog_loader);\r\n        dialog.setCancelable(false);\r\n        act.runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                // Showing Alert Message\r\n                try {\r\n                    if (dialog != null && !dialog.isShowing())\r\n                        dialog.show();\r\n                } catch (WindowManager.BadTokenException e) {\r\n                    e.printStackTrace();\r\n                } catch (RuntimeException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public static void dismissLoading() {\r\n        try {\r\n            if (dialog != null && dialog.isShowing())\r\n                dialog.dismiss();\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static boolean compareDate(String endDate) {\r\n        Date c = Calendar.getInstance().getTime();\r\n\r\n        SimpleDateFormat fmt = new SimpleDateFormat(\"dd-mm-yyyy\");\r\n        String currtDate = fmt.format(c);\r\n        try {\r\n\r\n            Date currentDate = fmt.parse(currtDate);\r\n            Date meetingDate = fmt.parse(endDate);\r\n            if (currentDate.compareTo(meetingDate) > 0) {\r\n                return true;\r\n            }\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static void rateApp(Activity act) {\r\n        Uri uri = Uri.parse(\"market://details?id=com.app.bespoke\");// + act.getPackageName());\r\n        Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);\r\n\r\n        goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |\r\n                Intent.FLAG_ACTIVITY_NEW_DOCUMENT |\r\n                Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\r\n        try {\r\n            act.startActivity(goToMarket);\r\n        } catch (ActivityNotFoundException e) {\r\n            act.startActivity(new Intent(Intent.ACTION_VIEW,\r\n                    Uri.parse(\"http://play.google.com/store/apps/details?id=com.app.bespoke\")));//+ act.getPackageName())));\r\n        }\r\n    }\r\n    private static OnImageViewDismiss viewDismiss;\r\n    public static void fullScreenImageViewerBitmap(Activity act, Bitmap imageUrl, OnImageViewDismiss viewDi) {\r\n        viewDismiss = viewDi;\r\n        DialogImageViewLayoutBinding binding = DataBindingUtil.inflate(LayoutInflater.from(act),\r\n                R.layout.dialog_image_view_layout, null, false);\r\n        androidx.appcompat.app.AlertDialog alertDialog;\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(act, R.style.MyAlertDialogStyle);\r\n        builder.setView(binding.getRoot());\r\n        alertDialog = builder.create();\r\n        alertDialog.setContentView(binding.getRoot());\r\n\r\n        binding.CloseImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n\r\n//        binding.fullImageViewer3.setImageBitmap(imageUrl);\r\n//        binding.fullImageViewer3.setVisibility(View.VISIBLE);\r\n//        binding.fullImageViewer.setVisibility(View.GONE);\r\n//\r\n//        binding.fullImageViewer3.setVisibility(View.VISIBLE);\r\n//        binding.fullImageViewer.setVisibility(View.GONE);\r\n\r\n\r\n        alertDialog.show();\r\n        alertDialog.setOnDismissListener(new DialogInterface.OnDismissListener() {\r\n            @Override\r\n            public void onDismiss(DialogInterface dialog) {\r\n                viewDismiss.onPhotoDialogDismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    public interface OnImageViewDismiss {\r\n        void onPhotoDialogDismiss();\r\n    }\r\n    public static void showSnackBar(View view, Activity act, String message) {\r\n        Snackbar snackbar = Snackbar\r\n                .make(view, message, Snackbar.LENGTH_LONG)\r\n                .setAction(\"OK\", new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n\r\n                    }\r\n                });\r\n        snackbar.setActionTextColor(ContextCompat.getColor(act, R.color.colorNavText));\r\n        snackbar.show();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Utils/Utility.java	(revision 501064faadb223a77801b2f583c536f2c23c144c)
+++ app/src/main/java/com/app/brandmania/Utils/Utility.java	(date 1608374832358)
@@ -203,6 +203,9 @@
                 })
                 .show();
     }
+
+
+
     public static void fullScreenImageViewer(Activity act, String imageUrl) {
         Log("Image url", imageUrl + "s");
         DetailImageviewBinding binding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.detail_imageview, null, false);
Index: app/src/main/res/layout/payment_success.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/payment_success.xml	(date 1608375131030)
+++ app/src/main/res/layout/payment_success.xml	(date 1608375131030)
@@ -0,0 +1,86 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout
+    android:paddingStart="@dimen/_20sdp"
+    android:background="@color/white"
+    android:paddingEnd="@dimen/_20sdp"
+    xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <ImageView
+        android:layout_marginTop="@dimen/_30sdp"
+        android:id="@+id/element1"
+        android:layout_centerHorizontal="true"
+        android:src="@drawable/payment_icon"
+        android:layout_width="@dimen/_50sdp"
+        android:layout_height="@dimen/_50sdp"/>
+
+
+    <TextView
+        android:id="@+id/element2"
+        android:layout_centerHorizontal="true"
+        android:layout_below="@+id/element1"
+        android:textSize="@dimen/_14sdp"
+        android:fontFamily="@font/inter_medium"
+        android:textColor="@color/black"
+        android:text="Payment Success"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"/>
+    <TextView
+        android:id="@+id/element3"
+        android:layout_marginTop="@dimen/_2sdp"
+        android:layout_below="@id/element2"
+        android:layout_centerHorizontal="true"
+        android:textStyle="bold"
+        android:text="Your Current Package is Basic"
+        android:fontFamily="@font/inter_regular"
+        android:textSize="@dimen/_13sdp"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"/>
+
+
+    <TextView
+        android:id="@+id/element4"
+        android:layout_below="@+id/element3"
+        android:layout_marginTop="@dimen/_5sdp"
+        android:textSize="@dimen/_10sdp"
+        android:textAlignment="center"
+        android:fontFamily="@font/inter_regular"
+        android:text="Our admin will contact you within 24 working hours to guide you and to provide new frame."
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"/>
+
+    <TextView
+
+        android:layout_centerHorizontal="true"
+        android:backgroundTint="@color/colorthird"
+        android:background="@drawable/buttoncornar"
+        android:layout_below="@id/element4"
+        android:id="@+id/closeBtn"
+        android:gravity="center"
+        android:layout_width="wrap_content"
+        android:layout_height="@dimen/_28sdp"
+        android:paddingStart="@dimen/_20sdp"
+        android:paddingEnd="@dimen/_20sdp"
+        android:layout_marginTop="@dimen/_20sdp"
+        android:fontFamily="@font/inter_regular"
+        android:text="Continue"
+        android:textColor="#FFF"
+        android:textAlignment="center"
+        android:textAllCaps="false"
+        android:textSize="@dimen/_11sdp"
+        />
+    <TextView
+        android:id="@+id/element5"
+        android:layout_below="@+id/closeBtn"
+        android:textSize="@dimen/_13sdp"
+        android:textStyle="bold"
+        android:textAlignment="center"
+        android:layout_marginTop="@dimen/_7sdp"
+        android:layout_centerHorizontal="true"
+        android:textColor="@color/colorPrimary"
+        android:fontFamily="@font/inter_bold"
+        android:text="Thank you!"
+        android:layout_marginBottom="@dimen/_30sdp"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"/>
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <!-- Base application theme. -->\r\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"android:windowTranslucentStatus\">true</item>\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/startcolor</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n        <item name=\"android:textColorSecondary\">@color/colorNavText</item>\r\n\r\n    </style>\r\n    <style name=\"AppTheme_Second\" parent=\"Theme.AppCompat.Light.NoActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimary</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n        <item name=\"android:textColorSecondary\">@color/colorNavText</item>\r\n\r\n    </style>\r\n    <style name=\"CustomViewAllTab\" parent=\"@android:style/TextAppearance.Widget.TabWidget\">\r\n        <item name=\"android:textSize\">@dimen/_10sdp</item>\r\n        <item name=\"android:fontFamily\">@font/montserratsemibold</item>\r\n    </style>\r\n    <style name=\"Style_TextView\">\r\n        <item name=\"fontFamily\">@font/montserratsemibold</item>\r\n    </style>\r\n    <style name=\"MyAlertDialogStyle_extend\" parent=\"MyAlertDialogStyle\">\r\n        <item name=\"android:textColor\">@color/colorPrimaryTransperent</item>\r\n        <item name=\"android:windowIsFloating\">false</item>\r\n        <item name=\"colorAccent\">@color/colorPrimaryTransperent</item>\r\n        <item name=\"android:windowBackground\">@color/colorPrimaryTransperent</item>\r\n        <item name=\"android:layout_gravity\">center_vertical</item>\r\n    </style>\r\n\r\n    <style name=\"MyTabLayout\" parent=\"Base.Widget.Design.TabLayout\">\r\n        <item name=\"tabTextAppearance\">@style/MyTabTextAppearance</item>\r\n    </style>\r\n    <style name=\"EditText\">\r\n        <item name=\"android:singleLine\">true</item>\r\n        <item name=\"colorControlNormal\">#FFFFFF</item>\r\n        <item name=\"colorControlActivated\">#FFFFFF</item>\r\n        <item name=\"android:textColorPrimary\">#FFFFFF</item>\r\n        <item name=\"android:textSize\">14sp</item>\r\n    </style>\r\n    <style name=\"Widget.MaterialComponents.FloatingActionButton\" parent=\"Widget.Design.FloatingActionButton\">\r\n        <item name=\"android:background\">@null</item>\r\n        <item name=\"enforceMaterialTheme\">true</item>\r\n        <item name=\"ensureMinTouchTargetSize\">true</item>\r\n        <item name=\"elevation\">@dimen/mtrl_fab_elevation</item>\r\n        <item name=\"backgroundTint\">?attr/colorSecondary</item>\r\n        <item name=\"tint\">?attr/colorOnSecondary</item>\r\n        <item name=\"hoveredFocusedTranslationZ\">@dimen/mtrl_fab_translation_z_hovered_focused</item>\r\n        <item name=\"pressedTranslationZ\">@dimen/mtrl_fab_translation_z_pressed</item>\r\n        <item name=\"rippleColor\">@color/mtrl_fab_ripple_color</item>\r\n        <item name=\"showMotionSpec\">@animator/mtrl_fab_show_motion_spec</item>\r\n        <item name=\"hideMotionSpec\">@animator/mtrl_fab_hide_motion_spec</item>\r\n        <item name=\"shapeAppearance\">?attr/shapeAppearanceSmallComponent</item>\r\n        <item name=\"shapeAppearanceOverlay\">\r\n            @style/ShapeAppearanceOverlay.MaterialComponents.FloatingActionButton\r\n        </item>\r\n    </style>\r\n    <style name=\"MyTabTextAppearance\" parent=\"TextAppearance.AppCompat.Button\">\r\n        <item name=\"android:textSize\">@dimen/_11sdp</item>\r\n        <item name=\"android:textAllCaps\">false</item>\r\n        <item name=\"fontFamily\">@font/inter_regular</item>\r\n\r\n    </style>\r\n\r\n    <style name=\"AppTheme_material_theme\" parent=\"Theme.MaterialComponents.Light.NoActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimary</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n    </style>\r\n    <style name=\"Widget.BottomNavigationView\"\r\n        parent=\"Widget.Design.BottomNavigationView\">\r\n        <item name=\"fontFamily\">@font/poppins_medium</item>\r\n        <item name=\"android:textSize\">@dimen/_10sdp</item>\r\n    </style>\r\n    <style name=\"ShapeAppearanceOverlay_card_custom_corners\" parent=\"\">\r\n        <item name=\"cornerFamily\">rounded</item>\r\n        <item name=\"cornerSizeTopRight\">@dimen/_10sdp</item>\r\n        <item name=\"background\">@color/colorNavText</item>\r\n        <item name=\"cornerSizeTopLeft\">@dimen/_10sdp</item>\r\n    </style>\r\n    <style name=\"CustomCardViewStyle\" parent=\"@style/Widget.MaterialComponents.CardView\">\r\n        <item name=\"shapeAppearanceOverlay\">@style/ShapeAppearanceOverlay_card_custom_corners</item>\r\n    </style>\r\n    <style name=\"helperTextAppearance\" parent=\"@android:style/TextAppearance\">\r\n        <item name=\"android:textColor\">@color/colorRed</item>\r\n        <item name=\"android:textSize\">@dimen/_8sdp</item>\r\n        <item name=\"android:fontFamily\">@font/poppins_medium</item>\r\n        <item name=\"android:layout_marginTop\">@dimen/_3sdp</item>\r\n        <item name=\"helperTextTextColor\">@color/colorRed</item>\r\n    </style>\r\n    <style name=\"AppThemeMyLight\" parent=\"Theme.AppCompat.Light\">\r\n        <item name=\"colorAccent\">@color/colorPrimaryDark</item>\r\n    </style>\r\n    <style name=\"AppTheme.PopupOverlay\" parent=\"ThemeOverlay.AppCompat.Light\" />\r\n    <style name=\"LoginTextInputLayoutStyle\" parent=\"Widget.MaterialComponents.TextInputLayout.OutlinedBox\">\r\n        <item name=\"boxStrokeColor\">@color/colorPrimary</item>\r\n        <item name=\"boxCornerRadiusTopStart\">@dimen/_20sdp</item>\r\n        <item name=\"hintTextColor\">@color/Graycolor</item>\r\n        <item name=\"android:layout_marginTop\">@dimen/_10sdp</item>\r\n        <item name=\"boxCornerRadiusTopEnd\">@dimen/_20sdp</item>\r\n        <item name=\"boxCornerRadiusBottomStart\">@dimen/_20sdp</item>\r\n        <item name=\"boxCornerRadiusBottomEnd\">@dimen/_20sdp</item>\r\n        <item name=\"android:backgroundTint\">@color/colorPrimary</item>\r\n        <item name=\"boxStrokeWidthFocused\">0.5dp</item>\r\n        <item name=\"boxStrokeWidth\">0.4dp</item>\r\n        <item name=\"boxBackgroundMode\">outline</item>\r\n        <item name=\"helperTextEnabled\">true</item>\r\n        <item name=\"helperTextTextColor\">@color/colorRed</item>\r\n        <item name=\"helperTextTextAppearance\">@style/helperTextAppearance</item>\r\n    </style>\r\n    <style name=\"RegistrationTextInputLayoutStyle\" parent=\"Widget.MaterialComponents.TextInputLayout.OutlinedBox\">\r\n        <item name=\"boxStrokeColor\">@color/colorNavText</item>\r\n        <item name=\"boxCornerRadiusTopStart\">@dimen/_20sdp</item>\r\n        <item name=\"hintTextColor\">@color/colorNavText</item>\r\n        <item name=\"android:layout_marginTop\">@dimen/_10sdp</item>\r\n        <item name=\"boxCornerRadiusTopEnd\">@dimen/_20sdp</item>\r\n        <item name=\"boxCornerRadiusBottomStart\">@dimen/_20sdp</item>\r\n        <item name=\"boxCornerRadiusBottomEnd\">@dimen/_20sdp</item>\r\n        <item name=\"android:backgroundTint\">@color/colorNavText</item>\r\n        <item name=\"boxStrokeWidthFocused\">0.5dp</item>\r\n        <item name=\"boxStrokeWidth\">1dp</item>\r\n        <item name=\"boxBackgroundMode\">outline</item>\r\n        <item name=\"helperTextEnabled\">true</item>\r\n        <item name=\"helperTextTextColor\">@color/colorthird</item>\r\n        <item name=\"helperTextTextAppearance\">@style/helperTextAppearance</item>\r\n           </style>\r\n    <style name=\"ToolbarStyle\">\r\n        <item name=\"android:layout_height\">@dimen/_70sdp</item>\r\n        <item name=\"android:layout_width\">match_parent</item>\r\n\r\n        <item name=\"android:orientation\">vertical</item>\r\n        <item name=\"android:title\" />\r\n        <item name=\"android:layout_marginStart\">-5dp</item>\r\n        <item name=\"contentInsetStart\">0dp</item>\r\n        <item name=\"contentInsetEnd\">0dp</item>\r\n\r\n        <item name=\"contentInsetStartWithNavigation\">0dp</item>\r\n    </style>\r\n    <style name=\"textLayoutForDescription\" parent=\"Widget.MaterialComponents.TextInputLayout.OutlinedBox\">\r\n        <item name=\"boxStrokeColor\">@color/colorPrimary</item>\r\n        <item name=\"hintTextColor\">@color/Graycolor</item>\r\n        <item name=\"boxCornerRadiusTopStart\">@dimen/_2sdp</item>\r\n        <item name=\"boxCornerRadiusTopEnd\">@dimen/_2sdp</item>\r\n        <item name=\"boxCornerRadiusBottomStart\">@dimen/_2sdp</item>\r\n        <item name=\"boxCornerRadiusBottomEnd\">@dimen/_2sdp</item>\r\n        <item name=\"android:backgroundTint\">@color/colorPrimary</item>\r\n        <item name=\"boxStrokeWidthFocused\">0.5dp</item>\r\n        <item name=\"boxStrokeWidth\">0.4dp</item>\r\n        <item name=\"boxBackgroundMode\">outline</item>\r\n        <item name=\"android:layout_marginTop\">@dimen/_10sdp</item>\r\n        <item name=\"helperTextEnabled\">true</item>\r\n        <item name=\"helperTextTextColor\">@color/colorRed</item>\r\n        <item name=\"helperTextTextAppearance\">@style/helperTextAppearance</item>\r\n    </style>\r\n    <style name=\"error_appearance\" parent=\"@android:style/TextAppearance\">\r\n        <item name=\"android:tint\">@color/colorthird</item>\r\n        <item name=\"android:backgroundTint\">@color/colorthird</item>\r\n        <item name=\"android:tintMode\">@color/colorthird</item>\r\n\r\n        <item name=\"android:textSize\">12sp</item>\r\n    </style>\r\n    <style name=\"MyAlertDialogStyle\" parent=\"Theme.AppCompat.Light.Dialog.Alert\">\r\n        <item name=\"android:textColor\">@color/colorPrimaryTransperent</item>\r\n        <item name=\"android:windowIsFloating\">false</item>\r\n        <item name=\"colorAccent\">@color/colorPrimaryTransperent</item>\r\n        <item name=\"android:windowBackground\">@color/colorPrimaryTransperent</item>\r\n        <item name=\"android:layout_gravity\">bottom</item>\r\n    </style>\r\n\r\n\r\n    <style name=\"progressStyles\" parent=\"Theme.AppCompat.Light\">\r\n        <item name=\"colorAccent\">@color/colorPrimary</item>\r\n    </style>\r\n\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision 501064faadb223a77801b2f583c536f2c23c144c)
+++ app/src/main/res/values/styles.xml	(date 1608374908211)
@@ -177,5 +177,15 @@
         <item name="colorAccent">@color/colorPrimary</item>
     </style>
 
+    <style name="DialogTheme" parent="android:Theme.Dialog">
 
+        <item name="android:layout_width">fill_parent</item>
+        <item name="android:layout_height">fill_parent</item>
+        <item name="android:layout_centerInParent">true</item>
+
+        <!-- No backgrounds, titles or window float -->
+        <!--  <item name="android:windowNoTitle">true</item>
+<item name="android:windowBackground">@null</item>
+     <item name="android:windowIsFloating">false</item>-->
+    </style>
 </resources>
\ No newline at end of file
