Index: app/src/main/java/com/app/brandmania/Activity/basics/ReferNEarnActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity.basics;\r\n\r\nimport android.app.Activity;\r\nimport android.content.ClipData;\r\nimport android.content.ClipboardManager;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Activity.HomeActivity;\r\nimport com.app.brandmania.Common.MakeMyBrandApp;\r\nimport com.app.brandmania.Common.ObserverActionID;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.databinding.ActivityReferBinding;\r\nimport com.app.brandmania.utils.APIs;\r\nimport com.app.brandmania.utils.Utility;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.dynamiclinks.FirebaseDynamicLinks;\r\nimport com.google.firebase.dynamiclinks.ShortDynamicLink;\r\nimport com.google.firebase.messaging.FirebaseMessaging;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class ReferNEarnActivity extends BaseActivity {\r\n\r\n    Activity act;\r\n    private String deviceToken = \"\";\r\n    private ActivityReferBinding binding;\r\n    PreafManager preafManager;\r\n\r\n    public void getDeviceToken(Activity act) {\r\n        Utility.showProgress(act);\r\n        FirebaseMessaging.getInstance().getToken().addOnCompleteListener(new OnCompleteListener<String>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<String> task) {\r\n                deviceToken = task.getResult();\r\n                UpdateToken();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n        Window w = getWindow();\r\n        getDeviceToken(act);\r\n//        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n//        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_refer);\r\n        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        preafManager = new PreafManager(act);\r\n        Log.w(preafManager.getReferCode(), \"data\");\r\n        binding.referalCodeTxt.setText(preafManager.getReferCode());\r\n        binding.walletMoney.setText(preafManager.getWallet());\r\n        binding.referalCodeTxt.setTextIsSelectable(true);\r\n        binding.msgTxt.setText(\"Refer a friend earn discount of all your friends purchases for 1 year. your friends also earn \" + act.getString(R.string.Rs) + preafManager.getWallet() + \" on Sign-up.\");\r\n        binding.BackButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(act, HomeActivity.class);\r\n                startActivity(i);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        binding.shareIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n             /*   Intent shareIntent = new Intent(android.content.Intent.ACTION_SEND);\r\n                shareIntent.setType(\"text/plain\");\r\n                String sharebody = preafManager.getReferCode();\r\n                String sharebody = preafManager.getReferCode();\r\n                // shareIntent.putExtra(Intent.EXTRA_SUBJECT,\"Insert Subject here\");\r\n                String app_url = \"https://play.google.com/store/apps/details?id=com.make.mybrand\";\r\n                shareIntent.putExtra(Intent.EXTRA_SUBJECT, app_url);\r\n                shareIntent.putExtra(android.content.Intent.EXTRA_TEXT, sharebody);\r\n                startActivity(Intent.createChooser(shareIntent, \"Share via\"));  */\r\n                shortenLongLink();\r\n            }\r\n        });\r\n\r\n        binding.referalCodeTxt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                ClipboardManager clipboard = (ClipboardManager) getSystemService(Context.CLIPBOARD_SERVICE);\r\n                ClipData clip = ClipData.newPlainText(\"label\", binding.referalCodeTxt.getText().toString());\r\n                if (clipboard == null || clip == null) return;\r\n                clipboard.setPrimaryClip(clip);\r\n                Toast.makeText(act, \"Copied\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void shortenLongLink() {\r\n\r\n        String shareLinkText = \"https://brandmania.page.link/?\" +\r\n                \"link=http://www.queryfinders.com?refer=\" + preafManager.getReferCode() +\r\n                \"&apn=\" + getPackageName() +\r\n                \"&st=\" + \"Referral Code\" +\r\n                \"&sd=\" + \"Earn Rewards\" +\r\n                \"&si=\" + \"http://queryfinders.com/brandmania/brandMania/website/images/refer_and_earn_brandmania_mobile_app_play_store.png\";\r\n\r\n\r\n        Task<ShortDynamicLink> shortLinkTask = FirebaseDynamicLinks.getInstance().createDynamicLink()\r\n                .setLongLink(Uri.parse(shareLinkText))\r\n                .buildShortDynamicLink()\r\n\r\n                .addOnCompleteListener(this, new OnCompleteListener<ShortDynamicLink>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<ShortDynamicLink> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Short link created\r\n                            Uri shortLink = task.getResult().getShortLink();\r\n                            Uri flowchartLink = task.getResult().getPreviewLink();\r\n                            Log.e(\"shortLink\", String.valueOf(shortLink));\r\n                            Log.e(\"flowchartLink\", String.valueOf(flowchartLink));\r\n                            shareLink(shortLink);\r\n                        } else {\r\n                            Log.e(\"error\", gson.toJson(task));\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void UpdateToken() {\r\n        Utility.Log(\"TokenURL\", APIs.UPDATE_TOKEN);\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.UPDATE_TOKEN, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.Log(\"UPDATE_TOKENnn\", response);\r\n                Utility.dismissProgress();\r\n                // {\"status\":true,\"data\":[{\"id\":1,\"video_url_path\":\"http:\\/\\/queryfinders.com\\/brandmania_uat\\/public\\/storage\\/uploads\\/video\\/Skype_Video.mp4\"}],\"message\":\"Device Token Updated.\"}\r\n                JSONObject jsonObject = ResponseHandler.createJsonObject(response);\r\n                try {\r\n                    JSONObject jsonArray1 = jsonObject.getJSONObject(\"message\");\r\n                    preafManager.setWallet(jsonArray1.getString(\"user_total_coin\"));\r\n                    if (jsonArray1.getString(\"reference_code\").equals(\"null\"))\r\n                        jsonArray1.put(\"reference_code\", \"\");\r\n\r\n                    preafManager.setReferCode(jsonArray1.getString(\"referal_code\"));\r\n                    preafManager.setSpleshReferrer(jsonArray1.getString(\"reference_code\"));\r\n                    preafManager.setReferrerCode(jsonArray1.getString(\"reference_code\"));\r\n                    binding.referalCodeTxt.setText(jsonArray1.getString(\"referal_code\"));\r\n                    binding.walletMoney.setText(jsonArray1.getString(\"user_total_coin\"));\r\n                    //setupReferrerCode();\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                Utility.dismissProgress();\r\n                error.printStackTrace();\r\n            }\r\n        }) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                return params;\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"firebase_token\", deviceToken);\r\n                Utility.Log(\"Verify-Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    public void shareLink(Uri myDynamicLink) {\r\n        // [START ddl_share_link]\r\n        Intent sendIntent = new Intent();\r\n        String msg = \"Hello!! I invite you to use Brandmania app.\\n\" +\"\\n\" +\r\n                \"Use bellow link to download and get assured discount on your payment.\\n\" +\r\n                \"\\n\" +\r\n                \"Brand mania app is used to make social media marketing image for your business in 5 minutes. Here Festival images, National and International Days images will be provided.\\n\" +\r\n                \"\\n\"+\"Referral code: \"+\r\n                preafManager.getReferCode() +\"\\n\"+\"Try it now:\\n\"+ myDynamicLink ;\r\n        sendIntent.setAction(Intent.ACTION_SEND);\r\n        sendIntent.putExtra(Intent.EXTRA_TEXT, msg);\r\n        sendIntent.setType(\"text/plain\");\r\n        startActivity(sendIntent);\r\n        // [END ddl_share_link]\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/app/brandmania/Activity/basics/ReferNEarnActivity.java b/app/src/main/java/com/app/brandmania/Activity/basics/ReferNEarnActivity.java
--- a/app/src/main/java/com/app/brandmania/Activity/basics/ReferNEarnActivity.java	(revision 806497dfa314bd830e2d208d0b45966a214d09f3)
+++ b/app/src/main/java/com/app/brandmania/Activity/basics/ReferNEarnActivity.java	(date 1632472364453)
@@ -79,6 +79,8 @@
         binding.referalCodeTxt.setText(preafManager.getReferCode());
         binding.walletMoney.setText(preafManager.getWallet());
         binding.referalCodeTxt.setTextIsSelectable(true);
+        //Refer a friend and earn discount of all your friend's first payment. Your friend will get assured discount on their first payment.
+        //change msg, add (-) to discount ,sticky bar in refer
         binding.msgTxt.setText("Refer a friend earn discount of all your friends purchases for 1 year. your friends also earn " + act.getString(R.string.Rs) + preafManager.getWallet() + " on Sign-up.");
         binding.BackButton.setOnClickListener(new View.OnClickListener() {
             @Override
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable-v24/giflayout_shape.xml\" value=\"0.13243243243243244\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable-v24/reffer_bottom_button_shap.xml\" value=\"0.13783783783783785\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable/background_with_shadow.xml\" value=\"0.13783783783783785\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable/buttoncornar.xml\" value=\"0.13783783783783785\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable/card_bottom_button.xml\" value=\"0.13783783783783785\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable/colorboxtroundcorner.xml\" value=\"0.13783783783783785\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable/couponerectangleshape.xml\" value=\"0.13243243243243244\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable/ic_editor_cancel.xml\" value=\"0.13783783783783785\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable/ic_editor_cancel_refer.xml\" value=\"0.13783783783783785\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable/imagecirclebackgroundshapwhite.xml\" value=\"0.13783783783783785\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable/referral_background_home_fragment.xml\" value=\"0.13243243243243244\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable/reffer_bottom_button_shap.xml\" value=\"0.13783783783783785\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable/refferrer_indicatorshap.xml\" value=\"0.13783783783783785\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/drawable/roundedbottomsheet_background.xml\" value=\"0.13783783783783785\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_add_brandd.xml\" value=\"0.12195945945945946\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_brand_list.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_custom_view_all.xml\" value=\"0.12195945945945946\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_daily_images.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_home.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_login.xml\" value=\"0.19635416666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_main.xml\" value=\"0.19635416666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_package.xml\" value=\"0.19635416666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_pdf.xml\" value=\"0.12195945945945946\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_razor_pay.xml\" value=\"0.18\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_refer.xml\" value=\"0.18072916666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_registration.xml\" value=\"0.18\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_subscription.xml\" value=\"0.18\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_update_band_list.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_view_all_frame_image.xml\" value=\"0.12195945945945946\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_view_all_image.xml\" value=\"0.17\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/activity_view_gif_details.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/adapter_photosfolder.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/bottom_sheet_referrer_layout.xml\" value=\"0.19635416666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/category_frame_tab.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/category_tab.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/custom_image_tab.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/dashboard_item_layout.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/detail_imageview.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/dialog_image_view_layout.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/dialog_no_internet_connection.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/dialog_upgrade_download_limit_expire.xml\" value=\"0.12195945945945946\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/dialog_upgrade_layout_enterprise.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/dialog_upgrade_layout_packege_expired.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/dialog_upgrade_layout_second.xml\" value=\"0.18\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/downloadlis_tab.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/fragment_home.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/fragment_images.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/fragment_list_bottom_list.xml\" value=\"0.12736486486486487\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/fragment_profile.xml\" value=\"0.19635416666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/fragment_refferrer_bottom.xml\" value=\"0.18\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/frame_tab.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/item_download_grid.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/item_layout_daily_images.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/item_layout_daily_round_images.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/item_layout_frame.xml\" value=\"0.12195945945945946\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/item_layout_home.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/item_layout_viewallframe.xml\" value=\"0.12195945945945946\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/item_layout_viewallimage.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/item_list_layout.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/item_simmer_visitors_layout.xml\" value=\"0.12195945945945946\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/layout_for_load_five.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/layout_for_load_one.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/slide_item_container.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/tab_custom.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/tab_daily.xml\" value=\"0.21\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/viewpager.xml\" value=\"0.11182432432432432\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable-v24/rounded_border_text_view.xml\" value=\"0.2305921052631579\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/background_with_shadow.xml\" value=\"0.24177631578947367\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/card_bottom_button.xml\" value=\"0.24177631578947367\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/coupon_success.xml\" value=\"0.24177631578947367\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/couponerectangleshape.xml\" value=\"0.24177631578947367\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/footer_background.xml\" value=\"0.2305921052631579\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/ic_cash.xml\" value=\"0.24177631578947367\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/ic_code_share.xml\" value=\"0.24177631578947367\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/ic_referrel_illustration.xml\" value=\"0.24177631578947367\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/refer_rectangle_shape.xml\" value=\"0.24177631578947367\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/referral_background_home_fragment.xml\" value=\"0.24177631578947367\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/roundbackground.xml\" value=\"0.2305921052631579\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/shapeee_round_cornar.xml\" value=\"0.24177631578947367\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/share_background.xml\" value=\"0.24177631578947367\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/video_feaure_background.xml\" value=\"0.24177631578947367\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/activity_package.xml\" value=\"0.23157894736842105\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/activity_razor_pay.xml\" value=\"0.23157894736842105\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/activity_refer.xml\" value=\"0.23157894736842105\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/activity_subscription.xml\" value=\"0.23157894736842105\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/activity_view_all_image.xml\" value=\"0.22039473684210525\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/fragment_home.xml\" value=\"0.23157894736842105\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/fragment_profile.xml\" value=\"0.23157894736842105\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/frame_tab.xml\" value=\"0.22039473684210525\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/layout_for_load_five.xml\" value=\"0.22039473684210525\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/layout_for_load_four.xml\" value=\"0.22039473684210525\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/layout_for_load_one.xml\" value=\"0.22039473684210525\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/layout_for_load_three.xml\" value=\"0.22039473684210525\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/layout_for_load_two.xml\" value=\"0.22039473684210525\" />\r\n        <entry key=\"..\\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/layout/slide_item_container.xml\" value=\"0.23157894736842105\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 806497dfa314bd830e2d208d0b45966a214d09f3)
+++ b/.idea/misc.xml	(date 1632472364459)
@@ -69,6 +69,8 @@
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/tab_custom.xml" value="0.11182432432432432" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/tab_daily.xml" value="0.21" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaVersion5/app/src/main/res/layout/viewpager.xml" value="0.11182432432432432" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania5/app/src/main/res/layout/activity_refer.xml" value="0.36666666666666664" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania5/app/src/main/res/layout/activity_registration.xml" value="0.28396739130434784" />
         <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable-v24/rounded_border_text_view.xml" value="0.2305921052631579" />
         <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/background_with_shadow.xml" value="0.24177631578947367" />
         <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandManiaVersion4/app/src/main/res/drawable/card_bottom_button.xml" value="0.24177631578947367" />
Index: app/src/main/java/com/app/brandmania/Activity/packages/PackageActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity.packages;\r\n\r\nimport android.app.Activity;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.viewpager2.widget.CompositePageTransformer;\r\nimport androidx.viewpager2.widget.MarginPageTransformer;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Adapter.SliderAdapter;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.SliderItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.utils.APIs;\r\nimport com.app.brandmania.utils.CodeReUse;\r\nimport com.app.brandmania.utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityPackageBinding;\r\nimport com.google.gson.Gson;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class PackageActivity extends BaseActivity {\r\n    private Activity act;\r\n    private ActivityPackageBinding  binding;\r\n    private int[] layouts;\r\n    PreafManager preafManager;\r\n    private boolean isLoading = false;\r\n    ArrayList<SliderItem>sliderItems=new ArrayList<>();\r\n    BrandListItem selectedBrand;\r\n    Gson gson;\r\n    int layoutType=0;\r\n    //0 = profile,viewall, 2= brand list\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n        gson=new Gson();\r\n        preafManager=new PreafManager(act);\r\n        if (getIntent().hasExtra(\"fromBrandList\")){\r\n            layoutType=2;\r\n            selectedBrand=gson.fromJson(getIntent().getStringExtra(\"detailsObj\"),BrandListItem.class);\r\n        }\r\n        else{\r\n            //for profile\r\n            layoutType=0;\r\n            selectedBrand=preafManager.getActiveBrand();\r\n        }\r\n\r\n      //  getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_package);\r\n        binding.BackButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n        GetPackageList();\r\n\r\n    }\r\n    private void GetPackage() {\r\n\r\n        binding.viewPagerImageSlider.setAdapter(new SliderAdapter(sliderItems,act,selectedBrand));\r\n        binding.viewPagerImageSlider.setClipToPadding(false);\r\n        binding.viewPagerImageSlider.setClipChildren(false);\r\n        binding.viewPagerImageSlider.setOffscreenPageLimit(2);\r\n        binding.viewPagerImageSlider.getChildAt(0).setOverScrollMode(RecyclerView.OVER_SCROLL_NEVER);\r\n\r\n        CompositePageTransformer compositePageTransformer=new CompositePageTransformer();\r\n        compositePageTransformer.addTransformer(new MarginPageTransformer(40));\r\n        compositePageTransformer.addTransformer(new ViewPager2.PageTransformer() {\r\n            @Override\r\n            public void transformPage(@NonNull View page, float position) {\r\n                float r=1 - Math.abs(position);\r\n                page.setScaleY(0.85f + r * 0.15f);\r\n            }\r\n        });\r\n        binding.viewPagerImageSlider.setPageTransformer(compositePageTransformer);\r\n\r\n    }\r\n\r\n\r\n    private void GetPackageList() {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Utility.Log(\"API : \", APIs.GET_PACKAGE);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, APIs.GET_PACKAGE, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                isLoading = false;\r\n                Utility.dismissProgress();\r\n                Utility.Log(\"GET_PACKAGE : \", response);\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    sliderItems = ResponseHandler.HandleGetPackageList(jsonObject);\r\n                    if (sliderItems != null && sliderItems.size() != 0) {\r\n                        GetPackage();\r\n                    }\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        error.printStackTrace();\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n    @Override public void onBackPressed() {\r\n        CodeReUse.activityBackPress(act);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/app/brandmania/Activity/packages/PackageActivity.java b/app/src/main/java/com/app/brandmania/Activity/packages/PackageActivity.java
--- a/app/src/main/java/com/app/brandmania/Activity/packages/PackageActivity.java	(revision 806497dfa314bd830e2d208d0b45966a214d09f3)
+++ b/app/src/main/java/com/app/brandmania/Activity/packages/PackageActivity.java	(date 1632472364464)
@@ -49,25 +49,24 @@
     BrandListItem selectedBrand;
     Gson gson;
     int layoutType=0;
-    //0 = profile,viewall, 2= brand list
     @Override
     public void onCreate(Bundle savedInstanceState) {
         setTheme(R.style.AppTheme_material_theme);
         super.onCreate(savedInstanceState);
         act = this;
         gson=new Gson();
+
         preafManager=new PreafManager(act);
+
         if (getIntent().hasExtra("fromBrandList")){
             layoutType=2;
             selectedBrand=gson.fromJson(getIntent().getStringExtra("detailsObj"),BrandListItem.class);
         }
         else{
-            //for profile
             layoutType=0;
             selectedBrand=preafManager.getActiveBrand();
         }
 
-      //  getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);
         binding = DataBindingUtil.setContentView(act, R.layout.activity_package);
         binding.BackButton.setOnClickListener(new View.OnClickListener() {
             @Override
Index: app/src/main/java/com/app/brandmania/Activity/packages/RazorPayActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity.packages;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.text.Html;\r\nimport android.text.InputFilter;\r\nimport android.text.Spannable;\r\nimport android.text.SpannableString;\r\nimport android.text.Spanned;\r\nimport android.text.style.ForegroundColorSpan;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Activity.HomeActivity;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Common.MySingleton;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Interface.alertListenerCallback;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.SliderItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.utils.APIs;\r\nimport com.app.brandmania.utils.CodeReUse;\r\nimport com.app.brandmania.utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityRazorPayBinding;\r\nimport com.app.brandmania.databinding.ItemServiceLayoutBinding;\r\nimport com.google.android.material.bottomsheet.BottomSheetDialog;\r\nimport com.google.gson.Gson;\r\nimport com.razorpay.Checkout;\r\nimport com.razorpay.PaymentData;\r\nimport com.razorpay.PaymentResultWithDataListener;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Observable;\r\n\r\npublic class RazorPayActivity extends BaseActivity implements PaymentResultWithDataListener, alertListenerCallback {\r\n    Activity act;\r\n    Button pay;\r\n    public static int BUSINESS_TYPE = 1;\r\n    private String BusinessTitle;\r\n    private ActivityRazorPayBinding binding;\r\n    String calculateAmount;\r\n    SliderItem sliderItemList;\r\n    BrandListItem brandListItem;\r\n    private String amountToPay;\r\n    Gson gson;\r\n    public String discount;\r\n    public String type;\r\n    public String code;\r\n    public String code_type;\r\n    public String discounted_amount;\r\n    public String total_amount;\r\n    public String brand_id;\r\n    public String package_id;\r\n    public String promocode;\r\n    public static String CouponCode = \"#brandmania25\";\r\n    public static String codetype = \"per\";\r\n    private boolean isLoading = false;\r\n    private String orderIdStr;\r\n    private String paymentIdStr;\r\n    private String signatureStr;\r\n    private String payment_id;\r\n    private String generatedOrderId;\r\n    private String currency = \"INR\";\r\n    PreafManager preafManager;\r\n    private RazorPayActivity razorPayActivity;\r\n    private BottomSheetDialog bottomSheetDialog;\r\n    private BrandListItem selectedBrand;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_razor_pay);\r\n        Checkout.preload(getApplicationContext());\r\n        razorPayActivity = this;\r\n        preafManager = new PreafManager(this);\r\n        gson = new Gson();\r\n        sliderItemList = gson.fromJson(getIntent().getStringExtra(\"detailsObj\"), SliderItem.class);\r\n        selectedBrand = gson.fromJson(getIntent().getStringExtra(\"BrandListItem\"), BrandListItem.class);\r\n        Gson gson = new Gson();\r\n        Log.e(\"EEEE\", gson.toJson(sliderItemList));\r\n        //binding.promoCodeTxt.setFilters(new InputFilter[]{new InputFilter.AllCaps()});\r\n        binding.BackButtonMember.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n\r\n        calculateAmount = sliderItemList.getPriceForPay();\r\n        createPayment();\r\n        binding.proceedToPayment.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                generateOrderID();\r\n            }\r\n        });\r\n\r\n        //showActivityList(BUSINESS_TYPE, BusinessTitle);\r\n\r\n        showReferrer();\r\n\r\n        if (sliderItemList != null) {\r\n\r\n            binding.packageNameTxt.setText(sliderItemList.getPackageTitle());\r\n            binding.durationTxt.setText(sliderItemList.getDuration());\r\n            Log.e(\"Services\", new Gson().toJson(sliderItemList.getSlideSubItems()));\r\n            for (int i = 0; i < sliderItemList.getSlideSubItems().size(); i++) {\r\n                addDynamicServices(sliderItemList.getSlideSubItems().get(i).getName());\r\n            }\r\n            addDynamicServices(sliderItemList.getImageTitle() + \" Images Download / Year\");\r\n            addDynamicServices(act.getString(R.string.Rs) + sliderItemList.getPayTitle() + \" / \" + sliderItemList.getDuration());\r\n\r\n            //show for one month count\r\n            binding.actualPriceTxt.setText(act.getString(R.string.Rs) + sliderItemList.getPriceForPay());\r\n            calculateAmount = sliderItemList.getPriceForPay();\r\n\r\n            if (!selectedBrand.getIs_payment_pending().isEmpty()\r\n                    && selectedBrand.getIs_payment_pending().equalsIgnoreCase(\"0\")\r\n                    && Utility.monthsBetweenDates(selectedBrand.getSubscriptionDate()) < 1) {\r\n\r\n                int actualPrice = Integer.parseInt(sliderItemList.getPriceForPay());\r\n                int previousPackagePrice = Integer.parseInt(preafManager.getActiveBrand().getRate());\r\n                if (actualPrice > previousPackagePrice) {\r\n                    int countedPrice = actualPrice - previousPackagePrice;\r\n                    calculateAmount = String.valueOf(countedPrice);\r\n                    Log.e(\"test\", gson.toJson(preafManager.getActiveBrand()));\r\n                    Log.e(\"Price\", preafManager.getActiveBrand().getRate() + \" - \" + sliderItemList.getPriceForPay());\r\n                    binding.discountedAmountLayout.setVisibility(View.GONE);\r\n                    binding.prevAmount.setText(preafManager.getActiveBrand().getPackagename());\r\n                    binding.prevAmount.setText(act.getString(R.string.Rs) + preafManager.getActiveBrand().getRate());\r\n                    binding.previousLayout.setVisibility(View.VISIBLE);\r\n                    binding.noticeTxt.setVisibility(View.VISIBLE);\r\n                    //- and rs icon with red colour\r\n                    binding.noticeTxt.setText(\"Your currently active package is \\\"\" + preafManager.getActiveBrand().getPackagename() + \"\\\". so your previous paid amount will be deducted. As It was purchased within one month\");\r\n                }\r\n            }\r\n            binding.finalAmountTxt.setText(act.getString(R.string.Rs) + calculateAmount);\r\n        }\r\n\r\n        binding.applyBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                verifyCode(binding.promoCodeTxt.getText().toString());\r\n            }\r\n        });\r\n\r\n\r\n        binding.cancleBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                calculateAmount = sliderItemList.getPriceForPay();\r\n                code = null;\r\n                if (selectedBrand.getSubscriptionDate() != null\r\n                        && !selectedBrand.getSubscriptionDate().isEmpty() &&\r\n                        Utility.monthsBetweenDates(selectedBrand.getSubscriptionDate()) < 1) {\r\n\r\n                    int actualPrice = Integer.parseInt(sliderItemList.getPriceForPay());\r\n                    int previousPackagePrice = Integer.parseInt(preafManager.getActiveBrand().getRate());\r\n                    if (actualPrice > previousPackagePrice) {\r\n                        int countedPrice = actualPrice - previousPackagePrice;\r\n                        calculateAmount = String.valueOf(countedPrice);\r\n                        Log.e(\"Price\", preafManager.getActiveBrand().getRate() + \" - \" + sliderItemList.getPriceForPay());\r\n                        binding.discountedAmountLayout.setVisibility(View.GONE);\r\n                        binding.prevAmount.setText(preafManager.getActiveBrand().getPackagename());\r\n                        binding.prevAmount.setText(act.getString(R.string.Rs) + preafManager.getActiveBrand().getRate());\r\n                        binding.previousLayout.setVisibility(View.VISIBLE);\r\n                        binding.noticeTxt.setVisibility(View.VISIBLE);\r\n                        //- and rs icon with red colpr\r\n                        binding.noticeTxt.setText(\"Your currently active package is \\\"\" + preafManager.getActiveBrand().getPackagename() + \"\\\". so your previous paid amount will be deducted. As It was purchased within one month\");\r\n                    }\r\n                }\r\n\r\n                binding.finalAmountTxt.setText(act.getString(R.string.Rs) + calculateAmount);\r\n                binding.applypromoEditTxt.setVisibility(View.GONE);\r\n                binding.dicountLayout.setVisibility(View.GONE);\r\n                binding.promoEditTxt.setVisibility(View.VISIBLE);\r\n            }\r\n        });\r\n    }\r\n\r\n    /*   @Override\r\n       public void update(Observable observable, Object data) {\r\n\r\n           if (MakeMyBrandApp.getInstance().getObserver().getValue() == ObserverActionID.REFRESH_BRAND_NAME) {\r\n               getBrandList();\r\n           }\r\n\r\n       }*/\r\n    @Override\r\n    public void update(Observable observable, Object data) {\r\n        super.update(observable, data);\r\n\r\n        act.runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (myBrandApp.getObserver().getValue() == Constant.SELECTEDREFFERCODE) {\r\n                    binding.promoCodeTxt.setText(preafManager.getReferrerCode());\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void showReferrer() {\r\n         if (preafManager.getSpleshReferrer() != null && !preafManager.getSpleshReferrer().isEmpty() && preafManager.getSpleshReferrer().equalsIgnoreCase(\"null\")) {\r\n            verifyCode(preafManager.getSpleshReferrer());\r\n        }\r\n    }\r\n\r\n    private void createPayment() {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showLoadingTran(act);\r\n        Utility.Log(\"APi\", APIs.CREATE_PAYMENT);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.CREATE_PAYMENT, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                isLoading = false;\r\n                Utility.dismissLoadingTran();\r\n                Utility.Log(\"Payment_ID ; \", response);\r\n                if (ResponseHandler.isSuccess(response, null)) {\r\n                    JSONObject jsonObject = ResponseHandler.getJSONObject(ResponseHandler.createJsonObject(response), \"data\");\r\n                    payment_id = (ResponseHandler.getString(jsonObject, \"id\"));\r\n\r\n                } else {\r\n                    Utility.showSnackBar(binding.rootBackground, act, ResponseHandler.getString(ResponseHandler.createJsonObject(response), \"message\"));\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                isLoading = false;\r\n                Utility.dismissLoadingTran();\r\n\r\n                Utility.showSnackBar(binding.rootBackground, act, \"There is something internal problem\");\r\n\r\n                error.printStackTrace();\r\n                //       String body;\r\n                //get status code here\r\n//                body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                //   Log.e(\"Error \", body);\r\n            }\r\n        }) {\r\n            /** Passing some request headers* */\r\n            @Override\r\n            public Map<String, String> getHeaders() {\r\n                Utility.Log(\"Header\", getHeader(CodeReUse.GET_JSON_HEADER).toString());\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n\r\n                hashMap.put(\"Authorization\", \"Bearer \" + preafManager.getUserToken());\r\n\r\n                return hashMap;\r\n\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"brand\", sliderItemList.getBrandId());\r\n                hashMap.put(\"package\", sliderItemList.getPackageid());\r\n                Utility.Log(\"Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n        MySingleton.getInstance(act).addToRequestQueue(stringRequest);\r\n\r\n    }\r\n\r\n    boolean isCodeApply = false;\r\n\r\n    private void verifyCode(String codedd) {\r\n        if (isCodeApply)\r\n            return;\r\n        isCodeApply = true;\r\n        Utility.showLoadingTran(act);\r\n        Utility.Log(\"APi\", APIs.GET_PROMOCODE_DESCOUNT);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_PROMOCODE_DESCOUNT, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                isCodeApply = false;\r\n                Utility.dismissLoadingTran();\r\n\r\n                Utility.Log(\"PromocodeID ; \", response);\r\n\r\n                if (ResponseHandler.isSuccess(response, null)) {\r\n                    JSONObject jsonObject = ResponseHandler.getJSONObject(ResponseHandler.createJsonObject(response), \"data\");\r\n                    discounted_amount = ResponseHandler.getString(jsonObject, \"discounted_amount\");\r\n                    discount = ResponseHandler.getString(jsonObject, \"discount\");\r\n                    type = ResponseHandler.getString(jsonObject, \"type\");\r\n                    code = ResponseHandler.getString(jsonObject, \"code\");\r\n                    code_type = ResponseHandler.getString(jsonObject, \"code_type\");\r\n                    total_amount = ResponseHandler.getString(jsonObject, \"total_amount\");\r\n                    brand_id = ResponseHandler.getString(jsonObject, \"brand_id\");\r\n                    package_id = ResponseHandler.getString(jsonObject, \"package_id\");\r\n\r\n                    applyCodeCalculation();\r\n\r\n                } else {\r\n                    Utility.showSnackBar(binding.rootBackground, act, ResponseHandler.getString(ResponseHandler.createJsonObject(response), \"message\"));\r\n\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                isCodeApply = false;\r\n                Utility.dismissLoadingTran();\r\n\r\n                Utility.showSnackBar(binding.rootBackground, act, \"There is something internal problem\");\r\n\r\n                error.printStackTrace();\r\n                //    String body;\r\n                //    get status code here\r\n                //    body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                //    Log.e(\"Error \", body);\r\n            }\r\n        }) {\r\n            /** Passing some request headers* */\r\n            @Override\r\n            public Map<String, String> getHeaders() {\r\n                Utility.Log(\"Header\", getHeader(CodeReUse.GET_JSON_HEADER).toString());\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n\r\n                hashMap.put(\"Authorization\", \"Bearer \" + preafManager.getUserToken());\r\n\r\n                return hashMap;\r\n\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"code\", codedd);\r\n                hashMap.put(\"amount\", calculateAmount);\r\n                hashMap.put(\"brand\", sliderItemList.getBrandId());\r\n                hashMap.put(\"package\", sliderItemList.getPackageid());\r\n                Utility.Log(\"Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n\r\n\r\n        MySingleton.getInstance(act).addToRequestQueue(stringRequest);\r\n\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    public void applyCodeCalculation() {\r\n        binding.promoEditTxt.setVisibility(View.GONE);\r\n        binding.codeTxt.setText(discounted_amount);\r\n        binding.couponCodeTxt.setText(\"Discount(\" + discount + \"%\" + \")\");\r\n        binding.dicountLayout.setVisibility(View.VISIBLE);\r\n        binding.applyPromoCodeTxt.setText(\"Congratesss! You saved(\" + act.getString(R.string.Rs) + discounted_amount + \")\");\r\n        binding.applysuccesfullyTxt.setText(Html.fromHtml(\"<font color=\\\"red\\\">\" + \"<b>\" + code + \"</b>\" + \"</font>\" + \"<font color=\\\"#FFFFFF\\\"><b> Applied Successfully</b></font>\"));\r\n        binding.applypromoEditTxt.setVisibility(View.VISIBLE);\r\n        binding.finalAmountTxt.setText(act.getString(R.string.Rs) + total_amount);\r\n        calculateAmount = total_amount;\r\n        Utility.Log(\"calculateAmount\", calculateAmount);\r\n\r\n    }\r\n\r\n    private void addDynamicServices(String featuresTxt) {\r\n        ItemServiceLayoutBinding serviceLayoutBinding;\r\n        serviceLayoutBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.item_service_layout, null, false);\r\n        serviceLayoutBinding.servicesTxt.setText(\"- \" + featuresTxt);\r\n        binding.servicesContainer.addView(serviceLayoutBinding.getRoot());\r\n\r\n    }\r\n\r\n    public void generateOrderID() {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showLoadingTran(act);\r\n        Utility.Log(\"APi\", APIs.GENERATE_ORDER_ID);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GENERATE_ORDER_ID, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                isLoading = false;\r\n                Utility.dismissLoadingTran();\r\n\r\n                Utility.Log(\"OrderID ; \", response);\r\n\r\n                if (ResponseHandler.isSuccess(response, null)) {\r\n                    JSONObject jsonObject = ResponseHandler.getJSONObject(ResponseHandler.createJsonObject(response), \"data\");\r\n                    generatedOrderId = ResponseHandler.getString(jsonObject, \"orderId\");\r\n                    Log.e(\"RoserPay Order Id\", generatedOrderId);\r\n                    calculateAmount = ResponseHandler.getString(jsonObject, \"orderAmount\");\r\n                    currency = ResponseHandler.getString(jsonObject, \"currency\");\r\n\r\n                    setUpPaymentMethod();\r\n                } else {\r\n                    Toast.makeText(act, \"\" + ResponseHandler.getString(ResponseHandler.createJsonObject(response), \"message\"), Toast.LENGTH_LONG).show();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                isLoading = false;\r\n                Utility.dismissLoadingTran();\r\n                Utility.showSnackBar(binding.rootBackground, act, \"There is something internal problem\");\r\n                error.printStackTrace();\r\n                //   String body;\r\n                //   get status code here\r\n                //   body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                //   Log.e(\"Error \", body);\r\n            }\r\n        }) {\r\n            /** Passing some request headers* */\r\n            @Override\r\n            public Map<String, String> getHeaders() {\r\n                Utility.Log(\"Header\", getHeader(CodeReUse.GET_JSON_HEADER).toString());\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                return hashMap;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                //hashMap.put(\"amount\", sliderItemList.getPriceForPay());\r\n                hashMap.put(\"amount\", calculateAmount);\r\n                //hashMap.put(\"amount\", \"1\");\r\n                hashMap.put(\"currency\", \"INR\");\r\n                Utility.Log(\"Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n        MySingleton.getInstance(act).addToRequestQueue(stringRequest);\r\n    }\r\n\r\n    private void setUpPaymentMethod() {\r\n\r\n        Checkout checkout = new Checkout();\r\n        checkout.setImage(R.drawable.ic_launcher_icon);\r\n        final Activity activity = this;\r\n\r\n\r\n        try {\r\n            JSONObject options = new JSONObject();\r\n            options.put(\"name\", \"Brand Mania\");\r\n            //options.put(\"description\", \"Reference No. #123456\");\r\n            options.put(\"image\", \"https://s3.amazonaws.com/rzp-mobile/images/rzp.png\");\r\n            options.put(\"orderId\", generatedOrderId);\r\n            options.put(\"theme.color\", \"#ad2753\");\r\n            options.put(\"currency\", \"INR\");\r\n            //int amountInPaisa = Integer.parseInt(sliderItem) * 100;\r\n            options.put(\"amount\", String.valueOf(calculateAmount));\r\n            options.put(\"prefill.email\", preafManager.getActiveBrand().getEmail());\r\n            options.put(\"prefill.contact\", \"Enter Mobile Number\");\r\n            Log.e(\"Param : \", options.toString());\r\n            checkout.open(activity, options);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            Log.e(\"TAG\", \"Error in starting Razorpay Checkout\", e);\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onPaymentSuccess(String s, PaymentData paymentData) {\r\n        try {\r\n            Log.e(\"Payment Succcessful\", gson.toJson(paymentData));\r\n            orderIdStr = paymentData.getOrderId();\r\n\r\n            paymentIdStr = paymentData.getPaymentId();\r\n\r\n            signatureStr = paymentData.getSignature();\r\n\r\n            makeSubscription(\"0\");\r\n            preafManager.setReferrerCode(null);\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onPaymentError(int i, String s, PaymentData paymentData) {\r\n        Log.e(\"Payment Fail\", s);\r\n        makeSubscription(\"1\");\r\n    }\r\n\r\n    private void paymentSuccessDiaog() {\r\n        ViewGroup viewGroup = findViewById(android.R.id.content);\r\n        View dialogView = LayoutInflater.from(this).inflate(R.layout.payment_success, viewGroup, false);\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this, R.style.DialogTheme);\r\n        builder.setView(dialogView);\r\n        final AlertDialog alertDialog = builder.create();\r\n        TextView element3 = dialogView.findViewById(R.id.element3);\r\n        TextView closeBtn = dialogView.findViewById(R.id.closeBtn);\r\n        element3.setText(\"Your current package is \" + sliderItemList.getPackageTitle());\r\n        closeBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(act, HomeActivity.class);\r\n                i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                startActivity(i);\r\n                overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        alertDialog.setCancelable(false);\r\n        alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        alertDialog.show();\r\n\r\n    }\r\n\r\n    public void makeSubscription(String subscription) {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showLoadingTran(act);\r\n        Utility.Log(\"APi\", APIs.MAKE_PAYMENT);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.MAKE_PAYMENT, response -> {\r\n            isLoading = false;\r\n            Utility.dismissLoadingTran();\r\n            Utility.Log(\"Make-subscription\", response);\r\n\r\n            //{\"status\":true,\"data\":\"\",\"message\":\"Subscription Added Successfully.\"}\r\n            if (ResponseHandler.isSuccess(response, null)) {\r\n\r\n                getBrandList();\r\n            } else {\r\n                JSONObject jsonObject = ResponseHandler.createJsonObject(response);\r\n                showAlert(act, ResponseHandler.getString(jsonObject, \"message\"), \"Error\");\r\n\r\n\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                isLoading = false;\r\n                Utility.dismissLoadingTran();\r\n\r\n                Utility.showSnackBar(binding.rootBackground, act, \"There is something internal problem\");\r\n\r\n                error.printStackTrace();\r\n             /*   String body;\r\n                //get status code here\r\n                body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                Log.e(\"Error \", body);*/\r\n\r\n\r\n            }\r\n        }) {\r\n            /** Passing some request headers* */\r\n            @Override\r\n            public Map<String, String> getHeaders() {\r\n                Utility.Log(\"Header\", getHeader(CodeReUse.GET_JSON_HEADER).toString());\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n\r\n                hashMap.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n\r\n                return hashMap;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"is_wallet\", \"0\");\r\n                hashMap.put(\"brand\", sliderItemList.getBrandId());\r\n                hashMap.put(\"package\", sliderItemList.getPackageid());\r\n                hashMap.put(\"amount\", sliderItemList.getPriceForPay());\r\n                //hashMap.put(\"total_amount\",sliderItemList.getPriceForPay());\r\n                hashMap.put(\"total_amount\", calculateAmount);\r\n                hashMap.put(\"img_counter\", sliderItemList.getImageTitle());\r\n                hashMap.put(\"frame_counter\", sliderItemList.getTemplateTitle());\r\n                hashMap.put(\"is_pending\", subscription);\r\n                if (payment_id != null)\r\n                    hashMap.put(\"create_payment_id\", payment_id);\r\n\r\n                if (subscription.equals(\"0\")) {\r\n                    hashMap.put(\"razorpay_payment_id\", paymentIdStr);\r\n                    Log.e(\"razorpay_payment_id\", paymentIdStr);\r\n\r\n                    if (signatureStr != null) {\r\n                        hashMap.put(\"razorpay_signature\", signatureStr);\r\n                    }\r\n\r\n                }\r\n                hashMap.put(\"razorpay_order_id\", generatedOrderId);\r\n                if (code != null && !code.isEmpty()) {\r\n                    hashMap.put(\"code\", code);\r\n                    hashMap.put(\"code_type\", code_type);\r\n                }\r\n                Utility.Log(\"Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n\r\n        MySingleton.getInstance(act).addToRequestQueue(stringRequest);\r\n    }\r\n\r\n    public void showAlert(Activity act, String msg, String flag) {\r\n        new android.app.AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        if (code != null) {\r\n                            //means promocode is used\r\n\r\n                            applyCodeCalculation();\r\n                        } else {\r\n                            //not used\r\n                            //show for one month count\r\n                            binding.actualPriceTxt.setText(act.getString(R.string.Rs) + sliderItemList.getPriceForPay());\r\n                            calculateAmount = sliderItemList.getPriceForPay();\r\n                            if (selectedBrand.getSubscriptionDate() != null\r\n                                    && !selectedBrand.getSubscriptionDate().isEmpty() &&\r\n                                    Utility.monthsBetweenDates(selectedBrand.getSubscriptionDate()) < 1) {\r\n\r\n                                int actualPrice = Integer.parseInt(sliderItemList.getPriceForPay());\r\n                                int previousPackagePrice = Integer.parseInt(preafManager.getActiveBrand().getRate());\r\n                                if (actualPrice > previousPackagePrice) {\r\n                                    int countedPrice = actualPrice - previousPackagePrice;\r\n                                    calculateAmount = String.valueOf(countedPrice);\r\n                                    Log.e(\"Price\", preafManager.getActiveBrand().getRate() + \" - \" + sliderItemList.getPriceForPay());\r\n                                    binding.discountedAmountLayout.setVisibility(View.GONE);\r\n                                    binding.prevAmount.setText(preafManager.getActiveBrand().getPackagename());\r\n                                    binding.prevAmount.setText(act.getString(R.string.Rs) + preafManager.getActiveBrand().getRate());\r\n                                    binding.previousLayout.setVisibility(View.VISIBLE);\r\n                                    binding.noticeTxt.setVisibility(View.VISIBLE);\r\n                                    //- and rs icon with red colpr\r\n                                    binding.noticeTxt.setText(\"Your currently active package is \\\"\" + preafManager.getActiveBrand().getPackagename() + \"\\\". so your previous paid amount will be deducted. As It was purchased within one month\");\r\n                                }\r\n                            }\r\n\r\n                            binding.finalAmountTxt.setText(act.getString(R.string.Rs) + calculateAmount);\r\n                        }\r\n                        // ((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n\r\n    ArrayList<BrandListItem> multiListItems = new ArrayList<>();\r\n\r\n    private void getBrandList() {\r\n        Utility.showLoadingTran(act);\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.dismissLoadingTran();\r\n                Utility.Log(\"GET_BRAND : \", response);\r\n                try {\r\n                    paymentSuccessDiaog();\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n\r\n                    multiListItems = ResponseHandler.HandleGetBrandList(jsonObject);\r\n                    preafManager.setAddBrandList(multiListItems);\r\n                    for (int i = 0; i < multiListItems.size(); i++) {\r\n                        if (multiListItems.get(i).getId().equalsIgnoreCase(preafManager.getActiveBrand().getId())) {\r\n                            preafManager.setActiveBrand(multiListItems.get(i));\r\n                            break;\r\n                        }\r\n                    }\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Utility.dismissLoadingTran();\r\n                        error.printStackTrace();\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\", \"Bearer \" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n        MySingleton.getInstance(act).addToRequestQueue(stringRequest);\r\n    }\r\n\r\n    @Override\r\n    public void alertListenerClick() {\r\n        Intent i = new Intent(act, HomeActivity.class);\r\n        i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        startActivity(i);\r\n        overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n        finish();\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        CodeReUse.activityBackPress(act);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/app/brandmania/Activity/packages/RazorPayActivity.java b/app/src/main/java/com/app/brandmania/Activity/packages/RazorPayActivity.java
--- a/app/src/main/java/com/app/brandmania/Activity/packages/RazorPayActivity.java	(revision 806497dfa314bd830e2d208d0b45966a214d09f3)
+++ b/app/src/main/java/com/app/brandmania/Activity/packages/RazorPayActivity.java	(date 1632472364470)
@@ -109,25 +109,13 @@
         sliderItemList = gson.fromJson(getIntent().getStringExtra("detailsObj"), SliderItem.class);
         selectedBrand = gson.fromJson(getIntent().getStringExtra("BrandListItem"), BrandListItem.class);
         Gson gson = new Gson();
-        Log.e("EEEE", gson.toJson(sliderItemList));
-        //binding.promoCodeTxt.setFilters(new InputFilter[]{new InputFilter.AllCaps()});
-        binding.BackButtonMember.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                onBackPressed();
-            }
-        });
 
+        binding.BackButtonMember.setOnClickListener(v -> onBackPressed());
         calculateAmount = sliderItemList.getPriceForPay();
         createPayment();
-        binding.proceedToPayment.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                generateOrderID();
-            }
-        });
+        binding.proceedToPayment.setOnClickListener(v -> generateOrderID());
 
-        //showActivityList(BUSINESS_TYPE, BusinessTitle);
+
 
         showReferrer();
 
@@ -142,7 +130,6 @@
             addDynamicServices(sliderItemList.getImageTitle() + " Images Download / Year");
             addDynamicServices(act.getString(R.string.Rs) + sliderItemList.getPayTitle() + " / " + sliderItemList.getDuration());
 
-            //show for one month count
             binding.actualPriceTxt.setText(act.getString(R.string.Rs) + sliderItemList.getPriceForPay());
             calculateAmount = sliderItemList.getPriceForPay();
 
@@ -234,7 +221,8 @@
     }
 
     public void showReferrer() {
-         if (preafManager.getSpleshReferrer() != null && !preafManager.getSpleshReferrer().isEmpty() && preafManager.getSpleshReferrer().equalsIgnoreCase("null")) {
+
+         if (!preafManager.getSpleshReferrer().isEmpty()) {
             verifyCode(preafManager.getSpleshReferrer());
         }
     }
@@ -259,20 +247,17 @@
                     Utility.showSnackBar(binding.rootBackground, act, ResponseHandler.getString(ResponseHandler.createJsonObject(response), "message"));
                 }
             }
-        }, new Response.ErrorListener() {
-            @Override
-            public void onErrorResponse(VolleyError error) {
-                isLoading = false;
-                Utility.dismissLoadingTran();
+        }, error -> {
+            isLoading = false;
+            Utility.dismissLoadingTran();
 
-                Utility.showSnackBar(binding.rootBackground, act, "There is something internal problem");
+            Utility.showSnackBar(binding.rootBackground, act, "There is something internal problem");
 
-                error.printStackTrace();
-                //       String body;
-                //get status code here
+            error.printStackTrace();
+            //       String body;
+            //get status code here
 //                body = new String(error.networkResponse.data, StandardCharsets.UTF_8);
-                //   Log.e("Error ", body);
-            }
+            //   Log.e("Error ", body);
         }) {
             /** Passing some request headers* */
             @Override
@@ -307,45 +292,37 @@
         isCodeApply = true;
         Utility.showLoadingTran(act);
         Utility.Log("APi", APIs.GET_PROMOCODE_DESCOUNT);
-        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_PROMOCODE_DESCOUNT, new Response.Listener<String>() {
-            @Override
-            public void onResponse(String response) {
-                isCodeApply = false;
-                Utility.dismissLoadingTran();
+        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_PROMOCODE_DESCOUNT, response -> {
+            isCodeApply = false;
+            Utility.dismissLoadingTran();
 
-                Utility.Log("PromocodeID ; ", response);
+            Utility.Log("PromocodeID ; ", response);
 
-                if (ResponseHandler.isSuccess(response, null)) {
-                    JSONObject jsonObject = ResponseHandler.getJSONObject(ResponseHandler.createJsonObject(response), "data");
-                    discounted_amount = ResponseHandler.getString(jsonObject, "discounted_amount");
-                    discount = ResponseHandler.getString(jsonObject, "discount");
-                    type = ResponseHandler.getString(jsonObject, "type");
-                    code = ResponseHandler.getString(jsonObject, "code");
-                    code_type = ResponseHandler.getString(jsonObject, "code_type");
-                    total_amount = ResponseHandler.getString(jsonObject, "total_amount");
-                    brand_id = ResponseHandler.getString(jsonObject, "brand_id");
-                    package_id = ResponseHandler.getString(jsonObject, "package_id");
+            if (ResponseHandler.isSuccess(response, null)) {
+                JSONObject jsonObject = ResponseHandler.getJSONObject(ResponseHandler.createJsonObject(response), "data");
+                discounted_amount = ResponseHandler.getString(jsonObject, "discounted_amount");
+                discount = ResponseHandler.getString(jsonObject, "discount");
+                type = ResponseHandler.getString(jsonObject, "type");
+                code = ResponseHandler.getString(jsonObject, "code");
+                code_type = ResponseHandler.getString(jsonObject, "code_type");
+                total_amount = ResponseHandler.getString(jsonObject, "total_amount");
+                brand_id = ResponseHandler.getString(jsonObject, "brand_id");
+                package_id = ResponseHandler.getString(jsonObject, "package_id");
 
-                    applyCodeCalculation();
+                applyCodeCalculation();
 
-                } else {
-                    Utility.showSnackBar(binding.rootBackground, act, ResponseHandler.getString(ResponseHandler.createJsonObject(response), "message"));
+            } else {
+                Utility.showSnackBar(binding.rootBackground, act, ResponseHandler.getString(ResponseHandler.createJsonObject(response), "message"));
 
-                }
             }
         }, new Response.ErrorListener() {
             @Override
             public void onErrorResponse(VolleyError error) {
                 isCodeApply = false;
                 Utility.dismissLoadingTran();
-
                 Utility.showSnackBar(binding.rootBackground, act, "There is something internal problem");
-
                 error.printStackTrace();
-                //    String body;
-                //    get status code here
-                //    body = new String(error.networkResponse.data, StandardCharsets.UTF_8);
-                //    Log.e("Error ", body);
+
             }
         }) {
             /** Passing some request headers* */
@@ -353,9 +330,7 @@
             public Map<String, String> getHeaders() {
                 Utility.Log("Header", getHeader(CodeReUse.GET_JSON_HEADER).toString());
                 HashMap<String, String> hashMap = new HashMap<>();
-
                 hashMap.put("Authorization", "Bearer " + preafManager.getUserToken());
-
                 return hashMap;
 
             }
Index: app/src/main/java/com/app/brandmania/Activity/basics/RegistrationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity.basics;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.text.Html;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\n\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.widget.PopupMenu;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.androidnetworking.AndroidNetworking;\r\nimport com.androidnetworking.common.ANRequest;\r\nimport com.androidnetworking.common.Priority;\r\nimport com.androidnetworking.error.ANError;\r\nimport com.androidnetworking.interfaces.JSONObjectRequestListener;\r\nimport com.androidnetworking.interfaces.UploadProgressListener;\r\nimport com.app.brandmania.Activity.HomeActivity;\r\nimport com.app.brandmania.Activity.brand.AddBranddActivity;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.utils.APIs;\r\nimport com.app.brandmania.utils.CodeReUse;\r\nimport com.app.brandmania.utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityRegistrationBinding;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RegistrationActivity extends BaseActivity implements PopupMenu.OnMenuItemClickListener {\r\n    Activity act;\r\n    private ActivityRegistrationBinding binding;\r\n    private boolean isLoading = false;\r\n    private String is_completed = \"\";\r\n    int errorColor;\r\n    final int version = Build.VERSION.SDK_INT;\r\n    PreafManager preafManager;\r\n    AlertDialog.Builder alertDialogBuilder;\r\n    private ImageView menuOtpion;\r\n    String referrerCode = \"\";\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_registration);\r\n        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);\r\n        alertDialogBuilder = new AlertDialog.Builder(act);\r\n        preafManager = new PreafManager(this);\r\n        binding.emailId.setImeActionLabel(\"Custom text\", KeyEvent.KEYCODE_ENTER);\r\n\r\n        referrerCode = preafManager.getSpleshReferrer();\r\n        Log.e(\"refferrer\", \"s\" + referrerCode);\r\n\r\n        binding.firstName.setNextFocusDownId(R.id.lastName);\r\n        binding.lastName.setNextFocusDownId(R.id.emailId);\r\n        binding.emailId.setNextFocusDownId(R.id.referrer);\r\n        binding.referrer.setNextFocusDownId(R.id.submitBtn);\r\n        binding.menuOtpion.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n\r\n            }\r\n        });\r\n\r\n        if (preafManager.getSpleshReferrer() != null && !preafManager.getSpleshReferrer().isEmpty()) {\r\n            binding.referrer.setText(preafManager.getSpleshReferrer());\r\n        }\r\n\r\n        menuOtpion = findViewById(R.id.menuOtpion);\r\n        menuOtpion.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                PopupMenu popup = new PopupMenu(RegistrationActivity.this, view);\r\n                popup.setOnMenuItemClickListener(RegistrationActivity.this);\r\n                popup.inflate(R.menu.menu);\r\n                popup.show();\r\n            }\r\n        });\r\n        preafManager.setEMAIL_Id(binding.emailId.getText().toString());\r\n\r\n        binding.submitBtn.setOnClickListener(new View.OnClickListener() {\r\n            @RequiresApi(api = Build.VERSION_CODES.M)\r\n            @Override\r\n            public void onClick(View v) {\r\n                Validation();\r\n\r\n            }\r\n        });\r\n        CodeReUse.RemoveError(binding.firstName, binding.userNameTextLayout);\r\n        CodeReUse.RemoveError(binding.lastName, binding.lastNameTextLayout);\r\n        CodeReUse.RemoveError(binding.emailId, binding.emailIdTextLayout);\r\n\r\n        String CreatAccount = \"Create<br>Account</font></br>\";\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\r\n            // binding.signupText.setText(Html.fromHtml(Message, Html.FROM_HTML_MODE_COMPACT));\r\n            binding.creatAccount.setText(Html.fromHtml(CreatAccount, Html.FROM_HTML_MODE_COMPACT));\r\n        } else {\r\n            //binding.signupText.setText(Html.fromHtml(Message));\r\n            binding.creatAccount.setText(Html.fromHtml(CreatAccount));\r\n        }\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    private void Validation() {\r\n\r\n        boolean isError = false;\r\n        boolean isFocus = false;\r\n\r\n        if (binding.firstName.getText().toString().trim().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.userNameTextLayout.setError(getString(R.string.enter_first_name));\r\n            binding.userNameTextLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n            binding.firstName.requestFocus();\r\n\r\n        }\r\n\r\n        if (binding.lastName.getText().toString().trim().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.lastNameTextLayout.setError(getString(R.string.enter_last_name));\r\n            binding.lastNameTextLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n            binding.lastName.requestFocus();\r\n\r\n        }\r\n        if (!binding.emailId.getText().toString().equals(\"\")) {\r\n            if (!CodeReUse.isEmailValid(binding.emailId.getText().toString().trim())) {\r\n                isError = true;\r\n                isFocus = true;\r\n                binding.emailIdTextLayout.setError(getString(R.string.enter_valid_email_address));\r\n                binding.emailIdTextLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n                binding.emailId.requestFocus();\r\n\r\n            } else {\r\n\r\n            }\r\n\r\n        } else {\r\n            if (binding.emailId.getText().toString().trim().length() == 0) {\r\n                isError = true;\r\n                isFocus = true;\r\n                binding.emailIdTextLayout.setError(getString(R.string.enter_email_id));\r\n                binding.emailIdTextLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n                binding.emailId.requestFocus();\r\n\r\n            }\r\n        }\r\n        if (!isError) {\r\n            addUser();\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onMenuItemClick(MenuItem item) {\r\n\r\n        switch (item.getItemId()) {\r\n            case R.id.logo:\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private void addUser() {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Log.e(\"API\", APIs.USER_REGISTRATION);\r\n\r\n        Log.w(\"Tokennn\", preafManager.getUserToken());\r\n        ANRequest.MultiPartBuilder request = AndroidNetworking.upload(APIs.USER_REGISTRATION)\r\n                .addHeaders(\"Accept\", \"application/json\")\r\n                .addHeaders(\"Content-Type\", \"application/json\")\r\n                .addHeaders(\"Authorization\", \"Bearer \" + preafManager.getUserToken())\r\n                .addMultipartParameter(\"first_name\", binding.firstName.getText().toString())\r\n                .addMultipartParameter(\"last_name\", binding.lastName.getText().toString())\r\n                .addMultipartParameter(\"email\", binding.emailId.getText().toString())\r\n                .addMultipartParameter(\"referral_code\", binding.referrer.getText().toString())\r\n                /*hashMap.put(\"referrerCode\", referrerCode);*/\r\n                .setTag(\"Add User\")\r\n                .setPriority(Priority.HIGH);\r\n\r\n        preafManager.setEMAIL_Id(binding.emailId.getText().toString());\r\n        Log.e(\"test\", gson.toJson(request));\r\n        request.build().setUploadProgressListener(new UploadProgressListener() {\r\n            @Override\r\n            public void onProgress(long bytesUploaded, long totalBytes) {\r\n                // do anything with progress\r\n            }\r\n        })\r\n                .getAsJSONObject(new JSONObjectRequestListener() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        Utility.Log(\"Verify-Response\", response);\r\n                        try {\r\n                            if (response.getBoolean(\"status\")) {\r\n                                preafManager.setIs_Registration(true);\r\n                                //preafManager.setSpleshReferrer(null);\r\n                                JSONObject jsonArray = response.getJSONObject(\"data\");\r\n                                is_completed = jsonArray.getString(\"is_completed\");\r\n\r\n                                preafManager.loginStep(is_completed);\r\n                                if (is_completed.equals(\"1\")) {\r\n                                    Intent i = new Intent(act, AddBranddActivity.class);\r\n                                    i.addCategory(Intent.CATEGORY_HOME);\r\n                                    i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                                    startActivity(i);\r\n                                    overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                                    finish();\r\n                                }\r\n                                if (is_completed.equals(\"2\")) {\r\n                                    getBrandList();\r\n//                                    Intent i = new Intent(act, HomeActivity.class);\r\n//                                    i.addCategory(Intent.CATEGORY_HOME);\r\n//                                    i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n//                                    startActivity(i);\r\n//                                    overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n//                                    finish();\r\n                                }\r\n\r\n                            }\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(ANError error) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        if (error.getErrorCode() != 0) {\r\n                            Log.e(\"onError errorCode : \", String.valueOf(error.getErrorCode()));\r\n                            Log.e(\"onError errorBody : \", error.getErrorBody());\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        } else {\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    private void getBrandList() {\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Log.e(\"addbrandresponce\", response);\r\n                ArrayList<BrandListItem> brandListItems = new ArrayList<>();\r\n                try {\r\n                    JSONObject res = new JSONObject(response);\r\n\r\n                    JSONArray jsonArray1 = res.getJSONArray(\"data\");\r\n                    for (int i = 0; i < jsonArray1.length(); i++) {\r\n                        JSONObject jsonObject = jsonArray1.getJSONObject(i);\r\n                        BrandListItem brandListItemm = new BrandListItem();\r\n                        brandListItemm.setId(ResponseHandler.getString(jsonObject, \"id\"));\r\n                        brandListItemm.setCategoryId(ResponseHandler.getString(jsonObject, \"br_category_id\"));\r\n                        brandListItemm.setCategoryName(ResponseHandler.getString(jsonObject, \"br_category_name\"));\r\n                        brandListItemm.setName(ResponseHandler.getString(jsonObject, \"br_name\"));\r\n                        brandListItemm.setPhonenumber(ResponseHandler.getString(jsonObject, \"br_phone\"));\r\n                        brandListItemm.setWebsite(ResponseHandler.getString(jsonObject, \"br_website\"));\r\n                        brandListItemm.setEmail(ResponseHandler.getString(jsonObject, \"br_email\"));\r\n                        brandListItemm.setAddress(ResponseHandler.getString(jsonObject, \"br_address\"));\r\n                        brandListItemm.setLogo(ResponseHandler.getString(jsonObject, \"br_logo\"));\r\n                        brandListItemm.setPackage_id(ResponseHandler.getString(jsonObject, \"package_id\"));\r\n                        brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, \"is_frame\"));\r\n                        brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, \"frame_message\"));\r\n                        brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, \"fream_base_url\"));\r\n                        brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, \"is_payment_pending\"));\r\n                        brandListItemm.setSubscriptionDate(ResponseHandler.getString(jsonObject, \"subscription_date\"));\r\n                        brandListItemm.setPayment_message(ResponseHandler.getString(jsonObject, \"payment_message\"));\r\n                        brandListItemm.setPackagename(ResponseHandler.getString(jsonObject, \"package\"));\r\n                        brandListItemm.setPackagemessage(ResponseHandler.getString(jsonObject, \"package_message\"));\r\n                        brandListItemm.setNo_of_total_image(ResponseHandler.getString(jsonObject, \"no_of_img\"));\r\n                        brandListItemm.setNo_of_used_image(ResponseHandler.getString(jsonObject, \"no_of_used_img\"));\r\n                        brandListItemm.setNo_of_frame(ResponseHandler.getString(jsonObject, \"no_of_frame\"));\r\n                        brandListItemm.setNo_of_remaining(ResponseHandler.getString(jsonObject, \"remaining_img\"));\r\n                        brandListItemm.setExpiery_date(ResponseHandler.getString(jsonObject, \"expire_date\"));\r\n                        brandListItemm.setRate(ResponseHandler.getString(jsonObject, \"rate\"));\r\n\r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"br_frame\");\r\n                        ArrayList<FrameItem> frameItems = null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject, \"fream_base_url\") + \"/\" + ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n\r\n                        brandListItemm.setFrame(frameItems);\r\n                        brandListItems.add(brandListItemm);\r\n                    }\r\n\r\n\r\n                    preafManager.setAddBrandList(brandListItems);\r\n                    preafManager.setIS_Brand(true);\r\n\r\n                    if (brandListItems != null && brandListItems.size() != 0) {\r\n                        preafManager.setActiveBrand(brandListItems.get(0));\r\n                    }\r\n                    Intent i = new Intent(act, HomeActivity.class);\r\n                    startActivity(i);\r\n                    overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n                    finish();\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n                        String body;\r\n                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                        Log.e(\"Error \", body);\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\", \"Bearer \" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    public void captureScreenShort() {\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/app/brandmania/Activity/basics/RegistrationActivity.java b/app/src/main/java/com/app/brandmania/Activity/basics/RegistrationActivity.java
--- a/app/src/main/java/com/app/brandmania/Activity/basics/RegistrationActivity.java	(revision 806497dfa314bd830e2d208d0b45966a214d09f3)
+++ b/app/src/main/java/com/app/brandmania/Activity/basics/RegistrationActivity.java	(date 1632472364488)
@@ -2,6 +2,7 @@
 
 import android.app.Activity;
 import android.app.AlertDialog;
+import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.res.ColorStateList;
 import android.os.Build;
@@ -263,6 +264,15 @@
 //                                    finish();
                                 }
 
+                            }else{
+
+                                alertDialogBuilder.setMessage(ResponseHandler.getString(response, "message"));
+                                alertDialogBuilder.setPositiveButton("Ok", (arg0, arg1) -> {
+                                    arg0.dismiss();
+                                });
+                                AlertDialog alertDialog = alertDialogBuilder.create();
+                                alertDialog.setCancelable(false);
+                                alertDialog.show();
                             }
                         } catch (JSONException e) {
                             e.printStackTrace();
@@ -407,4 +417,6 @@
     public void captureScreenShort() {
         getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);
     }
+
+
 }
