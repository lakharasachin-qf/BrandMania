Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_24_2021_3_17_PM__Default_Changelist_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_11_24_2021_3_17_PM__Default_Changelist_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_11_24_2021_3_17_PM__Default_Changelist_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_11_24_2021_3_17_PM__Default_Changelist_.xml	(revision aed5b44041b80278f672bdbf02f1fda8c3890f6f)
+++ /dev/null	(revision aed5b44041b80278f672bdbf02f1fda8c3890f6f)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_11_24_2021_3_17_PM_[Default_Changelist]" date="1637747250290" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_11_24_2021_3_17_PM_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 11/24/2021 3:17 PM [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_11_24_2021_3_17_PM_[Default_Changelist]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_11_24_2021_3_17_PM_[Default_Changelist]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_11_24_2021_3_17_PM_[Default_Changelist]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_11_24_2021_3_17_PM_[Default_Changelist]/shelved.patch	(revision aed5b44041b80278f672bdbf02f1fda8c3890f6f)
+++ /dev/null	(revision aed5b44041b80278f672bdbf02f1fda8c3890f6f)
@@ -1,116 +0,0 @@
-Index: app/src/main/res/layout/activity_pdf.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:id=\"@+id/my_toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"@dimen/_50sdp\"\r\n            android:background=\"@color/colorPrimary\"\r\n            android:elevation=\"4dp\"\r\n            android:theme=\"@style/ThemeOverlay.AppCompat.ActionBar\"\r\n            android:visibility=\"visible\"\r\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\">\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/main_linearlayout_title\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"@dimen/_70sdp\"\r\n                android:layout_marginTop=\"@dimen/_10sdp\"\r\n                android:layout_marginEnd=\"@dimen/_7sdp\"\r\n                android:elevation=\"0dp\">\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/BackButtonMember\"\r\n                    android:layout_width=\"23dp\"\r\n                    android:layout_height=\"23dp\"\r\n                    android:layout_alignParentStart=\"true\"\r\n                    android:layout_marginStart=\"6dp\"\r\n                    android:layout_marginEnd=\"10dp\"\r\n                    android:background=\"@drawable/ic_left_arrow\" />\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_toEndOf=\"@+id/BackButtonMember\"\r\n                    android:fontFamily=\"@font/montserrat_semibold\"\r\n                    android:text=\"Digital Card\"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_13sdp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/exportIcon\"\r\n                    android:layout_width=\"@dimen/_24sdp\"\r\n                    android:layout_height=\"@dimen/_24sdp\"\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:layout_marginEnd=\"10dp\"\r\n                    android:background=\"@drawable/ic_baseline_save_24\" />\r\n\r\n            </RelativeLayout>\r\n        </androidx.appcompat.widget.Toolbar>\r\n\r\n        <ScrollView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scrollbars=\"none\">\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"@dimen/_10sdp\"\r\n                    android:fitsSystemWindows=\"true\"\r\n                    android:orientation=\"horizontal\"\r\n                    android:visibility=\"visible\"\r\n                    android:weightSum=\"3\">\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"@dimen/_50sdp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_weight=\"1\"\r\n                        android:orientation=\"vertical\">\r\n\r\n                        <TextView\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginTop=\"@dimen/_16sdp\"\r\n                            android:fontFamily=\"@font/montserrat_semibold\"\r\n                            android:text=\"Background Color\"\r\n                            android:textColor=\"@color/colorPrimary\"\r\n                            android:textSize=\"@dimen/_10sdp\" />\r\n\r\n                        <androidx.recyclerview.widget.RecyclerView\r\n                            android:id=\"@+id/backgroundcolorList\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginEnd=\"@dimen/_5sdp\" />\r\n\r\n\r\n                    </LinearLayout>\r\n\r\n                    <View\r\n                        android:layout_width=\"@dimen/_1sdp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_marginTop=\"@dimen/_10sdp\"\r\n                        android:background=\"@color/colorPrimary\" />\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"@dimen/_50sdp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_weight=\"1\"\r\n                        android:orientation=\"vertical\">\r\n\r\n                        <TextView\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginTop=\"@dimen/_16sdp\"\r\n                            android:fontFamily=\"@font/montserrat_semibold\"\r\n                            android:gravity=\"center\"\r\n                            android:text=\"Text color\"\r\n                            android:textColor=\"@color/colorPrimary\"\r\n                            android:textSize=\"@dimen/_10sdp\" />\r\n\r\n                        <androidx.recyclerview.widget.RecyclerView\r\n                            android:id=\"@+id/TextcolorList\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/_5sdp\"\r\n                            android:layout_marginEnd=\"@dimen/_5sdp\" />\r\n\r\n                    </LinearLayout>\r\n\r\n                    <View\r\n                        android:layout_width=\"@dimen/_1sdp\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:layout_marginTop=\"@dimen/_10sdp\"\r\n                        android:background=\"@color/colorPrimary\" />\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"@dimen/_50sdp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_weight=\"1\"\r\n                        android:orientation=\"vertical\">\r\n\r\n                        <TextView\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginTop=\"@dimen/_16sdp\"\r\n                            android:fontFamily=\"@font/montserrat_semibold\"\r\n                            android:gravity=\"center\"\r\n                            android:text=\"Icons color\"\r\n                            android:textColor=\"@color/colorPrimary\"\r\n                            android:textSize=\"@dimen/_10sdp\" />\r\n\r\n                        <androidx.recyclerview.widget.RecyclerView\r\n                            android:id=\"@+id/iconscolorList\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_marginStart=\"@dimen/_5sdp\"\r\n                            android:layout_marginEnd=\"@dimen/_5sdp\" />\r\n\r\n                    </LinearLayout>\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginTop=\"@dimen/_16sdp\"\r\n                        android:fontFamily=\"@font/montserrat_semibold\"\r\n                        android:text=\"Your\"\r\n                        android:textColor=\"@color/colorPrimary\"\r\n                        android:textSize=\"@dimen/_16sdp\"\r\n                        android:visibility=\"gone\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_marginStart=\"@dimen/_5sdp\"\r\n                        android:layout_marginTop=\"@dimen/_16sdp\"\r\n                        android:fontFamily=\"@font/montserrat_extrabold\"\r\n                        android:text=\"Digital Card\"\r\n                        android:textColor=\"@color/colorPrimary\"\r\n                        android:textSize=\"@dimen/_16sdp\"\r\n                        android:visibility=\"gone\" />\r\n                </LinearLayout>\r\n\r\n                <View\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"1dp\"\r\n                    android:layout_marginStart=\"@dimen/_10sdp\"\r\n                    android:layout_marginTop=\"@dimen/_7sdp\"\r\n                    android:layout_marginEnd=\"@dimen/_10sdp\"\r\n                    android:background=\"@color/colorthird\" />\r\n\r\n                <androidx.recyclerview.widget.RecyclerView\r\n                    android:id=\"@+id/colorList\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"@dimen/_5sdp\"\r\n                    android:layout_marginEnd=\"@dimen/_5sdp\" />\r\n\r\n                <RelativeLayout\r\n                    android:id=\"@+id/container\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\">\r\n\r\n                </RelativeLayout>\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"end\"\r\n                    android:layout_marginEnd=\"@dimen/_7sdp\"\r\n                    android:fontFamily=\"@font/montserrat_medium\"\r\n                    android:text=\"Please fill all the details for more better perfact design.\" />\r\n\r\n                <include\r\n                    android:id=\"@+id/digitalCard\"\r\n                    layout=\"@layout/layout_digital_card_three\"\r\n                    android:visibility=\"gone\" />\r\n\r\n                <androidx.cardview.widget.CardView\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"@dimen/_5sdp\"\r\n                    android:layout_marginTop=\"@dimen/_10sdp\"\r\n                    android:layout_marginEnd=\"@dimen/_5sdp\"\r\n                    android:visibility=\"gone\"\r\n                    app:cardElevation=\"@dimen/_5sdp\"\r\n                    app:cardUseCompatPadding=\"true\">\r\n\r\n                    <RelativeLayout\r\n                        android:id=\"@+id/pdfLayout\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"@dimen/_400sdp\"\r\n                        android:background=\"@android:color/transparent\"\r\n                        android:orientation=\"vertical\">\r\n\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:orientation=\"vertical\">\r\n\r\n                            <LinearLayout\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:orientation=\"horizontal\">\r\n\r\n                                <androidx.cardview.widget.CardView\r\n                                    android:layout_width=\"@dimen/_60sdp\"\r\n                                    android:layout_height=\"@dimen/_60sdp\"\r\n                                    android:layout_marginStart=\"@dimen/_10sdp\"\r\n                                    android:layout_marginTop=\"@dimen/_20sdp\"\r\n                                    app:cardElevation=\"@dimen/_1sdp\"\r\n                                    app:cardPreventCornerOverlap=\"false\"\r\n                                    app:cardUseCompatPadding=\"true\">\r\n\r\n                                    <ImageView\r\n                                        android:id=\"@+id/pdfLogo\"\r\n                                        android:layout_width=\"match_parent\"\r\n                                        android:layout_height=\"match_parent\" />\r\n                                </androidx.cardview.widget.CardView>\r\n\r\n\r\n                                <TextView\r\n                                    android:id=\"@+id/brandName\"\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_gravity=\"center_vertical\"\r\n                                    android:layout_marginStart=\"@dimen/_10sdp\"\r\n                                    android:layout_marginTop=\"@dimen/_10sdp\"\r\n                                    android:layout_marginEnd=\"@dimen/_10sdp\"\r\n                                    android:fontFamily=\"@font/montserrat_bold\"\r\n                                    android:maxWidth=\"@dimen/_200sdp\"\r\n                                    android:text=\"QueryFinders Solutions \"\r\n                                    android:textColor=\"@color/black\"\r\n                                    android:textSize=\"@dimen/_16sdp\" />\r\n\r\n                            </LinearLayout>\r\n\r\n                            <View\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"1dp\"\r\n                                android:layout_marginStart=\"@dimen/_10sdp\"\r\n                                android:layout_marginTop=\"@dimen/_10sdp\"\r\n                                android:layout_marginEnd=\"@dimen/_10sdp\"\r\n                                android:layout_marginBottom=\"@dimen/_10sdp\"\r\n                                android:background=\"#A5A5A5\" />\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/services\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginStart=\"@dimen/_10sdp\"\r\n                                android:layout_marginEnd=\"@dimen/_10sdp\"\r\n                                android:layout_marginBottom=\"@dimen/_10sdp\"\r\n                                android:orientation=\"vertical\">\r\n\r\n\r\n                                <TextView\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:fontFamily=\"@font/montserrat_medium\"\r\n                                    android:text=\"Our Services :\"\r\n                                    android:textColor=\"@color/colorPrimary\"\r\n                                    android:textSize=\"13dp\" />\r\n\r\n                                <View\r\n                                    android:layout_width=\"@dimen/_80sdp\"\r\n                                    android:layout_height=\"1dp\"\r\n                                    android:layout_marginTop=\"@dimen/_5sdp\"\r\n                                    android:layout_marginBottom=\"@dimen/_7sdp\"\r\n                                    android:background=\"@color/colorthird\" />\r\n\r\n                                <TextView\r\n                                    android:id=\"@+id/servicesTxt\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:fontFamily=\"@font/montserrat_medium\"\r\n                                    android:inputType=\"textMultiLine\"\r\n                                    android:text=\" - Website Development\"\r\n                                    android:textColor=\"@color/black\"\r\n                                    android:textSize=\"12dp\" />\r\n\r\n\r\n                            </LinearLayout>\r\n\r\n\r\n                        </LinearLayout>\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"match_parent\"\r\n\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_above=\"@+id/sdsds\"\r\n                            android:layout_marginStart=\"@dimen/_10sdp\"\r\n                            android:layout_marginTop=\"@dimen/_20sdp\"\r\n                            android:layout_marginEnd=\"@dimen/_10sdp\"\r\n                            android:orientation=\"vertical\"\r\n                            android:weightSum=\"2\">\r\n\r\n                            <TextView\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:fontFamily=\"@font/montserrat_medium\"\r\n                                android:text=\"Contact Us : \"\r\n                                android:textColor=\"@color/colorPrimary\"\r\n                                android:textSize=\"13dp\" />\r\n\r\n                            <View\r\n                                android:layout_width=\"@dimen/_80sdp\"\r\n                                android:layout_height=\"1dp\"\r\n                                android:layout_marginTop=\"@dimen/_5sdp\"\r\n                                android:layout_marginBottom=\"@dimen/_5sdp\"\r\n                                android:background=\"@color/colorthird\" />\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/contactTxtLayout\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_weight=\"1\"\r\n                                android:gravity=\"center_vertical\"\r\n                                android:orientation=\"horizontal\">\r\n\r\n                                <androidx.cardview.widget.CardView\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    app:cardCornerRadius=\"@dimen/_7sdp\"\r\n                                    app:cardElevation=\"1dp\"\r\n                                    app:cardUseCompatPadding=\"true\">\r\n\r\n                                    <ImageView\r\n                                        android:layout_width=\"@dimen/_16sdp\"\r\n                                        android:layout_height=\"@dimen/_16sdp\"\r\n                                        android:layout_margin=\"@dimen/_2sdp\"\r\n                                        android:padding=\"@dimen/_3sdp\"\r\n                                        android:src=\"@drawable/ic_pdf_phone\"\r\n                                        app:tint=\"@color/colorPrimary\" />\r\n                                </androidx.cardview.widget.CardView>\r\n\r\n\r\n                                <TextView\r\n                                    android:id=\"@+id/contactText\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"@dimen/_7sdp\"\r\n                                    android:fontFamily=\"@font/montserrat_medium\"\r\n                                    android:text=\"+91 8200002604\"\r\n                                    android:textColor=\"@color/black\"\r\n                                    android:textSize=\"12dp\" />\r\n                            </LinearLayout>\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/emailTxtLayout\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_weight=\"1\"\r\n                                android:gravity=\"center_vertical\"\r\n                                android:orientation=\"horizontal\">\r\n\r\n                                <androidx.cardview.widget.CardView\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    app:cardCornerRadius=\"@dimen/_7sdp\"\r\n                                    app:cardElevation=\"1dp\"\r\n                                    app:cardUseCompatPadding=\"true\">\r\n\r\n                                    <ImageView\r\n                                        android:layout_width=\"@dimen/_16sdp\"\r\n                                        android:layout_height=\"@dimen/_16sdp\"\r\n                                        android:layout_margin=\"@dimen/_2sdp\"\r\n                                        android:padding=\"@dimen/_3sdp\"\r\n                                        android:src=\"@drawable/ic_pdf_message\"\r\n                                        app:tint=\"@color/colorPrimary\" />\r\n                                </androidx.cardview.widget.CardView>\r\n\r\n                                <TextView\r\n                                    android:id=\"@+id/emailId\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"@dimen/_7sdp\"\r\n                                    android:fontFamily=\"@font/montserrat_medium\"\r\n                                    android:text=\"lakharasachin.qf@gmail.com\"\r\n                                    android:textColor=\"@color/black\"\r\n                                    android:textSize=\"12dp\" />\r\n                            </LinearLayout>\r\n\r\n                            <LinearLayout\r\n                                android:id=\"@+id/addressEdtLayout\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_weight=\"1\"\r\n                                android:orientation=\"horizontal\">\r\n\r\n                                <androidx.cardview.widget.CardView\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_gravity=\"top\"\r\n                                    app:cardCornerRadius=\"@dimen/_7sdp\"\r\n                                    app:cardElevation=\"1dp\"\r\n                                    app:cardUseCompatPadding=\"true\">\r\n\r\n                                    <ImageView\r\n                                        android:layout_width=\"@dimen/_16sdp\"\r\n                                        android:layout_height=\"@dimen/_16sdp\"\r\n                                        android:layout_margin=\"@dimen/_2sdp\"\r\n                                        android:padding=\"@dimen/_3sdp\"\r\n                                        android:src=\"@drawable/ic_pdf_location\"\r\n                                        app:tint=\"@color/colorPrimary\" />\r\n                                </androidx.cardview.widget.CardView>\r\n\r\n                                <TextView\r\n                                    android:id=\"@+id/address\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"@dimen/_7sdp\"\r\n                                    android:layout_marginTop=\"@dimen/_5sdp\"\r\n                                    android:fontFamily=\"@font/montserrat_medium\"\r\n                                    android:text=\"326 vastral ahmedabadb gujarat rajasthan india dsjdsfsdfsds dsjf nind gujara ths tehisse gds sd\"\r\n                                    android:textColor=\"@color/black\"\r\n                                    android:textSize=\"12dp\" />\r\n                            </LinearLayout>\r\n\r\n                        </LinearLayout>\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/sdsds\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"@dimen/_67sdp\"\r\n                            android:layout_alignParentBottom=\"true\"\r\n                            android:layout_marginBottom=\"-10dp\"\r\n                            android:src=\"@drawable/ic_wave\"\r\n                            app:tint=\"@color/colorthird\" />\r\n\r\n                        <LinearLayout\r\n                            android:id=\"@+id/waterMark\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_alignParentBottom=\"true\"\r\n                            android:layout_marginBottom=\"@dimen/_2sdp\"\r\n                            android:orientation=\"vertical\">\r\n\r\n                            <TextView\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_marginEnd=\"@dimen/_10sdp\"\r\n                                android:fontFamily=\"@font/montserrat_medium\"\r\n                                android:text=\"Created By BrandMania.\"\r\n                                android:textAlignment=\"textEnd\"\r\n                                android:textColor=\"@color/white\"\r\n                                android:textSize=\"10dp\" />\r\n                        </LinearLayout>\r\n\r\n                    </RelativeLayout>\r\n\r\n                </androidx.cardview.widget.CardView>\r\n\r\n\r\n                <androidx.recyclerview.widget.RecyclerView\r\n                    android:id=\"@+id/cardList\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"@dimen/_5sdp\"\r\n                    android:layout_marginEnd=\"@dimen/_5sdp\" />\r\n            </LinearLayout>\r\n        </ScrollView>\r\n\r\n\r\n    </LinearLayout>\r\n\r\n</layout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/activity_pdf.xml b/app/src/main/res/layout/activity_pdf.xml
---- a/app/src/main/res/layout/activity_pdf.xml	(revision d694773943718c8522b74ee45ef5ba3976e86563)
-+++ b/app/src/main/res/layout/activity_pdf.xml	(date 1637747148991)
-@@ -116,7 +116,7 @@
-                             android:layout_marginTop="@dimen/_16sdp"
-                             android:fontFamily="@font/montserrat_semibold"
-                             android:gravity="center"
--                            android:text="Text color"
-+                            android:text="Text Color"
-                             android:textColor="@color/colorPrimary"
-                             android:textSize="@dimen/_10sdp" />
- 
-@@ -124,7 +124,7 @@
-                             android:id="@+id/TextcolorList"
-                             android:layout_width="match_parent"
-                             android:layout_height="wrap_content"
--                            android:layout_marginStart="@dimen/_5sdp"
-+                            android:layout_marginStart="@dimen/_3sdp"
-                             android:layout_marginEnd="@dimen/_5sdp" />
- 
-                     </LinearLayout>
-@@ -147,7 +147,7 @@
-                             android:layout_marginTop="@dimen/_16sdp"
-                             android:fontFamily="@font/montserrat_semibold"
-                             android:gravity="center"
--                            android:text="Icons color"
-+                            android:text="Icons Color"
-                             android:textColor="@color/colorPrimary"
-                             android:textSize="@dimen/_10sdp" />
- 
-@@ -155,7 +155,7 @@
-                             android:id="@+id/iconscolorList"
-                             android:layout_width="match_parent"
-                             android:layout_height="wrap_content"
--                            android:layout_marginStart="@dimen/_5sdp"
-+                            android:layout_marginStart="@dimen/_3sdp"
-                             android:layout_marginEnd="@dimen/_5sdp" />
- 
-                     </LinearLayout>
-Index: app/src/main/java/com/app/brandmania/Common/VisitingCardHelper.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.app.brandmania.Common;\r\n\r\nimport android.app.Activity;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.drawable.GradientDrawable;\r\n\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.palette.graphics.Palette;\r\n\r\nimport com.app.brandmania.Model.BackgroundColorsModel;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.ColorsModel;\r\nimport com.app.brandmania.Model.IconsColorsModel;\r\nimport com.app.brandmania.Model.TextColorsModel;\r\nimport com.app.brandmania.Model.VisitingCardModel;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.databinding.LayoutDigitalCardFifthBinding;\r\nimport com.app.brandmania.databinding.LayoutDigitalCardFourthBinding;\r\nimport com.app.brandmania.databinding.LayoutDigitalCardOneBinding;\r\nimport com.app.brandmania.databinding.LayoutDigitalCardThreeBinding;\r\nimport com.app.brandmania.databinding.LayoutDigitalCardTwoBinding;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class VisitingCardHelper {\r\n\r\n    public static ArrayList<VisitingCardModel> getDigitalCardList() {\r\n        ArrayList<VisitingCardModel> digitalCardList = new ArrayList<>();\r\n        VisitingCardModel visitingCardModel = new VisitingCardModel();\r\n        visitingCardModel.setLayoutType(VisitingCardModel.LAYOUT_ONE);\r\n        digitalCardList.add(visitingCardModel);\r\n\r\n        visitingCardModel = new VisitingCardModel();\r\n        visitingCardModel.setLayoutType(VisitingCardModel.LAYOUT_TWO);\r\n        digitalCardList.add(visitingCardModel);\r\n\r\n        visitingCardModel = new VisitingCardModel();\r\n        visitingCardModel.setLayoutType(VisitingCardModel.LAYOUT_THREE);\r\n        digitalCardList.add(visitingCardModel);\r\n\r\n        visitingCardModel = new VisitingCardModel();\r\n        visitingCardModel.setLayoutType(VisitingCardModel.LAYOUT_FOUR);\r\n        digitalCardList.add(visitingCardModel);\r\n\r\n        visitingCardModel = new VisitingCardModel();\r\n        visitingCardModel.setLayoutType(VisitingCardModel.LAYOUT_FIVE);\r\n        digitalCardList.add(visitingCardModel);\r\n\r\n        return digitalCardList;\r\n\r\n    }\r\n\r\n\r\n    public static void loadDataCardOne(Activity act, LayoutDigitalCardOneBinding oneBinding, Palette colors) {\r\n        BrandListItem brand = new PreafManager(act).getActiveBrand();\r\n        Picasso.get().load(brand.getLogo()).into(oneBinding.logo2);\r\n        Picasso.get().load(brand.getLogo()).into(oneBinding.logo);\r\n\r\n        if (!brand.getWebsite().isEmpty() && !brand.getWebsite().equalsIgnoreCase(\"https://\")) {\r\n            oneBinding.websiteTxt1.setText(brand.getWebsite());\r\n        }\r\n\r\n        if (!brand.getEmail().isEmpty()) {\r\n            oneBinding.phoneTxt.setText(brand.getEmail());\r\n        }\r\n\r\n        if (!brand.getPhonenumber().isEmpty()) {\r\n            oneBinding.brandName.setText(brand.getPhonenumber());\r\n        }\r\n\r\n        if (!brand.getWebsite().isEmpty() && !brand.getWebsite().equalsIgnoreCase(\"https://\")) {\r\n            oneBinding.websiteTxt.setText(brand.getWebsite());\r\n        }\r\n\r\n        if (!brand.getAddress().isEmpty()) {\r\n            oneBinding.addressTxt.setText(brand.getAddress());\r\n        }\r\n\r\n        loadDefaultColorCardOne(act, oneBinding, colors);\r\n    }\r\n\r\n    public static void loadDataCardTwo(Activity act, LayoutDigitalCardTwoBinding twoBinding, Palette colors) {\r\n        BrandListItem brand = new PreafManager(act).getActiveBrand();\r\n        Picasso.get().load(brand.getLogo()).into(twoBinding.logoThumbnail);\r\n        Picasso.get().load(brand.getLogo()).into(twoBinding.logo);\r\n        if (!brand.getWebsite().isEmpty() && !brand.getWebsite().equalsIgnoreCase(\"https://\")) {\r\n            twoBinding.websiteTxt.setText(brand.getWebsite());\r\n            twoBinding.webTxt.setText(brand.getWebsite());\r\n        }\r\n        twoBinding.brandName.setText(brand.getName());\r\n\r\n        if (!brand.getAddress().isEmpty()) {\r\n            twoBinding.address.setText(brand.getAddress());\r\n        }\r\n\r\n        if (!brand.getPhonenumber().isEmpty()) {\r\n            twoBinding.phoneTxt.setText(brand.getPhonenumber());\r\n        }\r\n\r\n        if (!brand.getEmail().isEmpty()) {\r\n            twoBinding.emailTxt.setText(brand.getEmail());\r\n        }\r\n\r\n        loadDefaultColorCardTwo(act, twoBinding, colors);\r\n    }\r\n\r\n    public static void loadDataCardThree(Activity act, LayoutDigitalCardThreeBinding threeBinding, Palette colors) {\r\n        Picasso.get().load(new PreafManager(act).getActiveBrand().getLogo()).into(threeBinding.logo);\r\n        BrandListItem brand = new PreafManager(act).getActiveBrand();\r\n        threeBinding.brandNameText.setText(brand.getName());\r\n\r\n        if (!brand.getAddress().isEmpty()) {\r\n            threeBinding.addressTxt.setText(brand.getAddress());\r\n        }\r\n\r\n        if (!brand.getPhonenumber().isEmpty()) {\r\n            threeBinding.phoneTxt.setText(brand.getPhonenumber());\r\n        }\r\n\r\n        if (!brand.getEmail().isEmpty()) {\r\n            threeBinding.emailTxt.setText(brand.getEmail());\r\n        }\r\n\r\n        loadDefaultColorCardThree(act, threeBinding, colors);\r\n    }\r\n\r\n    public static void loadDataCardFour(Activity act, LayoutDigitalCardFourthBinding fourBinding, Palette colors) {\r\n        Picasso.get().load(new PreafManager(act).getActiveBrand().getLogo()).into(fourBinding.logo);\r\n        Picasso.get().load(new PreafManager(act).getActiveBrand().getLogo()).into(fourBinding.logo2);\r\n\r\n        BrandListItem brand = new PreafManager(act).getActiveBrand();\r\n        fourBinding.brandName.setText(brand.getName());\r\n        fourBinding.frontBrandName.setText(brand.getName());\r\n\r\n        if (!brand.getAddress().isEmpty()) {\r\n            fourBinding.addressTxt.setText(brand.getAddress());\r\n        }\r\n\r\n        if (!brand.getPhonenumber().isEmpty()) {\r\n            fourBinding.phoneTxt.setText(brand.getPhonenumber());\r\n        }\r\n\r\n        if (!brand.getEmail().isEmpty()) {\r\n            fourBinding.emailTxt.setText(brand.getEmail());\r\n        }\r\n        if (!brand.getWebsite().isEmpty()) {\r\n            fourBinding.websiteTxt.setText(brand.getWebsite());\r\n        }\r\n        loadDefaultColorCardFour(act, fourBinding, colors);\r\n    }\r\n\r\n    public static void loadDataCardFive(Activity act, LayoutDigitalCardFifthBinding fiveBinding, Palette colors) {\r\n        Picasso.get().load(new PreafManager(act).getActiveBrand().getLogo()).into(fiveBinding.logo);\r\n        Picasso.get().load(new PreafManager(act).getActiveBrand().getLogo()).into(fiveBinding.logo2);\r\n        BrandListItem brand = new PreafManager(act).getActiveBrand();\r\n        fiveBinding.brandName.setText(brand.getName());\r\n\r\n        if (!brand.getAddress().isEmpty()) {\r\n            fiveBinding.addressTxt.setText(brand.getAddress());\r\n        }\r\n\r\n        if (!brand.getPhonenumber().isEmpty()) {\r\n            fiveBinding.phoneTxt.setText(brand.getPhonenumber());\r\n        }\r\n\r\n        if (!brand.getEmail().isEmpty()) {\r\n            fiveBinding.emailTxt.setText(brand.getEmail());\r\n        }\r\n        loadDefaultColorCardFive(act, fiveBinding, colors);\r\n    }\r\n\r\n    public static void loadDefaultColorCardOne(Activity act, LayoutDigitalCardOneBinding binding, Palette colors) {\r\n        binding.frontPage.setBackgroundTintList(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.verticalView.setBackgroundTintList(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.vertical2.setBackgroundTintList(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.callIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.websiteIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.addressIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.leftView.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.rightView.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n    }\r\n\r\n    public static void loadDefaultColorCardTwo(Activity act, LayoutDigitalCardTwoBinding binding, Palette colors) {\r\n        binding.frontPage.setBackgroundTintList(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.topBackground.setBackgroundTintList(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.thirdBackground.setBackgroundTintList(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.secondBackground.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.fourthBackground.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.callIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.address.setTextColor(ContextCompat.getColor(act, R.color.black));\r\n        binding.phoneTxt.setTextColor(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.emailTxt.setTextColor(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.websiteTxt.setTextColor(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.emailIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.websiteIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        GradientDrawable drawable = (GradientDrawable) binding.logoThumbnail.getBackground();\r\n        drawable.setStroke(2, colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n    }\r\n\r\n    public static void loadDefaultColorCardThree(Activity act, LayoutDigitalCardThreeBinding binding, Palette colors) {\r\n        binding.backPage.setBackgroundTintList(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.callIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.websiteIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.emailIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n    }\r\n\r\n    public static void loadDefaultColorCardFour(Activity act, LayoutDigitalCardFourthBinding binding, Palette colors) {\r\n        binding.view.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.verticalView.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.leftView.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.rightView.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.emailIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.callIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.websiteIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.frontBrandName.setTextColor(ColorStateList.valueOf(ContextCompat.getColor(act, R.color.black)));\r\n        binding.brandName.setTextColor(ColorStateList.valueOf(ContextCompat.getColor(act, R.color.black)));\r\n        binding.phoneTxt.setTextColor(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.emailTxt.setTextColor(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.addressTxt.setTextColor(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.websiteTxt.setTextColor(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n    }\r\n\r\n    public static void loadDefaultColorCardFive(Activity act, LayoutDigitalCardFifthBinding binding, Palette colors) {\r\n\r\n        binding.bottomView.setBackgroundTintList(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.brandName.setTextColor(ColorStateList.valueOf(ContextCompat.getColor(act, R.color.black)));\r\n        binding.addressTxt.setTextColor(ColorStateList.valueOf(ContextCompat.getColor(act, R.color.black)));\r\n        binding.emailTxt.setTextColor(ColorStateList.valueOf(ContextCompat.getColor(act, R.color.black)));\r\n        binding.phoneTxt.setTextColor(ColorStateList.valueOf(ContextCompat.getColor(act, R.color.black)));\r\n        binding.emailIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.addressIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n        binding.userIcon.setImageTintList(ColorStateList.valueOf(ContextCompat.getColor(act, R.color.white)));\r\n        binding.callIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));\r\n    }\r\n\r\n    public static ArrayList<ColorsModel> getColorList(VisitingCardModel model, Palette colors, Activity act) {\r\n        if (model.getLayoutType() == VisitingCardModel.LAYOUT_ONE) {\r\n            return getColorsListCardOne(colors, act, model.getOneBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_TWO) {\r\n            return getColorsListCardTwo(colors, act, model.getTwoBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_THREE) {\r\n            return getColorsListCardThree(colors, act, model.getThreeBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FOUR) {\r\n            return getColorsListCardFour(colors, act, model.getFourBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FIVE) {\r\n            return getColorsListCardFive(colors, act, model.getFiveBinding());\r\n        }\r\n        return new ArrayList<>();\r\n    }\r\n\r\n    public static ArrayList<BackgroundColorsModel> getBackgroundColorList(VisitingCardModel model, Palette colors, Activity act) {\r\n        if (model.getLayoutType() == VisitingCardModel.LAYOUT_ONE) {\r\n            return getBackgroundColorsListCardOne(colors, act, model.getOneBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_TWO) {\r\n            return getBackgroundColorsListCardTwo(colors, act, model.getTwoBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_THREE) {\r\n            return getBackgroundColorsListCardThree(colors, act, model.getThreeBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FOUR) {\r\n            return getBackgroundColorsListCardFour(colors, act, model.getFourBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FIVE) {\r\n            return getBackgroundColorsListCardFive(colors, act, model.getFiveBinding());\r\n        }\r\n        return new ArrayList<>();\r\n    }\r\n\r\n    public static ArrayList<TextColorsModel> getTextColorList(VisitingCardModel model, Palette colors, Activity act) {\r\n        if (model.getLayoutType() == VisitingCardModel.LAYOUT_ONE) {\r\n            return getTextColorsListCardOne(colors, act, model.getOneBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_TWO) {\r\n            return getTextColorsListCardTwo(colors, act, model.getTwoBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_THREE) {\r\n            return getTextColorsListCardThree(colors, act, model.getThreeBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FOUR) {\r\n            return getTextColorsListCardFour(colors, act, model.getFourBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FIVE) {\r\n            return getTextColorsListCardFive(colors, act, model.getFiveBinding());\r\n        }\r\n        return new ArrayList<>();\r\n    }\r\n\r\n    public static ArrayList<IconsColorsModel> getIconsColorList(VisitingCardModel model, Palette colors, Activity act) {\r\n        if (model.getLayoutType() == VisitingCardModel.LAYOUT_ONE) {\r\n            return getIconsColorsListCardOne(colors, act, model.getOneBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_TWO) {\r\n            return getIconsColorsListCardTwo(colors, act, model.getTwoBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_THREE) {\r\n            return getIconsColorsListCardThree(colors, act, model.getThreeBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FOUR) {\r\n            return getIconsColorsListCardFour(colors, act, model.getFourBinding());\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FIVE) {\r\n            return getIconsColorsListCardFive(colors, act, model.getFiveBinding());\r\n        }\r\n        return new ArrayList<>();\r\n    }\r\n\r\n    public static ArrayList<BackgroundColorsModel> getBackgroundColorsListCardOne(Palette colors, Activity act, LayoutDigitalCardOneBinding binding) {\r\n        ArrayList<BackgroundColorsModel> colorsList = new ArrayList<>();\r\n        BackgroundColorsModel model = new BackgroundColorsModel(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.frontPage.getId());\r\n        viewId.add(binding.vertical2.getId());\r\n        viewId.add(binding.verticalView.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new BackgroundColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.leftView.getId());\r\n        viewId.add(binding.rightView.getId());\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.websiteIcon.getId());\r\n        viewId.add(binding.addressIcon.getId());\r\n\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<TextColorsModel> getTextColorsListCardOne(Palette colors, Activity act, LayoutDigitalCardOneBinding binding) {\r\n        ArrayList<TextColorsModel> colorsList = new ArrayList<>();\r\n        TextColorsModel model = new TextColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.websiteTxt1.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new TextColorsModel(ContextCompat.getColor(act, R.color.black));\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.brandName.getId());\r\n        viewId.add(binding.phoneTxt.getId());\r\n        viewId.add(binding.websiteTxt.getId());\r\n        viewId.add(binding.addressTxt.getId());\r\n\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<IconsColorsModel> getIconsColorsListCardOne(Palette colors, Activity act, LayoutDigitalCardOneBinding binding) {\r\n        ArrayList<IconsColorsModel> colorsList = new ArrayList<>();\r\n        IconsColorsModel model = new IconsColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.userIcon.getId());\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.websiteIcon.getId());\r\n        viewId.add(binding.addressIcon.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<BackgroundColorsModel> getBackgroundColorsListCardTwo(Palette colors, Activity act, LayoutDigitalCardTwoBinding binding) {\r\n        ArrayList<BackgroundColorsModel> colorsList = new ArrayList<>();\r\n        BackgroundColorsModel model = new BackgroundColorsModel(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.frontPage.getId());\r\n        viewId.add(binding.backPage.getId());\r\n        viewId.add(binding.topBackground.getId());\r\n        viewId.add(binding.thirdBackground.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new BackgroundColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.secondBackground.getId());\r\n        viewId.add(binding.fourthBackground.getId());\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.emailIcon.getId());\r\n        viewId.add(binding.websiteIcon.getId());\r\n\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<TextColorsModel> getTextColorsListCardTwo(Palette colors, Activity act, LayoutDigitalCardTwoBinding binding) {\r\n        ArrayList<TextColorsModel> colorsList = new ArrayList<>();\r\n        TextColorsModel model = new TextColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.webTxt.getId());\r\n        viewId.add(binding.brandName.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new TextColorsModel(ContextCompat.getColor(act, R.color.black));\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.address.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new TextColorsModel(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        model.setObjectPosition(2);\r\n        viewId.add(binding.phoneTxt.getId());\r\n        viewId.add(binding.emailTxt.getId());\r\n        viewId.add(binding.websiteTxt.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<IconsColorsModel> getIconsColorsListCardTwo(Palette colors, Activity act, LayoutDigitalCardTwoBinding binding) {\r\n        ArrayList<IconsColorsModel> colorsList = new ArrayList<>();\r\n        IconsColorsModel model = new IconsColorsModel(ContextCompat.getColor(act, R.color.black));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.webIcon.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new IconsColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.websiteIcon.getId());\r\n        viewId.add(binding.locationIcon.getId());\r\n        viewId.add(binding.emailIcon.getId());\r\n\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new IconsColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        model.setObjectPosition(2);\r\n        viewId.add(binding.fb.getId());\r\n        viewId.add(binding.insta.getId());\r\n        viewId.add(binding.wp.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<BackgroundColorsModel> getBackgroundColorsListCardThree(Palette colors, Activity act, LayoutDigitalCardThreeBinding binding) {\r\n        ArrayList<BackgroundColorsModel> colorsList = new ArrayList<>();\r\n        BackgroundColorsModel model = new BackgroundColorsModel(ContextCompat.getColor(act, R.color.colorChocolaty));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.frontPage.getId());\r\n        viewId.add(binding.outerLayer3.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new BackgroundColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.websiteIcon.getId());\r\n        viewId.add(binding.emailIcon.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<TextColorsModel> getTextColorsListCardThree(Palette colors, Activity act, LayoutDigitalCardThreeBinding binding) {\r\n        ArrayList<TextColorsModel> colorsList = new ArrayList<>();\r\n        TextColorsModel model = new TextColorsModel(ContextCompat.getColor(act, R.color.black));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.brandNameText.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new TextColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.phoneTxt.getId());\r\n        viewId.add(binding.emailTxt.getId());\r\n        viewId.add(binding.addressTxt.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<IconsColorsModel> getIconsColorsListCardThree(Palette colors, Activity act, LayoutDigitalCardThreeBinding binding) {\r\n        ArrayList<IconsColorsModel> colorsList = new ArrayList<>();\r\n        IconsColorsModel model = new IconsColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.emailIcon.getId());\r\n        viewId.add(binding.websiteIcon.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new IconsColorsModel(ContextCompat.getColor(act, R.color.black));\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.fb.getId());\r\n        viewId.add(binding.wp.getId());\r\n        viewId.add(binding.insta.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<BackgroundColorsModel> getBackgroundColorsListCardFour(Palette colors, Activity act, LayoutDigitalCardFourthBinding binding) {\r\n        ArrayList<BackgroundColorsModel> colorsList = new ArrayList<>();\r\n        BackgroundColorsModel model = new BackgroundColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.frontPage.getId());\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.emailIcon.getId());\r\n        viewId.add(binding.websiteIcon.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new BackgroundColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.view.getId());\r\n        viewId.add(binding.verticalView.getId());\r\n        viewId.add(binding.leftView.getId());\r\n        viewId.add(binding.rightView.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<TextColorsModel> getTextColorsListCardFour(Palette colors, Activity act, LayoutDigitalCardFourthBinding binding) {\r\n        ArrayList<TextColorsModel> colorsList = new ArrayList<>();\r\n        TextColorsModel model = new TextColorsModel(ContextCompat.getColor(act, R.color.black));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.frontBrandName.getId());\r\n        viewId.add(binding.brandName.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n\r\n        model = new TextColorsModel(ContextCompat.getColor(act, R.color.colorPrimary));\r\n        model.setObjectPosition(1);\r\n\r\n        viewId.add(binding.phoneTxt.getId());\r\n        viewId.add(binding.emailTxt.getId());\r\n        viewId.add(binding.addressTxt.getId());\r\n        viewId.add(binding.websiteTxt.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<IconsColorsModel> getIconsColorsListCardFour(Palette colors, Activity act, LayoutDigitalCardFourthBinding binding) {\r\n        ArrayList<IconsColorsModel> colorsList = new ArrayList<>();\r\n        IconsColorsModel model = new IconsColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.emailIcon.getId());\r\n        viewId.add(binding.websiteIcon.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<BackgroundColorsModel> getBackgroundColorsListCardFive(Palette colors, Activity act, LayoutDigitalCardFifthBinding binding) {\r\n        ArrayList<BackgroundColorsModel> colorsList = new ArrayList<>();\r\n        BackgroundColorsModel model = new BackgroundColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.frontPage.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new BackgroundColorsModel(ContextCompat.getColor(act, R.color.colorPrimary));\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.bottomView.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new BackgroundColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.white)));\r\n        model.setObjectPosition(2);\r\n        viewId.add(binding.verticalView.getId());\r\n        viewId.add(binding.call.getId());\r\n        viewId.add(binding.email.getId());\r\n        viewId.add(binding.address.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<TextColorsModel> getTextColorsListCardFive(Palette colors, Activity act, LayoutDigitalCardFifthBinding binding) {\r\n        ArrayList<TextColorsModel> colorsList = new ArrayList<>();\r\n        TextColorsModel model = new TextColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.frontBrandName.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n\r\n        model = new TextColorsModel(ContextCompat.getColor(act, R.color.black));\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.brandName.getId());\r\n        viewId.add(binding.phoneTxt.getId());\r\n        viewId.add(binding.emailTxt.getId());\r\n        viewId.add(binding.addressTxt.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<IconsColorsModel> getIconsColorsListCardFive(Palette colors, Activity act, LayoutDigitalCardFifthBinding binding) {\r\n        ArrayList<IconsColorsModel> colorsList = new ArrayList<>();\r\n        IconsColorsModel model = new IconsColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.userIcon.getId());\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.emailIcon.getId());\r\n        viewId.add(binding.addressIcon.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<ColorsModel> getColorsListCardOne(Palette colors, Activity act, LayoutDigitalCardOneBinding binding) {\r\n        ArrayList<ColorsModel> colorsList = new ArrayList<>();\r\n        ColorsModel model = new ColorsModel(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.frontPage.getId());\r\n        viewId.add(binding.vertical2.getId());\r\n        viewId.add(binding.verticalView.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.leftView.getId());\r\n        viewId.add(binding.rightView.getId());\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.websiteIcon.getId());\r\n        viewId.add(binding.addressIcon.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(2);\r\n        viewId.add(binding.logo2.getId());\r\n        viewId.add(binding.userIcon.getId());\r\n\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(ContextCompat.getColor(act, R.color.black));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(3);\r\n        viewId.add(binding.brandName.getId());\r\n        viewId.add(binding.phoneTxt.getId());\r\n        viewId.add(binding.websiteTxt.getId());\r\n        viewId.add(binding.addressTxt.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<ColorsModel> getColorsListCardTwo(Palette colors, Activity act, LayoutDigitalCardTwoBinding binding) {\r\n        ArrayList<ColorsModel> colorsList = new ArrayList<>();\r\n        ColorsModel model = new ColorsModel(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.frontPage.getId());\r\n        viewId.add(binding.topBackground.getId());\r\n        viewId.add(binding.thirdBackground.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.secondBackground.getId());\r\n        viewId.add(binding.fourthBackground.getId());\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.emailIcon.getId());\r\n        viewId.add(binding.websiteIcon.getId());\r\n        viewId.add(binding.logoThumbnail.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(2);\r\n        viewId.add(binding.brandName.getId());\r\n        viewId.add(binding.fb.getId());\r\n        viewId.add(binding.wp.getId());\r\n        viewId.add(binding.insta.getId());\r\n        viewId.add(binding.address.getId());\r\n\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(ContextCompat.getColor(act, R.color.black));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(3);\r\n        viewId.add(binding.emailTxt.getId());\r\n        viewId.add(binding.phoneTxt.getId());\r\n        viewId.add(binding.websiteTxt.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<ColorsModel> getColorsListCardThree(Palette colors, Activity act, LayoutDigitalCardThreeBinding binding) {\r\n        ArrayList<ColorsModel> colorsList = new ArrayList<>();\r\n        ColorsModel model = new ColorsModel(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.frontPage.getId());\r\n        viewId.add(binding.backPage.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.emailIcon.getId());\r\n        viewId.add(binding.websiteIcon.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(2);\r\n        viewId.add(binding.phoneTxt.getId());\r\n        viewId.add(binding.emailTxt.getId());\r\n        viewId.add(binding.addressTxt.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(ContextCompat.getColor(act, R.color.black));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(3);\r\n        viewId.add(binding.fb.getId());\r\n        viewId.add(binding.insta.getId());\r\n        viewId.add(binding.wp.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<ColorsModel> getColorsListCardFour(Palette colors, Activity act, LayoutDigitalCardFourthBinding binding) {\r\n        ArrayList<ColorsModel> colorsList = new ArrayList<>();\r\n        ColorsModel model = new ColorsModel(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.frontPage.getId());\r\n        viewId.add(binding.backPage.getId());\r\n\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.leftView.getId());\r\n        viewId.add(binding.rightView.getId());\r\n        viewId.add(binding.verticalView.getId());\r\n        viewId.add(binding.view.getId());\r\n\r\n\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(2);\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.emailIcon.getId());\r\n        viewId.add(binding.websiteIcon.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(ContextCompat.getColor(act, R.color.black));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(3);\r\n        viewId.add(binding.brandName.getId());\r\n        viewId.add(binding.frontBrandName.getId());\r\n        viewId.add(binding.phoneTxt.getId());\r\n        viewId.add(binding.emailTxt.getId());\r\n        viewId.add(binding.addressTxt.getId());\r\n        viewId.add(binding.websiteTxt.getId());\r\n\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static ArrayList<ColorsModel> getColorsListCardFive(Palette colors, Activity act, LayoutDigitalCardFifthBinding binding) {\r\n        ArrayList<ColorsModel> colorsList = new ArrayList<>();\r\n        ColorsModel model = new ColorsModel(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        ArrayList<Integer> viewId = new ArrayList<>();\r\n        model.setObjectPosition(0);\r\n        viewId.add(binding.frontPage.getId());\r\n        viewId.add(binding.backPage.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(1);\r\n        viewId.add(binding.bottomView.getId());\r\n        viewId.add(binding.verticalView.getId());\r\n        viewId.add(binding.call.getId());\r\n        viewId.add(binding.email.getId());\r\n        viewId.add(binding.address.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(ContextCompat.getColor(act, R.color.white));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(2);\r\n        viewId.add(binding.callIcon.getId());\r\n        viewId.add(binding.emailIcon.getId());\r\n        viewId.add(binding.addressIcon.getId());\r\n        viewId.add(binding.userIcon.getId());\r\n\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        model = new ColorsModel(ContextCompat.getColor(act, R.color.black));\r\n        viewId = new ArrayList<>();\r\n        model.setObjectPosition(3);\r\n        viewId.add(binding.phoneTxt.getId());\r\n        viewId.add(binding.brandName.getId());\r\n        viewId.add(binding.frontBrandName.getId());\r\n        viewId.add(binding.emailTxt.getId());\r\n        viewId.add(binding.addressTxt.getId());\r\n        model.setViewId(viewId);\r\n        colorsList.add(model);\r\n\r\n        return colorsList;\r\n    }\r\n\r\n    public static void applyColor(VisitingCardModel model, int colorCode, ColorsModel colorsModel) {\r\n        if (model.getLayoutType() == VisitingCardModel.LAYOUT_ONE) {\r\n            applyColorCardOne(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_TWO) {\r\n            applyColorCardTwo(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_THREE) {\r\n            applyColorCardThree(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FOUR) {\r\n            applyColorCardFour(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FIVE) {\r\n            applyColorCardFive(model, colorCode, colorsModel);\r\n        }\r\n    }\r\n\r\n    public static void applyBackgroundColor(VisitingCardModel model, int colorCode, BackgroundColorsModel colorsModel) {\r\n        if (model.getLayoutType() == VisitingCardModel.LAYOUT_ONE) {\r\n            applyBackgroundColorCardOne(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_TWO) {\r\n            applyBackgroundColorCardTwo(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_THREE) {\r\n            applyBackgroundColorCardThree(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FOUR) {\r\n            applyBackgroundColorCardFour(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FIVE) {\r\n            applyBackgroundColorCardFive(model, colorCode, colorsModel);\r\n        }\r\n    }\r\n\r\n    public static void applyTextColor(VisitingCardModel model, int colorCode, TextColorsModel colorsModel) {\r\n        if (model.getLayoutType() == VisitingCardModel.LAYOUT_ONE) {\r\n            applyTextColorCardOne(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_TWO) {\r\n            applyTextColorCardTwo(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_THREE) {\r\n            applyTextColorCardThree(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FOUR) {\r\n            applyTextColorCardFour(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FIVE) {\r\n            applyTextColorCardFive(model, colorCode, colorsModel);\r\n        }\r\n    }\r\n\r\n    public static void applyIconsColor(VisitingCardModel model, int colorCode, IconsColorsModel colorsModel) {\r\n        if (model.getLayoutType() == VisitingCardModel.LAYOUT_ONE) {\r\n            applyIconsColorCardOne(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_TWO) {\r\n            applyIconsColorCardTwo(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_THREE) {\r\n            applyIconsColorCardThree(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FOUR) {\r\n            applyIconsColorCardFour(model, colorCode, colorsModel);\r\n        } else if (model.getLayoutType() == VisitingCardModel.LAYOUT_FIVE) {\r\n            applyIconsColorCardFive(model, colorCode, colorsModel);\r\n        }\r\n    }\r\n\r\n    public static void applyBackgroundColorCardOne(VisitingCardModel model, int color, BackgroundColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getOneBinding().frontPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().vertical2.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().verticalView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getOneBinding().leftView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().rightView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().callIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().websiteIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().addressIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n\r\n    }\r\n\r\n    public static void applyTextColorCardOne(VisitingCardModel model, int color, TextColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getOneBinding().websiteTxt1.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getOneBinding().brandName.setTextColor(ColorStateList.valueOf(color));\r\n            model.getOneBinding().phoneTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getOneBinding().websiteTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getOneBinding().addressTxt.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n    }\r\n\r\n    public static void applyIconsColorCardOne(VisitingCardModel model, int color, IconsColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getOneBinding().userIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().callIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().websiteIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().addressIcon.setImageTintList(ColorStateList.valueOf(color));\r\n        }\r\n    }\r\n\r\n    public static void applyBackgroundColorCardTwo(VisitingCardModel model, int color, BackgroundColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getTwoBinding().frontPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().backPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().topBackground.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().thirdBackground.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getTwoBinding().websiteIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().emailIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().callIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().secondBackground.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().fourthBackground.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n\r\n    }\r\n\r\n    public static void applyTextColorCardTwo(VisitingCardModel model, int color, TextColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getTwoBinding().webTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().brandName.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getTwoBinding().address.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 2) {\r\n            model.getTwoBinding().phoneTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().emailTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().websiteTxt.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n    }\r\n\r\n    public static void applyIconsColorCardTwo(VisitingCardModel model, int color, IconsColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getTwoBinding().webIcon.setImageTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getTwoBinding().callIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().emailIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().websiteIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().locationIcon.setImageTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 2) {\r\n            model.getTwoBinding().fb.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().insta.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().wp.setImageTintList(ColorStateList.valueOf(color));\r\n        }\r\n\r\n    }\r\n\r\n    public static void applyBackgroundColorCardThree(VisitingCardModel model, int color, BackgroundColorsModel colorsModel) {\r\n        Activity act = null;\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getThreeBinding().frontPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().outerLayer3.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getThreeBinding().callIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().emailIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().websiteIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n\r\n    }\r\n\r\n    public static void applyTextColorCardThree(VisitingCardModel model, int color, TextColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getThreeBinding().brandNameText.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getThreeBinding().addressTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().phoneTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().emailTxt.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n\r\n    }\r\n\r\n    public static void applyIconsColorCardThree(VisitingCardModel model, int color, IconsColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getThreeBinding().callIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().emailIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().websiteIcon.setImageTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getThreeBinding().fb.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().wp.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().insta.setImageTintList(ColorStateList.valueOf(color));\r\n        }\r\n\r\n    }\r\n\r\n    public static void applyBackgroundColorCardFour(VisitingCardModel model, int color, BackgroundColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getFourBinding().frontPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().callIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().emailIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().websiteIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getFourBinding().view.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().verticalView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().leftView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().rightView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n    }\r\n\r\n    public static void applyTextColorCardFour(VisitingCardModel model, int color, TextColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getFourBinding().frontBrandName.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFourBinding().brandName.setTextColor(ColorStateList.valueOf(color));\r\n\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getFourBinding().phoneTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFourBinding().emailTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFourBinding().addressTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFourBinding().websiteTxt.setTextColor(ColorStateList.valueOf(color));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public static void applyIconsColorCardFour(VisitingCardModel model, int color, IconsColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getFourBinding().callIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().emailIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().websiteIcon.setImageTintList(ColorStateList.valueOf(color));\r\n        }\r\n    }\r\n\r\n    public static void applyBackgroundColorCardFive(VisitingCardModel model, int color, BackgroundColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getFiveBinding().frontPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getFiveBinding().bottomView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 2) {\r\n            model.getFiveBinding().verticalView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().call.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().email.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().address.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n    }\r\n\r\n    public static void applyTextColorCardFive(VisitingCardModel model, int color, TextColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getFiveBinding().frontBrandName.setTextColor(ColorStateList.valueOf(color));\r\n\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n\r\n            model.getFiveBinding().brandName.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().phoneTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().emailTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().addressTxt.setTextColor(ColorStateList.valueOf(color));\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public static void applyIconsColorCardFive(VisitingCardModel model, int color, IconsColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n\r\n            model.getFiveBinding().addressIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().callIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().emailIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().userIcon.setImageTintList(ColorStateList.valueOf(color));\r\n        }\r\n    }\r\n\r\n    public static void applyColorCardOne(VisitingCardModel model, int color, ColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getOneBinding().frontPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().vertical2.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().verticalView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getOneBinding().leftView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().rightView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().callIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().websiteIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().addressIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 2) {\r\n            model.getOneBinding().logo2.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getOneBinding().userIcon.setImageTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 3) {\r\n            model.getOneBinding().brandName.setTextColor(ColorStateList.valueOf(color));\r\n            model.getOneBinding().phoneTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getOneBinding().websiteTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getOneBinding().addressTxt.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n    }\r\n\r\n    public static void applyColorCardTwo(VisitingCardModel model, int color, ColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getTwoBinding().frontPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().topBackground.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().thirdBackground.setBackgroundTintList(ColorStateList.valueOf(color));\r\n\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getTwoBinding().secondBackground.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().fourthBackground.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().callIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().emailIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().websiteIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().logoThumbnail.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            GradientDrawable drawable = (GradientDrawable) model.getTwoBinding().logoThumbnail.getBackground();\r\n            drawable.setStroke(2, color);\r\n        }\r\n        if (colorsModel.getObjectPosition() == 2) {\r\n            model.getTwoBinding().brandName.setTextColor(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().fb.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().wp.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().insta.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().address.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 3) {\r\n            model.getTwoBinding().websiteTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().phoneTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getTwoBinding().emailTxt.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n    }\r\n\r\n    public static void applyColorCardThree(VisitingCardModel model, int color, ColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getThreeBinding().frontPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().backPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getThreeBinding().callIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().websiteIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().emailIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 2) {\r\n            model.getThreeBinding().phoneTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().addressTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().emailTxt.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 3) {\r\n            model.getThreeBinding().fb.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().wp.setImageTintList(ColorStateList.valueOf(color));\r\n            model.getThreeBinding().insta.setImageTintList(ColorStateList.valueOf(color));\r\n        }\r\n    }\r\n\r\n    public static void applyColorCardFour(VisitingCardModel model, int color, ColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getFourBinding().frontPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().backPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getFourBinding().leftView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().rightView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().view.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().verticalView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 2) {\r\n            model.getFourBinding().verticalView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().callIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().emailIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFourBinding().websiteIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            //model.getFourBinding().logo2.setImageTintList(ColorStateList.valueOf(color));\r\n            //model.getFourBinding().logo.setImageTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 3) {\r\n            model.getFourBinding().brandName.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFourBinding().frontBrandName.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFourBinding().phoneTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFourBinding().emailTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFourBinding().websiteTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFourBinding().addressTxt.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n    }\r\n\r\n    public static void applyColorCardFive(VisitingCardModel model, int color, ColorsModel colorsModel) {\r\n        if (colorsModel.getObjectPosition() == 0) {\r\n            model.getFiveBinding().frontPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().backPage.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 1) {\r\n            model.getFiveBinding().bottomView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().verticalView.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().call.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().email.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().address.setBackgroundTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 2) {\r\n            model.getFiveBinding().callIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().addressIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().emailIcon.setBackgroundTintList(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().userIcon.setImageTintList(ColorStateList.valueOf(color));\r\n            //model.getFiveBinding().logo2.setImageTintList(ColorStateList.valueOf(color));\r\n            //model.getFiveBinding().logo.setImageTintList(ColorStateList.valueOf(color));\r\n        }\r\n        if (colorsModel.getObjectPosition() == 3) {\r\n            model.getFiveBinding().brandName.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().frontBrandName.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().phoneTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().emailTxt.setTextColor(ColorStateList.valueOf(color));\r\n            model.getFiveBinding().addressTxt.setTextColor(ColorStateList.valueOf(color));\r\n        }\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/app/brandmania/Common/VisitingCardHelper.java b/app/src/main/java/com/app/brandmania/Common/VisitingCardHelper.java
---- a/app/src/main/java/com/app/brandmania/Common/VisitingCardHelper.java	(revision d694773943718c8522b74ee45ef5ba3976e86563)
-+++ b/app/src/main/java/com/app/brandmania/Common/VisitingCardHelper.java	(date 1637747017354)
-@@ -51,7 +51,6 @@
- 
-     }
- 
--
-     public static void loadDataCardOne(Activity act, LayoutDigitalCardOneBinding oneBinding, Palette colors) {
-         BrandListItem brand = new PreafManager(act).getActiveBrand();
-         Picasso.get().load(brand.getLogo()).into(oneBinding.logo2);
-@@ -187,13 +186,13 @@
-         binding.thirdBackground.setBackgroundTintList(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));
-         binding.secondBackground.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));
-         binding.fourthBackground.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));
--        binding.callIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));
-+        binding.callIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));
-         binding.address.setTextColor(ContextCompat.getColor(act, R.color.black));
-         binding.phoneTxt.setTextColor(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));
-         binding.emailTxt.setTextColor(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));
-         binding.websiteTxt.setTextColor(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));
--        binding.emailIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));
--        binding.websiteIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));
-+        binding.emailIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));
-+        binding.websiteIcon.setBackgroundTintList(ColorStateList.valueOf(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary))));
-         GradientDrawable drawable = (GradientDrawable) binding.logoThumbnail.getBackground();
-         drawable.setStroke(2, colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));
-     }
-@@ -379,6 +378,8 @@
- 
-         model.setViewId(viewId);
-         colorsList.add(model);
-+
-+
-         return colorsList;
-     }
- 
-@@ -410,14 +411,15 @@
- 
-     public static ArrayList<IconsColorsModel> getIconsColorsListCardTwo(Palette colors, Activity act, LayoutDigitalCardTwoBinding binding) {
-         ArrayList<IconsColorsModel> colorsList = new ArrayList<>();
--        IconsColorsModel model = new IconsColorsModel(ContextCompat.getColor(act, R.color.black));
-+        IconsColorsModel model = new IconsColorsModel(ContextCompat.getColor(act, R.color.white));
-         ArrayList<Integer> viewId = new ArrayList<>();
-         model.setObjectPosition(0);
-         viewId.add(binding.webIcon.getId());
-+        viewId.add(binding.locationIcon.getId());
-         model.setViewId(viewId);
-         colorsList.add(model);
- 
--        model = new IconsColorsModel(colors.getVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));
-+        model = new IconsColorsModel(colors.getDarkVibrantColor(ContextCompat.getColor(act, R.color.colorPrimary)));
-         model.setObjectPosition(1);
-         viewId.add(binding.callIcon.getId());
-         viewId.add(binding.websiteIcon.getId());
-@@ -978,6 +980,7 @@
-     public static void applyIconsColorCardTwo(VisitingCardModel model, int color, IconsColorsModel colorsModel) {
-         if (colorsModel.getObjectPosition() == 0) {
-             model.getTwoBinding().webIcon.setImageTintList(ColorStateList.valueOf(color));
-+            model.getTwoBinding().locationIcon.setImageTintList(ColorStateList.valueOf(color));
-         }
-         if (colorsModel.getObjectPosition() == 1) {
-             model.getTwoBinding().callIcon.setImageTintList(ColorStateList.valueOf(color));
Index: app/src/main/java/com/app/brandmania/Activity/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport static android.Manifest.permission.CAMERA;\r\nimport static android.Manifest.permission.READ_EXTERNAL_STORAGE;\r\nimport static android.Manifest.permission.WRITE_EXTERNAL_STORAGE;\r\nimport static com.google.android.play.core.install.model.AppUpdateType.IMMEDIATE;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.IntentSender;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.Settings;\r\nimport android.text.Html;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.webkit.WebView;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Activity.custom.CustomViewAllActivit;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Common.HELPER;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Fragment.bottom.CustomFragment;\r\nimport com.app.brandmania.Fragment.bottom.DownloadsFragment;\r\nimport com.app.brandmania.Fragment.bottom.HomeFragment;\r\nimport com.app.brandmania.Fragment.bottom.ProfileFragment;\r\nimport com.app.brandmania.Model.VersionListIItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.databinding.DialogPermissionsLayoutBinding;\r\nimport com.app.brandmania.utils.APIs;\r\nimport com.app.brandmania.utils.Utility;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.android.play.core.appupdate.AppUpdateInfo;\r\nimport com.google.android.play.core.appupdate.AppUpdateManager;\r\nimport com.google.android.play.core.appupdate.AppUpdateManagerFactory;\r\nimport com.google.android.play.core.install.model.UpdateAvailability;\r\nimport com.google.android.play.core.tasks.OnSuccessListener;\r\nimport com.google.android.play.core.tasks.Task;\r\n\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class HomeActivity extends BaseActivity implements BottomNavigationView.OnNavigationItemSelectedListener, HomeFragment.CUSTOM_TAB_CHANGE_INTERFACE {\r\n    VersionListIItem versionListIItem;\r\n    PreafManager preafManager;\r\n    private AppUpdateManager appUpdateManager;\r\n    private Activity act;\r\n    private boolean iscutomEnable = false;\r\n\r\n    BottomNavigationView navigation;\r\n    private boolean isHomeTab = true;\r\n    public static boolean isAlreadyDisplayed = false;\r\n    public static boolean isAlreadyDisplayedOffer = false;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home);\r\n        FetchCustomFrameStatus();\r\n        act = this;\r\n\r\n        preafManager = new PreafManager(act);\r\n        getUpdate();\r\n        checkForUpdates();\r\n        loadFragment(new HomeFragment());\r\n        navigation = findViewById(R.id.navigation);\r\n        navigation.setOnNavigationItemSelectedListener(this);\r\n        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);\r\n        if (ContextCompat.checkSelfPermission(getApplicationContext(), CAMERA) != PackageManager.PERMISSION_GRANTED ||\r\n                ContextCompat.checkSelfPermission(getApplicationContext(), READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED ||\r\n                ContextCompat.checkSelfPermission(getApplicationContext(), WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\r\n            askPermissions();\r\n        }\r\n    }\r\n\r\n    @SuppressLint(\"NonConstantResourceId\")\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        Fragment fragment = null;\r\n        switch (menuItem.getItemId()) {\r\n            case R.id.navigation_home:\r\n                isHomeTab = true;\r\n                fragment = new HomeFragment();\r\n                overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                break;\r\n\r\n            case R.id.navigation_custom:\r\n                isHomeTab = false;\r\n                if (iscutomEnable) {\r\n                    fragment = new CustomFragment();\r\n\r\n                } else {\r\n                    Intent intent = new Intent(getApplicationContext(), CustomViewAllActivit.class);\r\n                    startActivity(intent);\r\n                }\r\n                overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                break;\r\n\r\n            case R.id.navigation_download:\r\n                isHomeTab = false;\r\n                fragment = new DownloadsFragment();\r\n                overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                break;\r\n\r\n            case R.id.navigation_profile:\r\n                isHomeTab = false;\r\n                fragment = new ProfileFragment();\r\n                overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                break;\r\n        }\r\n        return loadFragment(fragment);\r\n    }\r\n\r\n    private boolean loadFragment(Fragment fragment) {\r\n        if (fragment != null) {\r\n            getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, fragment).commit();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    public DialogPermissionsLayoutBinding permissionsLayoutBinding;\r\n    private int REQUESTED_ALL = 0001;\r\n    private int REQUESTED_CAMERA = 0002;\r\n    private int REQUESTED_STORAGE = 0003;\r\n    private int REQUESTED_CONTACT = 0004;\r\n    private int REQUEST_SETTINGS = 0005;\r\n\r\n    androidx.appcompat.app.AlertDialog alertDialog;\r\n\r\n    public void askPermissions() {\r\n        permissionsLayoutBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.dialog_permissions_layout, null, false);\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(act, R.style.MyAlertDialogStyle);\r\n        builder.setView(permissionsLayoutBinding.getRoot());\r\n        alertDialog = builder.create();\r\n        alertDialog.setContentView(permissionsLayoutBinding.getRoot());\r\n        alertDialog.setCancelable(false);\r\n        alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        alertDialog.show();\r\n\r\n        if (ContextCompat.checkSelfPermission(getApplicationContext(), CAMERA) == PackageManager.PERMISSION_GRANTED) {\r\n            permissionsLayoutBinding.checked1.setVisibility(View.VISIBLE);\r\n        }\r\n        if (ContextCompat.checkSelfPermission(getApplicationContext(), READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED && ContextCompat.checkSelfPermission(getApplicationContext(), WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {\r\n            permissionsLayoutBinding.checked2.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n\r\n        permissionsLayoutBinding.permissionLayout1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                ActivityCompat.requestPermissions(act,\r\n                        new String[]{CAMERA}, REQUESTED_CAMERA);\r\n            }\r\n        });\r\n        permissionsLayoutBinding.permissionLayout2.setOnClickListener(v -> ActivityCompat.requestPermissions(act,\r\n                new String[]{READ_EXTERNAL_STORAGE, WRITE_EXTERNAL_STORAGE},\r\n                REQUESTED_STORAGE));\r\n\r\n//        permissionsLayoutBinding.permissionLayout3.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                ActivityCompat.requestPermissions(act,\r\n//                        new String[]{READ_EXTERNAL_STORAGE},\r\n//                        3);\r\n//            }\r\n//        });\r\n\r\n        permissionsLayoutBinding.allowPermission.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (ContextCompat.checkSelfPermission(getApplicationContext(), READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED &&\r\n                        ContextCompat.checkSelfPermission(getApplicationContext(), CAMERA) == PackageManager.PERMISSION_GRANTED &&\r\n                        ContextCompat.checkSelfPermission(getApplicationContext(), WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {\r\n                    alertDialog.dismiss();\r\n                } else {\r\n                    ActivityCompat.requestPermissions(act,\r\n                            new String[]{CAMERA, READ_EXTERNAL_STORAGE, WRITE_EXTERNAL_STORAGE},\r\n                            REQUESTED_ALL);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        boolean targetSetting = false;\r\n        if (requestCode == REQUESTED_ALL) {\r\n            if (grantResults.length > 0) {\r\n                boolean cameraGrant = grantResults[0] == PackageManager.PERMISSION_GRANTED;\r\n                boolean readStorageGrant = grantResults[1] == PackageManager.PERMISSION_GRANTED;\r\n                boolean writeStorageGrant = grantResults[2] == PackageManager.PERMISSION_GRANTED;\r\n                if (cameraGrant) {\r\n                    permissionsLayoutBinding.checked1.setVisibility(View.VISIBLE);\r\n                }\r\n                if (readStorageGrant && writeStorageGrant) {\r\n                    permissionsLayoutBinding.checked2.setVisibility(View.VISIBLE);\r\n                }\r\n                if (cameraGrant && readStorageGrant && writeStorageGrant) {\r\n                    return;\r\n                }\r\n\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                    if (shouldShowRequestPermissionRationale(CAMERA)) {\r\n                        showMessageOKCancel(\"You need to allow access to the permissions\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialog, int which) {\r\n                                requestPermissions(new String[]{CAMERA}, REQUESTED_CAMERA);\r\n                            }\r\n                        });\r\n                    } else if (shouldShowRequestPermissionRationale(READ_EXTERNAL_STORAGE) || shouldShowRequestPermissionRationale(WRITE_EXTERNAL_STORAGE)) {\r\n                        requestPermissions(new String[]{READ_EXTERNAL_STORAGE, WRITE_EXTERNAL_STORAGE}, REQUESTED_STORAGE);\r\n                    } else {\r\n                        targetSetting = true;\r\n                    }\r\n                }\r\n            } else {\r\n                Toast.makeText(act, \"You need to allow permission for better performance\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } else if (requestCode == REQUESTED_CAMERA) {\r\n            boolean cameraGrant = grantResults[0] == PackageManager.PERMISSION_GRANTED;\r\n            if (cameraGrant) {\r\n                permissionsLayoutBinding.checked1.setVisibility(View.VISIBLE);\r\n                return;\r\n            }\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                if (shouldShowRequestPermissionRationale(CAMERA)) {\r\n                    showMessageOKCancel(\"You need to allow access to the permissions\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            requestPermissions(new String[]{CAMERA}, REQUESTED_CAMERA);\r\n                        }\r\n                    });\r\n                } else {\r\n                    targetSetting = true;\r\n                }\r\n\r\n            }\r\n        } else if (requestCode == REQUESTED_STORAGE) {\r\n\r\n            boolean readStorageGrant = grantResults[0] == PackageManager.PERMISSION_GRANTED;\r\n            boolean writeStorageGrant = grantResults[1] == PackageManager.PERMISSION_GRANTED;\r\n            if (readStorageGrant && writeStorageGrant) {\r\n                permissionsLayoutBinding.checked2.setVisibility(View.VISIBLE);\r\n                return;\r\n            }\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                if (shouldShowRequestPermissionRationale(READ_EXTERNAL_STORAGE) || shouldShowRequestPermissionRationale(WRITE_EXTERNAL_STORAGE)) {\r\n                    showMessageOKCancel(\"You need to allow access to the permissions\", new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            requestPermissions(new String[]{READ_EXTERNAL_STORAGE, WRITE_EXTERNAL_STORAGE}, REQUESTED_CAMERA);\r\n                        }\r\n                    });\r\n                } else {\r\n                    targetSetting = true;\r\n                }\r\n            }\r\n        }\r\n        if (targetSetting) {\r\n            showMessageOKCancel(\"You need to allow access to the permissions\", new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    Intent intent = new Intent(Settings.ACTION_APPLICATION_DETAILS_SETTINGS);\r\n                    Uri uri = Uri.fromParts(\"package\", getPackageName(), null);\r\n                    intent.setData(uri);\r\n                    startActivityForResult(intent, REQUEST_SETTINGS);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private void showMessageOKCancel(String message, DialogInterface.OnClickListener okListener) {\r\n        new androidx.appcompat.app.AlertDialog.Builder(this)\r\n                .setMessage(message)\r\n                .setPositiveButton(\"OK\", okListener)\r\n                .setNegativeButton(\"Cancel\", null)\r\n                .create()\r\n                .show();\r\n    }\r\n\r\n    //app updates\r\n    private void checkForUpdates() {\r\n\r\n        appUpdateManager = AppUpdateManagerFactory.create(act);\r\n        Task<AppUpdateInfo> appUpdateInfoTask = appUpdateManager.getAppUpdateInfo();\r\n\r\n        //Checks that the platform will allow the specified type of update.\r\n        appUpdateInfoTask.addOnSuccessListener(new OnSuccessListener<AppUpdateInfo>() {\r\n            @Override\r\n            public void onSuccess(AppUpdateInfo appUpdateInfo) {\r\n                if (appUpdateInfo.updateAvailability() == UpdateAvailability.UPDATE_AVAILABLE && appUpdateInfo.isUpdateTypeAllowed(IMMEDIATE)) {\r\n                    startAppUpdates(appUpdateInfo);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void startAppUpdates(AppUpdateInfo appUpdateInfo) {\r\n        try {\r\n            appUpdateManager.startUpdateFlowForResult(appUpdateInfo, IMMEDIATE, act, Constant.APP_UPDATES);\r\n        } catch (IntentSender.SendIntentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == Constant.APP_UPDATES) {\r\n            if (resultCode == RESULT_CANCELED) {\r\n                checkForUpdates();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (appUpdateManager != null) {\r\n            appUpdateManager\r\n                    .getAppUpdateInfo()\r\n                    .addOnSuccessListener(\r\n                            new OnSuccessListener<AppUpdateInfo>() {\r\n                                @Override\r\n                                public void onSuccess(AppUpdateInfo appUpdateInfo) {\r\n                                    if (appUpdateInfo.updateAvailability()\r\n                                            == UpdateAvailability.DEVELOPER_TRIGGERED_UPDATE_IN_PROGRESS) {\r\n                                        // If an in-app update is already running, resume the update.\r\n                                        try {\r\n                                            appUpdateManager.startUpdateFlowForResult(\r\n                                                    appUpdateInfo,\r\n                                                    IMMEDIATE,\r\n                                                    act,\r\n                                                    Constant.APP_UPDATES);\r\n                                        } catch (IntentSender.SendIntentException e) {\r\n                                            e.printStackTrace();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n        }\r\n\r\n        if (alertDialog != null && alertDialog.isShowing()) {\r\n            if (ContextCompat.checkSelfPermission(getApplicationContext(), CAMERA) == PackageManager.PERMISSION_GRANTED) {\r\n                permissionsLayoutBinding.checked1.setVisibility(View.VISIBLE);\r\n            }\r\n            if (ContextCompat.checkSelfPermission(getApplicationContext(), READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED && ContextCompat.checkSelfPermission(getApplicationContext(), WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {\r\n                permissionsLayoutBinding.checked2.setVisibility(View.VISIBLE);\r\n            }\r\n            if (ContextCompat.checkSelfPermission(getApplicationContext(), READ_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED &&\r\n                    ContextCompat.checkSelfPermission(getApplicationContext(), CAMERA) == PackageManager.PERMISSION_GRANTED &&\r\n                    ContextCompat.checkSelfPermission(getApplicationContext(), WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_GRANTED) {\r\n                permissionsLayoutBinding.allowPermission.setText(\"Close\");\r\n                if (alertDialog != null)\r\n                    alertDialog.dismiss();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    public void onBackPressed() {\r\n        if (isHomeTab) {\r\n            Intent a = new Intent(Intent.ACTION_MAIN);\r\n            a.addCategory(Intent.CATEGORY_HOME);\r\n            a.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n            startActivity(a);\r\n        } else {\r\n            navigation.setSelectedItemId(R.id.navigation_home);\r\n        }\r\n    }\r\n\r\n    private void getUpdate() {\r\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, APIs.GET_UPDATE, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    JSONObject jsonArray1 = jsonObject.getJSONObject(\"data\");\r\n                    versionListIItem = new VersionListIItem();\r\n                    versionListIItem.setId(jsonArray1.getString(\"id\"));\r\n                    versionListIItem.setAppliactionVersion(jsonArray1.getString(\"application_version\"));\r\n                    versionListIItem.setMessage(jsonArray1.getString(\"message\"));\r\n                    versionListIItem.setForcefullyUpdate(jsonArray1.getString(\"forcefully_update\"));\r\n                    versionListIItem.setIsNew(jsonArray1.getString(\"is_new\"));\r\n                    versionListIItem.setCreatedAt(jsonArray1.getString(\"created_at\"));\r\n                    versionListIItem.setUpdatedAt(jsonArray1.getString(\"updated_at\"));\r\n                    versionListIItem.setDeletedAt(jsonArray1.getString(\"deleted_at\"));\r\n\r\n\r\n                    int apiVERSION = Integer.parseInt(versionListIItem.getAppliactionVersion().replace(\".\", \"\"));\r\n                    int currentVERSION = Integer.parseInt(String.valueOf(Constant.F_VERSION).replace(\".\", \"\"));\r\n\r\n                    if (apiVERSION > currentVERSION) {\r\n                        AlertDialog.Builder builder = new AlertDialog.Builder(act);\r\n                        final View customLayout = getLayoutInflater().inflate(R.layout.frame_alert_box, null);\r\n                        ImageView cloasedBox = customLayout.findViewById(R.id.CloseImg);\r\n                        WebView webView = customLayout.findViewById(R.id.webView);\r\n                        TextView updateTitle = customLayout.findViewById(R.id.updateTitle);\r\n                        Button updateBtn = customLayout.findViewById(R.id.updateBtn);\r\n                        webView.loadData(jsonArray1.getString(\"message\"), \"text/html; charset=utf-8\", \"utf-8\");\r\n                        webView.setBackgroundColor(Color.TRANSPARENT);\r\n                        String htmlString = \"<u>App Update</u>\";\r\n                        updateTitle.setText(Html.fromHtml(htmlString));\r\n                        builder.setView(customLayout);\r\n\r\n                        if (versionListIItem.getForcefullyUpdate().equalsIgnoreCase(\"1\")) {\r\n                            cloasedBox.setVisibility(View.GONE);\r\n                        }\r\n\r\n                        AlertDialog dialog = builder.create();\r\n                        dialog.getWindow().setBackgroundDrawableResource(R.color.colorNavText);\r\n                        dialog.setCancelable(false);\r\n                        dialog.show();\r\n                        cloasedBox.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                dialog.dismiss();\r\n                            }\r\n                        });\r\n\r\n                        updateBtn.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                Uri uri = Uri.parse(\"https://play.google.com/store/apps/details?id=com.make.mybrand\");\r\n                                Intent intent = new Intent(Intent.ACTION_VIEW, uri);\r\n                                try {\r\n\r\n                                    startActivity(intent);\r\n                                } catch (Exception e) {\r\n\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        Button pbutton = dialog.getButton(DialogInterface.BUTTON_POSITIVE);\r\n                        pbutton.setBackgroundColor(Color.WHITE);\r\n                    }\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    private void FetchCustomFrameStatus() {\r\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, APIs.FETCH_CUSTOME_FRAME_STATUS, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    if (ResponseHandler.getBool(jsonObject, \"status\")) {\r\n                        iscutomEnable = true;\r\n                    }\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    @Override\r\n    public void makeTabChange(int i) {\r\n        Fragment fragment = null;\r\n        if (i == 1) {\r\n            navigation.setSelectedItemId(R.id.navigation_custom);\r\n            fragment = new CustomFragment();\r\n        }\r\n        overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n        loadFragment(fragment);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/app/brandmania/Activity/HomeActivity.java b/app/src/main/java/com/app/brandmania/Activity/HomeActivity.java
--- a/app/src/main/java/com/app/brandmania/Activity/HomeActivity.java	(revision aed5b44041b80278f672bdbf02f1fda8c3890f6f)
+++ b/app/src/main/java/com/app/brandmania/Activity/HomeActivity.java	(date 1638340906715)
@@ -161,8 +161,7 @@
     private int REQUESTED_STORAGE = 0003;
     private int REQUESTED_CONTACT = 0004;
     private int REQUEST_SETTINGS = 0005;
-
-    androidx.appcompat.app.AlertDialog alertDialog;
+    private androidx.appcompat.app.AlertDialog alertDialog;
 
     public void askPermissions() {
         permissionsLayoutBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.dialog_permissions_layout, null, false);
@@ -193,14 +192,6 @@
                 new String[]{READ_EXTERNAL_STORAGE, WRITE_EXTERNAL_STORAGE},
                 REQUESTED_STORAGE));
 
-//        permissionsLayoutBinding.permissionLayout3.setOnClickListener(new View.OnClickListener() {
-//            @Override
-//            public void onClick(View v) {
-//                ActivityCompat.requestPermissions(act,
-//                        new String[]{READ_EXTERNAL_STORAGE},
-//                        3);
-//            }
-//        });
 
         permissionsLayoutBinding.allowPermission.setOnClickListener(new View.OnClickListener() {
             @Override
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_ovel.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_round_rect.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_round_rect_more.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_round_rect_thin.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_round_shap.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_round_shap_black.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_round_shap_icon.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_top_flat_shap.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_round_corner_item_one.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_round_corner_one.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_round_corner_two.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/footer_rect_tri_from_all.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/footer_rect_tri_from_left_bottom_top.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/footer_rect_tri_from_top_bottom_right.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/footer_rounded_wave_two.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/ic_call_for_pdf.xml\" value=\"0.2125\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/ic_crown.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/ic_freee.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/ic_outline_call_24.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/ic_social_media_facebook.xml\" value=\"0.20208333333333334\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/ic_userrr.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/item_round_corner_two.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/shapeee_round_one_corner.xml\" value=\"0.20416666666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_add_brand_multiple.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_custom_view_all.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_pdf.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_refer.xml\" value=\"0.19635416666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_update_band_list.xml\" value=\"0.19635416666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_view_all_frame_image.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_view_all_image.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_view_brand.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/category_tab.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/dashboard_item_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/dialog_digital_card_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/footer_tab.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/fragment_colors_picker.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/fragment_country_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/fragment_custom.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/fragment_home.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/fragment_list_bottom_list.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/fragment_profile.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_colors_for_card_layout.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_digital_card_five.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_digital_card_four.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_digital_card_one.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_digital_card_three.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_digital_card_two.xml\" value=\"0.75\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_eight.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_five.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_four.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_layout_six.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_nine.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_one.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_seven.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_ten.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_three.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_layout_getbrandlist.xml\" value=\"0.19635416666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_list_layout.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_eighteen.xml\" value=\"0.75\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_eleven.xml\" value=\"0.75\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_fifteen.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_fourteen.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_nineteen.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_seventeen.xml\" value=\"0.9060913705583756\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_sixteen.xml\" value=\"0.75\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_thirteen.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_twelone.xml\" value=\"0.9\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_twenty.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_fifth.xml\" value=\"0.5881481481481482\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_fourth.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_one.xml\" value=\"0.37604166666666666\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_three.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_two.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_eightteen.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_eleven.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_nineteen.xml\" value=\"0.3927083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_seventeen.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_sixteen.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_thirteen.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_twelone.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_twenty.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_for_load_eight.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_for_load_one.xml\" value=\"0.18802083333333333\" />\r\n        <entry key=\"..\\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_for_load_ten.xml\" value=\"0.19635416666666666\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision aed5b44041b80278f672bdbf02f1fda8c3890f6f)
+++ b/.idea/misc.xml	(date 1638354752032)
@@ -8,89 +8,75 @@
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_round_rect_more.xml" value="0.20416666666666666" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_round_rect_thin.xml" value="0.20416666666666666" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_round_shap.xml" value="0.20416666666666666" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_round_shap_black.xml" value="0.20208333333333334" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_round_shap_icon.xml" value="0.20416666666666666" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_card_top_flat_shap.xml" value="0.20416666666666666" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_round_corner_item_one.xml" value="0.20416666666666666" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_round_corner_one.xml" value="0.20416666666666666" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/digital_round_corner_two.xml" value="0.20416666666666666" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/footer_rect_tri_from_all.xml" value="0.20416666666666666" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/footer_rect_tri_from_left_bottom_top.xml" value="0.20416666666666666" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/footer_rect_tri_from_top_bottom_right.xml" value="0.20416666666666666" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/footer_rounded_wave_two.xml" value="0.20208333333333334" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/ic_call_for_pdf.xml" value="0.2125" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/ic_crown.xml" value="0.20416666666666666" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/ic_freee.xml" value="0.20416666666666666" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/ic_outline_call_24.xml" value="0.20416666666666666" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/ic_social_media_facebook.xml" value="0.20208333333333334" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/ic_userrr.xml" value="0.20416666666666666" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/item_round_corner_two.xml" value="0.20416666666666666" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/drawable/shapeee_round_one_corner.xml" value="0.20416666666666666" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_add_brand_multiple.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_custom_view_all.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_pdf.xml" value="0.5" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_refer.xml" value="0.19635416666666666" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_update_band_list.xml" value="0.19635416666666666" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_view_all_frame_image.xml" value="0.18802083333333333" />
+        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_pdf.xml" value="0.33" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_view_all_image.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/activity_view_brand.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/category_tab.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/dashboard_item_layout.xml" value="0.18802083333333333" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/dialog_digital_card_layout.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/footer_tab.xml" value="0.18802083333333333" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/fragment_colors_picker.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/fragment_country_layout.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/fragment_custom.xml" value="0.18802083333333333" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/fragment_home.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/fragment_list_bottom_list.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/fragment_profile.xml" value="0.18802083333333333" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_colors_for_card_layout.xml" value="0.67" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_digital_card_five.xml" value="0.67" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_digital_card_four.xml" value="0.5" />
+        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_digital_card_four.xml" value="0.75" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_digital_card_one.xml" value="0.5" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_digital_card_three.xml" value="0.5" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_digital_card_two.xml" value="0.75" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_eight.xml" value="0.67" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_five.xml" value="0.67" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_four.xml" value="0.5" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_layout_six.xml" value="0.67" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_nine.xml" value="0.67" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_one.xml" value="0.5" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_seven.xml" value="0.67" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_ten.xml" value="0.5" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_footer_three.xml" value="0.67" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_layout_getbrandlist.xml" value="0.19635416666666666" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_list_layout.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_eighteen.xml" value="0.75" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_eleven.xml" value="0.75" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_fifteen.xml" value="0.67" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_fourteen.xml" value="0.67" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_nineteen.xml" value="0.67" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_seventeen.xml" value="0.9060913705583756" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_sixteen.xml" value="0.75" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_thirteen.xml" value="0.67" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_twelone.xml" value="0.9" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/item_preview_twenty.xml" value="0.67" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_fifth.xml" value="0.5881481481481482" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_fourth.xml" value="0.33" />
+        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_fifth.xml" value="0.37604166666666666" />
+        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_fourth.xml" value="0.2807153965785381" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_one.xml" value="0.37604166666666666" />
         <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_three.xml" value="0.5" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_two.xml" value="0.5" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_eightteen.xml" value="0.25" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_eleven.xml" value="0.25" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_nineteen.xml" value="0.3927083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_seventeen.xml" value="0.5" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_sixteen.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_thirteen.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_twelone.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_twenty.xml" value="0.33" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_for_load_eight.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_for_load_one.xml" value="0.18802083333333333" />
-        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_for_load_ten.xml" value="0.19635416666666666" />
+        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_digital_card_two.xml" value="0.37604166666666666" />
+        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_nineteen.xml" value="0.18802083333333333" />
+        <entry key="..\:/_ANDROID_PROJECTS/BrandManiaUpdate/app/src/main/res/layout/layout_footer_twenty.xml" value="0.13541666666666666" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/drawable/background_with_shadow.xml" value="0.225" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/drawable/shape_package_dot.xml" value="0.225" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/drawable/shape_package_outline_active.xml" value="0.225" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/activity_add_brand_multiple.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/activity_add_brandd.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/activity_download_detail.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/activity_edit_selected_images.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/activity_favorite_details.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/activity_pdf.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/activity_update_band_list.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/activity_view_all_frame_image.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/activity_view_business_category.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/dialog_permissions_layout.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/fragment_colors_picker.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/fragment_home.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/fragment_list_bottom_list.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/frame_tab.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/item_footer_four.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/item_footer_layout_six.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/item_footer_nine.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/item_footer_one.xml" value="0.75" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/item_footer_three.xml" value="0.5" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/item_footer_two.xml" value="0.67" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/item_layout_daily_images.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/item_layout_viewallframe.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/item_layout_viewallimage.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/item_preview_sixteen.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/item_preview_twenty.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/layout_footer_eightteen.xml" value="0.5" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/layout_footer_eleven.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/layout_footer_fifteen.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/layout_footer_fourteen.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/layout_footer_nineteen.xml" value="0.33" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/layout_footer_seventeen.xml" value="0.31648675171736995" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/layout_footer_sixteen.xml" value="0.33" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/layout_footer_thirteen.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/layout_footer_twelone.xml" value="0.21217105263157895" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/layout_footer_twenty.xml" value="0.4240631163708087" />
+        <entry key="..\:/__ANDROID_PROJECTS/GithubProjects/BrandMania/app/src/main/res/layout/layout_for_load_eight.xml" value="0.21217105263157895" />
       </map>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/com/app/brandmania/Activity/brand/UpdateBandList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity.brand;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\n\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.androidnetworking.AndroidNetworking;\r\nimport com.androidnetworking.common.ANRequest;\r\nimport com.androidnetworking.common.Priority;\r\nimport com.androidnetworking.error.ANError;\r\nimport com.androidnetworking.interfaces.JSONObjectRequestListener;\r\nimport com.androidnetworking.interfaces.UploadProgressListener;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Common.MakeMyBrandApp;\r\nimport com.app.brandmania.Common.ObserverActionID;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Fragment.bottom.CountrySelectionFragment;\r\nimport com.app.brandmania.Fragment.bottom.ListBottomFragment;\r\nimport com.app.brandmania.Fragment.bottom.PickerFragment;\r\nimport com.app.brandmania.Interface.ItemSelectionInterface;\r\nimport com.app.brandmania.Interface.alertListenerCallback;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.CommonListModel;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.databinding.ActivityUpdateBandListBinding;\r\nimport com.app.brandmania.utils.APIs;\r\nimport com.app.brandmania.utils.CodeReUse;\r\nimport com.app.brandmania.utils.Utility;\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.gson.Gson;\r\nimport com.theartofdev.edmodo.cropper.CropImage;\r\nimport com.theartofdev.edmodo.cropper.CropImageView;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class UpdateBandList extends BaseActivity implements ItemSelectionInterface, alertListenerCallback {\r\n    PreafManager prefManager;\r\n    Gson gson;\r\n    public static int BRAND_CATEGORY = 0;\r\n    public static int COUNTRY = 1;\r\n    public static int STATE = 2;\r\n    public static int CITY = 3;\r\n    private String BrandTitle;\r\n    private String cityTitle = \"Choose City\";\r\n    private String countryTitle = \"Choose Country\";\r\n    private String stateTtitle = \"Choose State\";\r\n\r\n    private int showingView = -1;\r\n    private boolean isEditModeEnable = false;\r\n    private BrandListItem listModel;\r\n    private BrandListItem data;\r\n    private boolean isLoading = false;\r\n    private ActivityUpdateBandListBinding binding;\r\n    private Activity act;\r\n    ArrayList<CommonListModel> BRANDTypeList = new ArrayList<>();\r\n    private ListBottomFragment bottomSheetFragment;\r\n    CommonListModel commonListModel;\r\n\r\n    private AlertDialog.Builder alertDialogBuilder;\r\n    private Uri mCropImageUri;\r\n    private Bitmap selectedLogo;\r\n\r\n\r\n    //private ArrayList<CommonListModel> countryList = new ArrayList<>();\r\n    private ArrayList<CommonListModel> stateList = new ArrayList<>();\r\n    private ArrayList<CommonListModel> cityList = new ArrayList<>();\r\n\r\n    private boolean wantToShowDropDown = false;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_update_band_list);\r\n        prefManager = new PreafManager(this);\r\n        gson = new Gson();\r\n        CodeReUse.RemoveError(binding.categoryEdt, binding.categoryEdtLayout);\r\n        CodeReUse.RemoveError(binding.nameTxt, binding.nameTxtLayout);\r\n        CodeReUse.RemoveError(binding.phoneTxt, binding.phoneTxtLayout);\r\n        CodeReUse.RemoveError(binding.addressEdt, binding.addressEdtLayout);\r\n        CodeReUse.RemoveError(binding.websiteEdt, binding.websiteEdtLayout);\r\n        CodeReUse.RemoveError(binding.emailIdEdt, binding.emailIdEdtLayout);\r\n        CodeReUse.RemoveError(binding.businessServiceEdt, binding.businessFacilityEdtLayout);\r\n\r\n        CodeReUse.RemoveError(binding.countryEdt, binding.countryLayout);\r\n        CodeReUse.RemoveError(binding.stateEdt, binding.stateLayout);\r\n        CodeReUse.RemoveError(binding.cityEdt, binding.cityLayout);\r\n\r\n        alertDialogBuilder = new AlertDialog.Builder(act);\r\n        binding.viewImgFirst.setTag(\"0\");\r\n\r\n        getBrandCategory(BRAND_CATEGORY);\r\n        binding.categoryEdt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                showFragmentList(BRAND_CATEGORY, BrandTitle, BRANDTypeList);\r\n            }\r\n        });\r\n\r\n\r\n        binding.stateLayout.setVisibility(View.VISIBLE);\r\n        binding.countryLayout.setVisibility(View.GONE);\r\n//\r\n//        binding.countryEdt.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                if (countryList != null)\r\n//                    chooseFragment(COUNTRY, countryTitle, countryList, binding.countryEdt.getText().toString());\r\n//            }\r\n//        });\r\n        binding.stateEdt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (stateList != null)\r\n                    chooseFragment(STATE, stateTtitle, stateList, binding.stateEdt.getText().toString());\r\n            }\r\n        });\r\n        binding.cityEdt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (binding.stateEdt.getText().length() != 0) {\r\n                    if (cityList != null)\r\n                        chooseFragment(CITY, cityTitle, cityList, binding.cityEdt.getText().toString());\r\n                } else {\r\n                    wantToShowDropDown = true;\r\n                    getCountryStateCity(CALL_CITY);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        binding.addExpenceBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Validation();\r\n            }\r\n        });\r\n        listModel = gson.fromJson(getIntent().getStringExtra(\"detailsObj\"), BrandListItem.class);\r\n        data = gson.fromJson(getIntent().getStringExtra(\"data\"), BrandListItem.class);\r\n\r\n        if (listModel != null) {\r\n            binding.catIdEdt.setText(listModel.getId());\r\n            binding.IdEdt.setText(listModel.getId());\r\n            binding.categoryEdt.setText(listModel.getCategoryName());\r\n            binding.nameTxt.setText(listModel.getName());\r\n            binding.phoneTxt.setText(listModel.getPhonenumber());\r\n            binding.addressEdt.setText(listModel.getAddress());\r\n            binding.websiteEdt.setText(listModel.getWebsite());\r\n            binding.emailIdEdt.setText(listModel.getEmail());\r\n\r\n            binding.businessServiceEdt.setText(listModel.getBrandService());\r\n\r\n            if (listModel.getPincode() != null && !listModel.getPincode().isEmpty()) {\r\n                binding.pincodeEdt.setText(listModel.getPincode());\r\n            }\r\n//            if (listModel.getCountry() != null && !listModel.getCountry().isEmpty()) {\r\n//                binding.countryLayout.setVisibility(View.VISIBLE);\r\n//                binding.countryEdt.setText(listModel.getCountry());\r\n//\r\n//                CommonListModel data = new CommonListModel();\r\n//                data.setLayoutType(CommonListModel.LAYOUT_BLOCK);\r\n//                data.setId(\"-1\");\r\n//                data.setName(listModel.getCountry());\r\n//                selectedCountry = data;\r\n//            }\r\n\r\n            if (listModel.getState() != null && !listModel.getState().isEmpty()) {\r\n                binding.stateLayout.setVisibility(View.VISIBLE);\r\n                binding.stateEdt.setText(listModel.getState());\r\n\r\n                CommonListModel data = new CommonListModel();\r\n                data.setLayoutType(CommonListModel.LAYOUT_BLOCK);\r\n                data.setId(\"-1\");\r\n                data.setName(listModel.getState());\r\n                selectedState = data;\r\n\r\n            }\r\n\r\n            if (listModel.getCity() != null && !listModel.getCity().isEmpty()) {\r\n                binding.cityLayout.setVisibility(View.VISIBLE);\r\n                binding.cityEdt.setText(listModel.getCity());\r\n\r\n                CommonListModel data = new CommonListModel();\r\n                data.setLayoutType(CommonListModel.LAYOUT_BLOCK);\r\n                data.setId(\"-1\");\r\n                data.setName(listModel.getCity());\r\n                selectedCity = data;\r\n            }\r\n\r\n\r\n            binding.BackButtonMember.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    onBackPressed();\r\n                }\r\n\r\n            });\r\n            Glide.with(act).load(listModel.getLogo()).placeholder(R.drawable.placeholder).into((binding.viewImgFirst));\r\n            Glide.with(act).load(listModel.getFrame()).placeholder(R.drawable.placeholder).into((binding.selectframe1));\r\n\r\n            binding.viewImgFirst.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n\r\n                    if ((listModel.getNo_of_used_image().isEmpty() || listModel.getLogo().isEmpty()) || listModel.getNo_of_used_image().equalsIgnoreCase(\"0\")) {\r\n                        if (!isEditModeEnable) {\r\n                            if (binding.viewImgFirst.getTag().toString().equalsIgnoreCase(\"1\"))\r\n                                pickerView(Constant.PICKER_FIRST, true, selectedLogo);\r\n                            else\r\n                                pickerView(Constant.PICKER_FIRST, false, null);\r\n                        }\r\n                    } else {\r\n                        new AlertDialog.Builder(act)\r\n                                .setMessage(\"once you download or share image. You can't change your logo.\\nIf you want to change logo please contact to admin.\")\r\n                                .setCancelable(true)\r\n                                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                                    @Override\r\n                                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                                        dialogInterface.dismiss();\r\n                                        ((alertListenerCallback) act).alertListenerClick();\r\n                                    }\r\n                                })\r\n                                .show();\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            binding.catIdEdt.setText(prefManager.getActiveBrand().getCategoryName());\r\n            binding.IdEdt.setText(prefManager.getActiveBrand().getId());\r\n            binding.categoryEdt.setText(prefManager.getActiveBrand().getCategoryName());\r\n            binding.nameTxt.setText(prefManager.getActiveBrand().getName());\r\n            binding.phoneTxt.setText(prefManager.getActiveBrand().getPhonenumber());\r\n            binding.addressEdt.setText(prefManager.getActiveBrand().getAddress());\r\n            binding.websiteEdt.setText(prefManager.getActiveBrand().getWebsite());\r\n            binding.emailIdEdt.setText(prefManager.getActiveBrand().getEmail());\r\n            binding.businessServiceEdt.setText(prefManager.getActiveBrand().getBrandService());\r\n\r\n\r\n            if (prefManager.getActiveBrand().getPincode() != null && !prefManager.getActiveBrand().getPincode().isEmpty()) {\r\n                binding.pincodeEdt.setText(prefManager.getActiveBrand().getPincode());\r\n            }\r\n//            if (prefManager.getActiveBrand().getCountry() != null && !prefManager.getActiveBrand().getCountry().isEmpty()) {\r\n//                binding.countryLayout.setVisibility(View.VISIBLE);\r\n//                binding.countryEdt.setText(prefManager.getActiveBrand().getCountry());\r\n//\r\n//\r\n//            }\r\n\r\n            if (prefManager.getActiveBrand().getState() != null && !prefManager.getActiveBrand().getState().isEmpty()) {\r\n                binding.stateLayout.setVisibility(View.VISIBLE);\r\n                binding.stateEdt.setText(prefManager.getActiveBrand().getState());\r\n            }\r\n\r\n            if (prefManager.getActiveBrand().getCity() != null && !prefManager.getActiveBrand().getCity().isEmpty()) {\r\n                binding.cityLayout.setVisibility(View.VISIBLE);\r\n                binding.cityEdt.setText(prefManager.getActiveBrand().getCity());\r\n            }\r\n\r\n\r\n            Glide.with(act).load(prefManager.getActiveBrand().getLogo()).placeholder(R.drawable.placeholder).into((binding.viewImgFirst));\r\n            //  Glide.with(act).load(listModel.getFrame()).placeholder(R.drawable.placeholder).into((binding.selectframe1));\r\n\r\n\r\n            binding.viewImgFirst.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n\r\n                    if ((prefManager.getActiveBrand().getNo_of_used_image().isEmpty() || prefManager.getActiveBrand().getLogo().isEmpty()) || prefManager.getActiveBrand().getNo_of_used_image().equalsIgnoreCase(\"0\")) {\r\n                        if (!isEditModeEnable) {\r\n                            if (binding.viewImgFirst.getTag().toString().equalsIgnoreCase(\"1\"))\r\n                                pickerView(Constant.PICKER_FIRST, true, selectedLogo);\r\n                            else\r\n                                pickerView(Constant.PICKER_FIRST, false, null);\r\n                        }\r\n                    } else {\r\n                        new AlertDialog.Builder(act)\r\n                                .setMessage(\"once you download or share image. You can't change your logo.\\nIf you want to change logo please contact to admin.\")\r\n                                .setCancelable(true)\r\n                                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                                    @Override\r\n                                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                                        dialogInterface.dismiss();\r\n                                        ((alertListenerCallback) act).alertListenerClick();\r\n                                    }\r\n                                })\r\n                                .show();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n        binding.BackButtonMember.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    private void startCropImageActivity(Uri imageUri) {\r\n        CropImage.activity(imageUri)\r\n                .setGuidelines(CropImageView.Guidelines.ON)\r\n                .setMultiTouchEnabled(true)\r\n                .setOutputCompressFormat(Bitmap.CompressFormat.PNG)\r\n                .start(this);\r\n\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n\r\n        // handle result of pick image chooser\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == CropImage.PICK_IMAGE_CHOOSER_REQUEST_CODE && resultCode == Activity.RESULT_OK) {\r\n            Uri imageUri = CropImage.getPickImageResultUri(this, data);\r\n\r\n            if (CropImage.isReadExternalStoragePermissionsRequired(this, imageUri)) {\r\n                mCropImageUri = imageUri;\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                    requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 0);\r\n                }\r\n            } else {\r\n                startCropImageActivity(imageUri);\r\n            }\r\n        }\r\n\r\n        // handle result of CropImageActivity\r\n        if (requestCode == CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE) {\r\n            CropImage.ActivityResult result = CropImage.getActivityResult(data);\r\n            if (resultCode == RESULT_OK) {\r\n                binding.viewImgFirst.setVisibility(View.VISIBLE);\r\n                binding.imgEmptyStateFirst.setVisibility(View.GONE);\r\n                binding.actionDeleteFirst.setVisibility(View.VISIBLE);\r\n                ((ImageView) findViewById(R.id.viewImgFirst)).setImageURI(result.getUri());\r\n                ImageView imageView = ((ImageView) findViewById(R.id.viewImgFirst));\r\n                selectedLogo = ((BitmapDrawable) imageView.getDrawable()).getBitmap();\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private void getBrandCategory(int flag) {\r\n        String apiUrl = \"\";\r\n        int requestedMethod = 0;\r\n\r\n        if (flag == BRAND_CATEGORY) {\r\n            apiUrl = APIs.GET_BRAND_CATEGORY;\r\n            requestedMethod = Request.Method.POST;\r\n        }\r\n\r\n        Utility.Log(\"API : \", apiUrl);\r\n\r\n        StringRequest request = new StringRequest(requestedMethod, apiUrl, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.Log(flag + \"- Response : \", response);\r\n                try {\r\n                    if (ResponseHandler.isSuccess(response, null)) {\r\n                        JSONObject responseJson = ResponseHandler.createJsonObject(response);\r\n                        JSONArray jsonArray = ResponseHandler.getJSONArray(responseJson, \"data\");\r\n                        Log.e(\"jsonArray-\", jsonArray.toString());\r\n                        for (int i = 0; i < jsonArray.length(); i++) {\r\n                            JSONObject itemObj = jsonArray.getJSONObject(i);\r\n                            CommonListModel listModel = new CommonListModel();\r\n                            listModel.setLayoutType(CommonListModel.LAYOUT_BLOCK);\r\n                            listModel.setId(ResponseHandler.getString(itemObj, \"id\"));\r\n                            listModel.setName(ResponseHandler.getString(itemObj, \"biz_cat_name\"));\r\n                            BRANDTypeList.add(listModel);\r\n                        }\r\n                        Log.w(\"Size\", String.valueOf(BRANDTypeList.size()));\r\n                    }\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                getCountryStateCity(CALL_STATE);\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                error.printStackTrace();\r\n                getCountryStateCity(CALL_STATE);\r\n            }\r\n        }) {\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"X-Authorization\", \"Bearer\" + prefManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                HashMap<String, String> map = new HashMap<>();\r\n\r\n\r\n                Utility.Log(\"Params : \", map.toString());\r\n                return map;\r\n            }\r\n        };\r\n        RequestQueue queue = Volley.newRequestQueue(this);\r\n        queue.add(request);\r\n\r\n    }\r\n\r\n    private void Validation() {\r\n        boolean isError = false;\r\n        boolean isFocus = false;\r\n\r\n        if (binding.categoryEdt.getText().toString().trim().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.categoryEdtLayout.setError(getString(R.string.brandcategory_text));\r\n            binding.categoryEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.categoryEdt.requestFocus();\r\n            binding.scrollView.scrollTo(0, binding.categoryEdt.getBottom());\r\n        }\r\n        if (binding.nameTxt.getText().toString().trim().length() == 0) {\r\n            isError = true;\r\n\r\n            binding.nameTxtLayout.setError(getString(R.string.brandname_text));\r\n            binding.nameTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.nameTxt.requestFocus();\r\n            if (!isFocus) {\r\n                binding.nameTxt.requestFocus();\r\n                isFocus = true;\r\n                binding.scrollView.scrollTo(0, binding.nameTxt.getBottom());\r\n            }\r\n        }\r\n\r\n        if (!binding.phoneTxt.getText().toString().trim().equals(\"\")) {\r\n            if (binding.phoneTxt.getText().toString().trim().length() < 10) {\r\n                isError = true;\r\n                binding.phoneTxtLayout.setError(getString(R.string.validphoneno_txt));\r\n                binding.phoneTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n                if (!isFocus) {\r\n                    binding.phoneTxt.requestFocus();\r\n                    isFocus = true;\r\n                    binding.scrollView.scrollTo(0, binding.phoneTxt.getBottom());\r\n                }\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            if (binding.phoneTxt.getText().toString().trim().equals(\"\")) {\r\n                isError = true;\r\n                binding.phoneTxtLayout.setError(getString(R.string.entermobileno_text));\r\n                binding.phoneTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n                if (!isFocus) {\r\n                    binding.emailIdEdt.requestFocus();\r\n                    isFocus = true;\r\n                    binding.scrollView.scrollTo(0, binding.emailIdEdt.getBottom());\r\n                }\r\n                return;\r\n            }\r\n\r\n        }\r\n\r\n        if (binding.stateEdt.getText().toString().trim().length()==0) {\r\n            binding.stateLayout.setError(\"Please select state\");\r\n            binding.stateLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            isError = true;\r\n            if (!isFocus) {\r\n                binding.stateEdt.requestFocus();\r\n                isFocus = true;\r\n                binding.scrollView.scrollTo(0, binding.stateEdt.getBottom());\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (binding.cityEdt.getText().toString().trim().length()==0) {\r\n            binding.cityLayout.setError(\"Please select city\");\r\n            binding.cityLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            isError = true;\r\n            if (!isFocus) {\r\n                binding.cityEdt.requestFocus();\r\n                isFocus = true;\r\n                binding.scrollView.scrollTo(0, binding.cityEdt.getBottom());\r\n            }\r\n            return;\r\n        }\r\n\r\n\r\n        if (!isError) {\r\n            Bitmap bitmap = null;\r\n            if (selectedLogo != null) {\r\n                bitmap = selectedLogo;\r\n            }\r\n\r\n            EditBrandBrand(bitmap);\r\n        }\r\n\r\n    }\r\n\r\n    private void EditBrandBrand(Bitmap img) {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Log.e(\"API\", APIs.EDIT_BRAND);\r\n        Log.e(\"API\", prefManager.getUserToken());\r\n        File img1File = null;\r\n        if (img != null) {\r\n            img1File = CodeReUse.createFileFromBitmap(act, \"photo.jpeg\", img);\r\n        }\r\n        ANRequest.MultiPartBuilder request = AndroidNetworking.upload(APIs.EDIT_BRAND)\r\n                .addHeaders(\"Accept\", \"application/json\")\r\n                .addHeaders(\"Content-Type\", \"application/json\")\r\n                .addHeaders(\"X-Authorization\", \"Bearer\" + prefManager.getUserToken())\r\n                .addMultipartParameter(\"brand_id\", binding.IdEdt.getText().toString())\r\n                .addMultipartParameter(\"br_category\", binding.categoryEdt.getText().toString())\r\n                .addMultipartParameter(\"br_name\", binding.nameTxt.getText().toString())\r\n                .addMultipartParameter(\"br_phone\", binding.phoneTxt.getText().toString())\r\n                .addMultipartParameter(\"br_address\", binding.addressEdt.getText().toString())\r\n                .addMultipartParameter(\"br_website\", binding.websiteEdt.getText().toString())\r\n                .addMultipartParameter(\"br_email\", binding.emailIdEdt.getText().toString())\r\n                .addMultipartParameter(\"br_service\", binding.businessServiceEdt.getText().toString())\r\n                .setTag(\"Add User\")\r\n                .setPriority(Priority.HIGH);\r\n\r\n        request.addMultipartParameter(\"br_address\", binding.addressEdt.getText().toString());\r\n        request.addMultipartParameter(\"br_country\", \"\");\r\n        request.addMultipartParameter(\"br_state\", binding.stateEdt.getText().toString());\r\n        request.addMultipartParameter(\"br_city\", binding.cityEdt.getText().toString());\r\n        request.addMultipartParameter(\"br_pincode\", binding.pincodeEdt.getText().toString());\r\n\r\n        if (commonListModel != null) {\r\n            request.addMultipartParameter(\"br_category\", commonListModel.getId());\r\n        } else {\r\n            if (listModel != null)\r\n                request.addMultipartParameter(\"br_category\", listModel.getCategoryId());\r\n            else\r\n                request.addMultipartParameter(\"br_category\", prefManager.getActiveBrand().getCategoryId());\r\n        }\r\n\r\n        if (img1File != null) {\r\n            request.addMultipartFile(\"br_logo\", img1File);\r\n            Log.e(\"br_logo\", String.valueOf(img1File));\r\n        }\r\n\r\n        if (img1File != null) {\r\n            request.addMultipartFile(\"frame\", img1File);\r\n            Log.e(\"br_logo\", String.valueOf(img1File));\r\n        }\r\n\r\n\r\n        request.build().setUploadProgressListener(new UploadProgressListener() {\r\n            @Override\r\n            public void onProgress(long bytesUploaded, long totalBytes) {\r\n                // do anything with progress\r\n            }\r\n        })\r\n                .getAsJSONObject(new JSONObjectRequestListener() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        Utility.Log(\"Verify-Response\", response);\r\n\r\n                        try {\r\n\r\n                            if (response.getBoolean(\"status\")) {\r\n\r\n                                alertDialogBuilder.setMessage(ResponseHandler.getString(response, \"message\"));\r\n                                alertDialogBuilder.setPositiveButton(\"Ok\", new DialogInterface.OnClickListener() {\r\n                                    @Override\r\n                                    public void onClick(DialogInterface arg0, int arg1) {\r\n                                        onBackPressed();\r\n                                    }\r\n                                });\r\n\r\n                                AlertDialog alertDialog = alertDialogBuilder.create();\r\n                                alertDialog.setCancelable(false);\r\n                                alertDialog.show();\r\n                                MakeMyBrandApp.getInstance().getObserver().setValue(ObserverActionID.RELOAD_BRANDS);\r\n                                MakeMyBrandApp.getInstance().getObserver().setValue(ObserverActionID.REFRESH_BRAND_NAME);\r\n\r\n\r\n                            }\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(ANError error) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n\r\n                        if (error.getErrorCode() != 0) {\r\n                            Log.e(\"onError errorCode : \", String.valueOf(error.getErrorCode()));\r\n                            Log.e(\"onError errorBody : \", error.getErrorBody());\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        } else {\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    CountrySelectionFragment countrySelectionFragment;\r\n\r\n    public void chooseFragment(int callingFlag, String title, ArrayList<CommonListModel> datalist, String alreadySelectedData) {\r\n        countrySelectionFragment = new CountrySelectionFragment(title, datalist, callingFlag, alreadySelectedData);\r\n\r\n        if (countrySelectionFragment.isVisible()) {\r\n            countrySelectionFragment.dismiss();\r\n        }\r\n        if (countrySelectionFragment.isAdded()) {\r\n            countrySelectionFragment.dismiss();\r\n        }\r\n\r\n        if (!countrySelectionFragment.isVisible()) {\r\n            countrySelectionFragment.show(getSupportFragmentManager(), countrySelectionFragment.getTag());\r\n        }\r\n    }\r\n\r\n\r\n    public void showFragmentList(int callingFlag, String title, ArrayList<CommonListModel> datalist) {\r\n        bottomSheetFragment = new ListBottomFragment();\r\n        Log.e(\"Size---\", String.valueOf(datalist.size()));\r\n        bottomSheetFragment.setListData(callingFlag, title, datalist);\r\n        if (bottomSheetFragment.isVisible()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        if (bottomSheetFragment.isAdded()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        bottomSheetFragment.show(getSupportFragmentManager(), bottomSheetFragment.getTag());\r\n    }\r\n\r\n    private void pickerView(int actionId, boolean viewMode, Bitmap selectedBitmap) {\r\n        PickerFragment pickerFragment = new PickerFragment(act);\r\n        pickerFragment.setEnableViewMode(viewMode);\r\n        pickerFragment.setActionId(actionId);\r\n\r\n        if (viewMode) {\r\n            pickerFragment.setSelectedBitmapForFullView(selectedBitmap);\r\n        }\r\n        PickerFragment.HandlerImageLoad imageLoad = new PickerFragment.HandlerImageLoad() {\r\n            @Override\r\n            public void onGalleryResult(int flag, Bitmap bitmap) {\r\n                if (flag == Constant.PICKER_FIRST) {\r\n                    Glide.with(act).clear(binding.viewImgFirst);\r\n                    Glide.with(act).clear(binding.selectframe1);\r\n                    binding.viewImgFirst.setImageBitmap(bitmap);\r\n                    binding.imgEmptyStateFirst.setVisibility(View.GONE);\r\n                    binding.actionDeleteFirst.setVisibility(View.VISIBLE);\r\n                    selectedLogo = bitmap;\r\n                    binding.viewImgFirst.setTag(\"1\");\r\n                    if (!isEditModeEnable) {\r\n\r\n                    }\r\n                    binding.viewImgFirst.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n\r\n            }\r\n        };\r\n        pickerFragment.setImageLoad(imageLoad);\r\n        pickerFragment.show(getSupportFragmentManager(), pickerFragment.getTag());\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        CodeReUse.activityBackPress(act);\r\n    }\r\n\r\n\r\n    private CommonListModel selectedCountry;\r\n    private CommonListModel selectedState;\r\n    private CommonListModel selectedCity;\r\n\r\n    @Override\r\n    public void onItemSelection(int calledFlag, int position, CommonListModel listModel) {\r\n        if (bottomSheetFragment != null && bottomSheetFragment.isVisible()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        if (countrySelectionFragment != null && countrySelectionFragment.isVisible()) {\r\n            countrySelectionFragment.dismiss();\r\n        }\r\n\r\n        if (calledFlag == BRAND_CATEGORY) {\r\n            binding.categoryEdt.setText(listModel.getName());\r\n            commonListModel = listModel;\r\n        }\r\n\r\n//        if (calledFlag == COUNTRY) {\r\n//            if (!listModel.getId().equalsIgnoreCase(\"-1\")) {\r\n//                binding.countryEdt.setText(listModel.getName());\r\n//                selectedCountry = listModel;\r\n//                binding.stateLayout.setVisibility(View.VISIBLE);\r\n//                binding.stateEdt.setText(\"\");\r\n//                binding.cityEdt.setText(\"\");\r\n//                selectedCity = null;\r\n//                selectedState = null;\r\n//\r\n//                stateList.clear();\r\n//                getCountryStateCity(CALL_STATE);\r\n//            } else {\r\n//                binding.countryEdt.setText(\"\");\r\n//                selectedCountry = null;\r\n//\r\n//                binding.stateEdt.setText(\"\");\r\n//                selectedState = null;\r\n//                binding.cityEdt.setText(\"\");\r\n//                selectedCity = null;\r\n//\r\n//                binding.cityLayout.setVisibility(View.GONE);\r\n//                binding.stateLayout.setVisibility(View.GONE);\r\n//            }\r\n//        }\r\n\r\n        if (calledFlag == STATE) {\r\n            if (!listModel.getId().equalsIgnoreCase(\"-1\")) {\r\n                binding.stateEdt.setText(listModel.getName());\r\n                selectedState = listModel;\r\n                binding.cityLayout.setVisibility(View.VISIBLE);\r\n                binding.cityEdt.setText(\"\");\r\n                selectedCity = null;\r\n                cityList.clear();\r\n                getCountryStateCity(CALL_CITY);\r\n            } else {\r\n                selectedState = null;\r\n                binding.stateEdt.setText(\"\");\r\n\r\n                binding.cityEdt.setText(\"\");\r\n                selectedCity = null;\r\n\r\n                binding.cityLayout.setVisibility(View.GONE);\r\n\r\n            }\r\n        }\r\n\r\n        if (calledFlag == CITY) {\r\n            if (!listModel.getId().equalsIgnoreCase(\"-1\")) {\r\n                binding.cityEdt.setText(listModel.getName());\r\n                selectedCity = listModel;\r\n            } else {\r\n                binding.cityEdt.setText(\"\");\r\n                selectedCity = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    private void requestAgain() {\r\n        ActivityCompat.requestPermissions(act,\r\n                new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                        Manifest.permission.READ_EXTERNAL_STORAGE},\r\n                CodeReUse.ASK_PERMISSSION);\r\n    }\r\n\r\n    @Override\r\n    public void alertListenerClick() {\r\n        requestAgain();\r\n    }\r\n\r\n    public void captureScreenShort() {\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n    }\r\n\r\n\r\n    int CALL_COUNTRY = 0;\r\n    int CALL_STATE = 1;\r\n    int CALL_CITY = 2;\r\n\r\n    private void getCountryStateCity(int flag) {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        String apiUrl = \"\";\r\n\r\n\r\n\r\n        if (flag == CALL_STATE) {\r\n            apiUrl = APIs.GET_STATE + \"/101\"; //+ selectedCountry.getId();\r\n            stateList.clear();\r\n        }\r\n\r\n        if (flag == CALL_CITY) {\r\n            apiUrl = APIs.GET_CITY + \"/\" + selectedState.getId();\r\n            cityList.clear();\r\n        }\r\n        Utility.Log(\"API : \", apiUrl);\r\n        Utility.showLoadingTran(act);\r\n        StringRequest request = new StringRequest(Request.Method.GET, apiUrl, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.Log(\"GET_COUNTRY : \", response);\r\n                Utility.dismissLoadingTran();\r\n                isLoading = false;\r\n                try {\r\n                    if (ResponseHandler.isSuccess(response, null)) {\r\n                        JSONObject responseJson = ResponseHandler.createJsonObject(response);\r\n                        JSONArray jsonArray = ResponseHandler.getJSONArray(responseJson, \"data\");\r\n                        for (int i = 0; i < jsonArray.length(); i++) {\r\n                            JSONObject itemObj = jsonArray.getJSONObject(i);\r\n                            CommonListModel listModel = new CommonListModel();\r\n                            listModel.setLayoutType(CommonListModel.LAYOUT_BLOCK);\r\n                            listModel.setId(ResponseHandler.getString(itemObj, \"id\"));\r\n                            listModel.setName(ResponseHandler.getString(itemObj, \"name\"));\r\n\r\n                            if (flag == CALL_STATE) {\r\n                                stateList.add(listModel);\r\n                            }\r\n\r\n                            if (flag == CALL_CITY) {\r\n                                cityList.add(listModel);\r\n                            }\r\n                        }\r\n//                        CommonListModel listModel = new CommonListModel();\r\n//                        listModel.setLayoutType(CommonListModel.LAYOUT_BLOCK);\r\n//                        listModel.setId(\"-1\");\r\n//                        listModel.setName(\"None\");\r\n//\r\n//                        if (flag == CALL_COUNTRY && countryList.size() != 0) {\r\n//                            countryList.add(0, listModel);\r\n//\r\n//                        }\r\n//\r\n//                        if (flag == CALL_STATE && stateList.size() != 0) {\r\n//                            stateList.add(0, listModel);\r\n//                        }\r\n//\r\n//                        if (flag == CALL_CITY && cityList.size() != 0) {\r\n//                            cityList.add(0, listModel);\r\n//                        }\r\n\r\n                        if (wantToShowDropDown) {\r\n                            if (flag == CALL_STATE) {\r\n                                chooseFragment(STATE, stateTtitle, stateList, binding.stateEdt.getText().toString());\r\n                            }\r\n                            if (flag == CALL_CITY) {\r\n                                chooseFragment(CITY, cityTitle, cityList, binding.cityEdt.getText().toString());\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                    Utility.dismissLoadingTran();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                error.printStackTrace();\r\n                isLoading = false;\r\n            }\r\n        }) {\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"X-Authorization\", \"Bearer\" + prefManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                HashMap<String, String> map = new HashMap<>();\r\n\r\n\r\n                Utility.Log(\"Params : \", map.toString());\r\n                return map;\r\n            }\r\n        };\r\n        RequestQueue queue = Volley.newRequestQueue(this);\r\n        queue.add(request);\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/app/brandmania/Activity/brand/UpdateBandList.java b/app/src/main/java/com/app/brandmania/Activity/brand/UpdateBandList.java
--- a/app/src/main/java/com/app/brandmania/Activity/brand/UpdateBandList.java	(revision aed5b44041b80278f672bdbf02f1fda8c3890f6f)
+++ b/app/src/main/java/com/app/brandmania/Activity/brand/UpdateBandList.java	(date 1638339875225)
@@ -142,6 +142,7 @@
 //                    chooseFragment(COUNTRY, countryTitle, countryList, binding.countryEdt.getText().toString());
 //            }
 //        });
+        getCountryStateCity(CALL_STATE);
         binding.stateEdt.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -152,9 +153,13 @@
         binding.cityEdt.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                if (binding.stateEdt.getText().length() != 0) {
-                    if (cityList != null)
+                if (binding.stateEdt.getText().toString().length() != 0) {
+                    if (cityList != null && cityList.size()!=0)
                         chooseFragment(CITY, cityTitle, cityList, binding.cityEdt.getText().toString());
+                    else{
+                        wantToShowDropDown = true;
+                        getCountryStateCity(CALL_CITY);
+                    }
                 } else {
                     wantToShowDropDown = true;
                     getCountryStateCity(CALL_CITY);
@@ -854,23 +859,17 @@
                                 cityList.add(listModel);
                             }
                         }
-//                        CommonListModel listModel = new CommonListModel();
-//                        listModel.setLayoutType(CommonListModel.LAYOUT_BLOCK);
-//                        listModel.setId("-1");
-//                        listModel.setName("None");
-//
-//                        if (flag == CALL_COUNTRY && countryList.size() != 0) {
-//                            countryList.add(0, listModel);
-//
-//                        }
-//
-//                        if (flag == CALL_STATE && stateList.size() != 0) {
-//                            stateList.add(0, listModel);
-//                        }
-//
-//                        if (flag == CALL_CITY && cityList.size() != 0) {
-//                            cityList.add(0, listModel);
-//                        }
+
+                        if (flag == CALL_STATE && stateList.size() != 0) {
+                            for (int i = 0; i < stateList.size(); i++) {
+                                if (binding.stateEdt.getText().toString().equalsIgnoreCase(stateList.get(i).getName())) {
+                                    selectedState =stateList.get(i);
+                                    getCountryStateCity(CALL_CITY);
+                                    break;
+                                }
+                            }
+                        }
+
 
                         if (wantToShowDropDown) {
                             if (flag == CALL_STATE) {
