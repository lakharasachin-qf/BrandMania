Index: app/src/main/java/com/app/brandmania/Activity/AboutUsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.app.Activity;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.webkit.WebView;\r\nimport android.widget.ImageView;\r\n\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.databinding.ActivityAboutUsBinding;\r\n\r\npublic class AboutUsActivity extends BaseActivity {\r\n    Activity act;\r\n    ImageView BackButton;\r\n    WebView webViewhtml;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_about_us);\r\n        BackButton=findViewById(R.id.BackButton);\r\n        BackButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n        webViewhtml = (WebView) findViewById(R.id.webView);\r\n        webViewhtml.loadUrl(\"http://site.queryfinders.com/brandmania/index.html\");\r\n        webViewhtml.setWebViewClient(new MyWebViewClient(this));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/AboutUsActivity.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Activity/AboutUsActivity.java	(date 1609247285425)
@@ -15,22 +15,32 @@
 
 public class AboutUsActivity extends BaseActivity {
     Activity act;
-    ImageView BackButton;
-    WebView webViewhtml;
+
+    private ActivityAboutUsBinding binding;
     @Override
     public void onCreate(Bundle savedInstanceState) {
         setTheme(R.style.AppTheme_material_theme);
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_about_us);
-        BackButton=findViewById(R.id.BackButton);
-        BackButton.setOnClickListener(new View.OnClickListener() {
+        act=this;
+        binding=DataBindingUtil.setContentView(act,R.layout.activity_about_us);
+
+        binding.BackButton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 onBackPressed();
             }
         });
-        webViewhtml = (WebView) findViewById(R.id.webView);
-        webViewhtml.loadUrl("http://site.queryfinders.com/brandmania/index.html");
-        webViewhtml.setWebViewClient(new MyWebViewClient(this));
+        if (getIntent().hasExtra("termsNCondition")) {
+            binding.webView.loadUrl("http://site.queryfinders.com/brandmania/privacy_policy.html");
+            binding.toolbarTitle.setText("Terms & Conditions");
+        }else {
+            binding.webView.loadUrl("http://site.queryfinders.com/brandmania/index.html");
+            binding.toolbarTitle.setText("About us");
+        }
+
+        binding.webView.setWebViewClient(new MyWebViewClient(this));
+
+
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/app/brandmania/Activity/ViewAllImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.PorterDuff;\r\nimport android.graphics.Typeface;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.GestureDetector;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.ScaleGestureDetector;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.androidnetworking.AndroidNetworking;\r\nimport com.androidnetworking.common.ANRequest;\r\nimport com.androidnetworking.common.Priority;\r\nimport com.androidnetworking.error.ANError;\r\nimport com.androidnetworking.interfaces.JSONObjectRequestListener;\r\nimport com.androidnetworking.interfaces.UploadProgressListener;\r\nimport com.app.brandmania.Adapter.FooterModel;\r\nimport com.app.brandmania.Adapter.ImageCateItemeInterFace;\r\nimport com.app.brandmania.Adapter.ImageCategoryAddaptor;\r\nimport com.app.brandmania.Adapter.ViewAllTopTabAdapter;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Interface.IBackendFrameSelect;\r\nimport com.app.brandmania.Interface.IColorChange;\r\nimport com.app.brandmania.Interface.IItaliTextEvent;\r\nimport com.app.brandmania.Interface.ITextBoldEvent;\r\nimport com.app.brandmania.Interface.ITextColorChangeEvent;\r\nimport com.app.brandmania.Interface.ITextSizeEvent;\r\nimport com.app.brandmania.Interface.IUnderLineTextEvent;\r\nimport com.app.brandmania.Interface.onFooterSelectListener;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.DashBoardItem;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.Model.ImageList;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.IFontChangeEvent;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityViewAllImageBinding;\r\nimport com.app.brandmania.databinding.DialogUpgradeDownloadLimitExpireBinding;\r\nimport com.app.brandmania.databinding.DialogUpgradeLayoutBinding;\r\nimport com.app.brandmania.databinding.DialogUpgradeLayoutEnterpriseBinding;\r\nimport com.app.brandmania.databinding.DialogUpgradeLayoutSecondBinding;\r\nimport com.app.brandmania.databinding.LayoutForLoadFiveBinding;\r\nimport com.app.brandmania.databinding.LayoutForLoadFourBinding;\r\nimport com.app.brandmania.databinding.LayoutForLoadOneBinding;\r\nimport com.app.brandmania.databinding.LayoutForLoadSixBinding;\r\nimport com.app.brandmania.databinding.LayoutForLoadThreeBinding;\r\nimport com.app.brandmania.databinding.LayoutForLoadTwoBinding;\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.gson.Gson;\r\nimport com.jaredrummler.android.colorpicker.ColorPickerDialogListener;\r\nimport com.jaredrummler.android.colorpicker.ColorPickerView;\r\nimport com.theartofdev.edmodo.cropper.CropImage;\r\nimport com.theartofdev.edmodo.cropper.CropImageView;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport smartdevelop.ir.eram.showcaseviewlib.GuideView;\r\nimport smartdevelop.ir.eram.showcaseviewlib.config.DismissType;\r\nimport smartdevelop.ir.eram.showcaseviewlib.config.Gravity;\r\nimport smartdevelop.ir.eram.showcaseviewlib.listener.GuideListener;\r\n\r\nimport static android.view.WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN;\r\nimport static com.app.brandmania.Adapter.ImageCategoryAddaptor.FROM_VIEWALL;\r\n\r\npublic class ViewAllImage extends BaseActivity implements ImageCateItemeInterFace,alertListenerCallback, ITextColorChangeEvent, IFontChangeEvent,ITextBoldEvent,\r\n        IItaliTextEvent, ColorPickerDialogListener, IUnderLineTextEvent, IColorChange, ColorPickerView.OnColorChangedListener,\r\n        ITextSizeEvent, onFooterSelectListener, IBackendFrameSelect {\r\n    Activity act;\r\n    ViewPager viewPager;\r\n    private boolean isLoading = false;\r\n    ArrayList<ImageList> AddFavorite=new ArrayList<>();\r\n    private ActivityViewAllImageBinding binding;\r\n    ArrayList<BrandListItem> multiListItems=new ArrayList<>();\r\n    ArrayList<ImageList> menuModels = new ArrayList<>();\r\n    ArrayList<FrameItem> brandListItems = new ArrayList<>();\r\n    public static final int DOWLOAD = 1;\r\n    public static final int ADDFAV = 3;\r\n    private static final int REQUEST_CALL = 1;\r\n    public static final int REMOVEFAV = 3;\r\n    private String is_frame=\"\";\r\n    private String is_payment_pending=\"\";\r\n    private String packagee=\"\";\r\n    ArrayList<FrameItem> viewPagerItems = new ArrayList<>();\r\n    PreafManager preafManager;\r\n    Gson gson;\r\n    String Website;\r\n    private DashBoardItem imageList;\r\n    private ImageList selectedObject;\r\n    LinearLayout sliderDotspanel;\r\n    private int dotscount;\r\n    private ImageView[] dots;\r\n\r\n    FrameItem selectedModelFromView;\r\n    AlertDialog.Builder alertDialogBuilder;\r\n    File new_file;\r\n    private Uri mCropImageUri;\r\n    private ScaleGestureDetector scaleGestureDetector;\r\n    private float mScaleFactor = 1.0f;\r\n    int editorFragment;\r\n    private int xDelta;\r\n    private int yDelta;\r\n    private ViewGroup mainLayout;\r\n    private boolean isUserFree = true;\r\n    private boolean canDownload = true;\r\n    private int FrameCountForDownload = 2;\r\n\r\n    private boolean isUsingCustomFrame = true;\r\n\r\n    //Version 3\r\n    private ImageList selectedBackendFrame = null;\r\n    private FooterModel selectedFooterModel;\r\n    private boolean updateLogo = false;\r\n    private Bitmap selectedLogo;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n        //triggerUpgradePackage();\r\n        act.getWindow().setSoftInputMode(SOFT_INPUT_ADJUST_PAN);\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_view_all_image);\r\n        preafManager = new PreafManager(this);\r\n        binding.titleName.setSelected(true);\r\n        gson = new Gson();\r\n        selectedObject = gson.fromJson(getIntent().getStringExtra(\"selectedimage\"), ImageList.class);\r\n        getFrame();\r\n        getBrandList();\r\n        Website = preafManager.getActiveBrand().getWebsite();\r\n        imageList = gson.fromJson(getIntent().getStringExtra(\"detailsObj\"), DashBoardItem.class);\r\n        binding.titleName.setText(imageList.getName());\r\n       // getAllImages();\r\n        scaleGestureDetector = new ScaleGestureDetector(this, new ScaleListener());\r\n\r\n        mainLayout = (RelativeLayout) findViewById(R.id.elementCustomFrame);\r\n\r\n        updateLogo = preafManager.getActiveBrand().getLogo().isEmpty();\r\n\r\n\r\n        binding.logoEmptyState.setOnTouchListener(onTouchListener());\r\n        binding.logoCustom.setOnTouchListener(onTouchListener());\r\n        gestureDetector = new GestureDetector(this, new SingleTapConfirm());\r\n\r\n\r\n        binding.backIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n\r\n        binding.fabroutIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (selectedBackendFrame != null)\r\n                    selectedObject.setFrame1Id(selectedBackendFrame.getFrame1Id());\r\n\r\n                selectedObject.setCustom(isUsingCustomFrame);\r\n\r\n                preafManager.AddToMyFavorites(selectedObject);\r\n\r\n                if (binding.fabroutIcon.getVisibility() == View.VISIBLE) {\r\n                    binding.fabroutIcon.setVisibility(View.GONE);\r\n                    binding.addfabroutIcon.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n                downloadAndShareApi(ADDFAV,null);\r\n            }\r\n        });\r\n        binding.addfabroutIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (selectedBackendFrame != null)\r\n                    selectedObject.setFrame1Id(selectedBackendFrame.getFrame1Id());\r\n\r\n                selectedObject.setCustom(isUsingCustomFrame);\r\n\r\n                preafManager.removeFromMyFavorites(selectedObject);\r\n\r\n                if (binding.addfabroutIcon.getVisibility() == View.VISIBLE) {\r\n                    binding.addfabroutIcon.setVisibility(View.GONE);\r\n                    binding.fabroutIcon.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n                removeFromFavourite(REMOVEFAV);\r\n            }\r\n        });\r\n\r\n        binding.downloadIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (selectedObject.isImageFree()) {\r\n                    if (isUsingCustomFrame && selectedFooterModel != null && !selectedFooterModel.isFree()) {\r\n                        askForUpgradeToEnterpisePackage();\r\n                        return;\r\n                    }\r\n                    getImageDownloadRights(\"Download\");\r\n                }else{\r\n                    askForPayTheirPayment();\r\n                }\r\n            }\r\n        });\r\n        binding.shareIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (selectedObject.isImageFree()) {\r\n                    if (isUsingCustomFrame && selectedFooterModel != null && !selectedFooterModel.isFree()) {\r\n                        askForUpgradeToEnterpisePackage();\r\n                        return;\r\n                    }\r\n                    getImageDownloadRights(\"Share\");\r\n                }else{\r\n                    askForPayTheirPayment();\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n       // binding.logoEmptyState.setVisibility(View.VISIBLE);\r\n\r\n        if (preafManager.getActiveBrand().getLogo() != null && !preafManager.getActiveBrand().getLogo().isEmpty() ) {\r\n            binding.logoEmptyState.setVisibility(View.GONE);\r\n            binding.logoCustom.setVisibility(View.VISIBLE);\r\n            binding.logoCustom.setVisibility(View.VISIBLE);\r\n            Glide.with(act)\r\n                    .load(preafManager.getActiveBrand().getLogo())\r\n                    .into(binding.logoCustom);\r\n            binding.logoCustom.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    onSelectImageClick(view);\r\n                }\r\n            });\r\n        }\r\n        else\r\n        {\r\n            binding.logoEmptyState.setVisibility(View.VISIBLE);\r\n            binding.logoCustom.setVisibility(View.GONE);\r\n\r\n            binding.logoCustom.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    onSelectImageClick(view);\r\n                }\r\n            });\r\n\r\n\r\n        }\r\n\r\n        if (!getIntent().hasExtra(\"viewAll\"))\r\n            LoadDataToUI();\r\n    }\r\n\r\n\r\n    public void askForDownloadImage(){\r\n        alertDialogBuilder = new AlertDialog.Builder(act);\r\n        alertDialogBuilder.setTitle(\"Save image\");\r\n        alertDialogBuilder.setMessage(\"You sure to save your image?\");\r\n        alertDialogBuilder.setPositiveButton(\"yes\",\r\n                new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface arg0, int arg1) {\r\n                        requestAgain();\r\n                        saveImageToGallery(false);\r\n\r\n\r\n                    }\r\n                });\r\n        alertDialogBuilder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        AlertDialog alertDialog = alertDialogBuilder.create();\r\n        alertDialog.setCancelable(false);\r\n        alertDialog.show();\r\n    }\r\n\r\n    public void isPermissionGranted(boolean permission) {\r\n        if (!permission) {\r\n            startActivity(new Intent(android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS,\r\n                    Uri.fromParts(\"package\", act.getPackageName(), null)));\r\n        }\r\n    }\r\n\r\n    private int IntroCounter = 0;\r\n\r\n    public void startIntro(View view, String title, String desc) {\r\n\r\n        new GuideView.Builder(this)\r\n                .setTitle(title)\r\n                .setContentText(desc)\r\n                .setGravity(Gravity.center)\r\n                .setDismissType(DismissType.anywhere)\r\n                .setTargetView(view)\r\n                .setContentTextSize(12)\r\n                .setTitleTextSize(14)\r\n                .setGuideListener(new GuideListener() {\r\n                    @Override\r\n                    public void onDismiss(View view) {\r\n                        IntroCounter++;\r\n\r\n                            if (IntroCounter == 1) {\r\n                                startIntro(binding.shareIcon, \"Share\", \"Share Your Image Directly\");\r\n                            }\r\n                            if (IntroCounter == 2) {\r\n                                startIntro(binding.fabroutIcon, \"Save\", \"Save To Your Brand\");\r\n                            }\r\n                            if (IntroCounter == 3) {\r\n                                startIntro(binding.viewPager.getChildAt(0), \"Catogery\", \"List of images\");\r\n                            }\r\n/*\r\n                        if (!is_frame.equalsIgnoreCase(\"1\") && preafManager.getFrameIntro()) {\r\n                            preafManager.setFrameIntro(false);\r\n                            if (IntroCounter == 4) {\r\n                                startIntro(binding.logoCard, \"Logo\", \"Change Your Logo\");\r\n                            }\r\n                            if (IntroCounter == 5) {\r\n                                startIntro(binding.customAddressEdit1, \"AddressText\", \"Change Your Address Text color\");\r\n                            }\r\n                            if (IntroCounter == 6) {\r\n                                startIntro(binding.customeContactEdit1, \"ContactText\", \"Change Your Contact Text color\");\r\n                            }\r\n                            if (IntroCounter == 7) {\r\n                                startIntro(binding.bottomBarView1, \"Address Background\", \"Change Your Address Background color\");\r\n                            }\r\n                            if (IntroCounter == 8) {\r\n                                startIntro(binding.bottomBarView2, \"Contac Background\", \"Change Your Contact Background color\");\r\n                            }\r\n                        }*/\r\n                    }\r\n                })\r\n                .build()\r\n                .show();\r\n    }\r\n\r\n    public void startIntroForFrameOnly(View view, String title, String desc) {\r\n\r\n        new GuideView.Builder(this)\r\n                .setTitle(title)\r\n                .setContentText(desc)\r\n                .setGravity(Gravity.center)\r\n                .setDismissType(DismissType.anywhere)\r\n                .setTargetView(view)\r\n                .setContentTextSize(12)\r\n                .setTitleTextSize(14)\r\n                .setGuideListener(new GuideListener() {\r\n                    @Override\r\n                    public void onDismiss(View view) {\r\n                            IntroCounter++;\r\n/*\r\n                            if (IntroCounter == 1) {\r\n                                startIntroForFrameOnly(binding.customAddressEdit1, \"Add Text\", \"Add text like email-id or address\");\r\n                            }\r\n                            if (IntroCounter == 2) {\r\n                                startIntroForFrameOnly(binding.customeContactEdit1, \"Add Text\", \"Add your contact no. here\");\r\n                            }\r\n                            if (IntroCounter == 3) {\r\n                                startIntroForFrameOnly(binding.bottomBarView1, \"Background\", \"Change background color as you want\");\r\n                            }\r\n                            if (IntroCounter == 4) {\r\n                                startIntroForFrameOnly(binding.bottomBarView2, \"Background\", \"Change background color as you want\");\r\n                            }*/\r\n\r\n                    }\r\n                })\r\n                .build()\r\n                .show();\r\n    }\r\n\r\n\r\n    public void CreateTabs(){\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Category\")));\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Footer\")));\r\n\r\n\r\n        if (!is_frame.equalsIgnoreCase(\"1\")) {\r\n            IntroCounter = 0;\r\n            preafManager.setFrameIntro(false);\r\n            startIntroForFrameOnly(binding.logoEmptyState, \"Logo\", \"you can upload logo here\");\r\n        } else {\r\n            if (preafManager.getViewAllActivityIntro()) {\r\n                startIntro(binding.downloadIcon, \"Download\", \"Download Image From here\");\r\n                preafManager.setViewAllActivityIntro(false);\r\n            }\r\n        }\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Frames\")));\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Background\")));\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Text\")));\r\n\r\n\r\n\r\n        binding.tabLayout.setTabTextColors(Color.parseColor(\"#727272\"), Color.parseColor(\"#ad2753\"));\r\n        binding.tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);\r\n        final ViewAllTopTabAdapter adapter = new ViewAllTopTabAdapter(act, getSupportFragmentManager(), binding.tabLayout.getTabCount());\r\n        if (getIntent().hasExtra(\"viewAll\"))\r\n            adapter.setViewAll(true);\r\n        binding.viewPager.setAdapter(adapter);\r\n        binding.viewPager.setOffscreenPageLimit(6);\r\n        binding.viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(binding.tabLayout));\r\n        binding.tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n                binding.viewPager.setCurrentItem(tab.getPosition());\r\n                editorFragment=tab.getPosition();\r\n\r\n              //  handler(editorFragment);\r\n            }\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n            }\r\n\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    //load firstImage\r\n    public void loadFirstImage(){\r\n\r\n        FooterModel model = new FooterModel();\r\n        model.setLayoutType(FooterModel.LAYOUT_FRAME_ONE);\r\n        model.setFree(true);\r\n        model.setAddress(preafManager.getActiveBrand().getAddress());\r\n        model.setEmailId(preafManager.getActiveBrand().getEmail());\r\n        model.setContactNo(preafManager.getActiveBrand().getPhonenumber());\r\n        model.setWebsite(preafManager.getActiveBrand().getWebsite());\r\n        ((onFooterSelectListener) act).onFooterSelectEvent(FooterModel.LAYOUT_FRAME_ONE, model);\r\n    }\r\n\r\n    //For CustomFrame\r\n    public void onSelectImageClick(View view) {\r\n        CropImage.startPickImageActivity(this);\r\n    }\r\n\r\n    public void LoadDataToUI(){\r\n        preafManager=new PreafManager(act);\r\n        if (selectedObject != null) {\r\n            binding.simpleProgressBar.setVisibility(View.GONE);\r\n            Glide.with(getApplicationContext()).load(selectedObject.getFrame()).into(binding.recoImage);\r\n        } else {\r\n           // binding.simpleProgressBar.setVisibility(View.VISIBLE);\r\n        }\r\n        loadFirstImage();\r\n    }\r\n\r\n    //For RefresGalary\r\n    public void refreshgallery(File file) {\r\n        Intent intent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);\r\n        intent.setData(Uri.fromFile(file));\r\n        sendBroadcast(intent);\r\n    }\r\n\r\n    //For CreatFileeDisc For Download Image.........................\r\n    private File getDisc() {\r\n        File file = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM);\r\n        return new File(file, \"BrandMania\");\r\n    }\r\n\r\n\r\n    //For adepter\r\n    public void setAdapter() {\r\n        ImageCategoryAddaptor menuAddaptor = new ImageCategoryAddaptor(menuModels, act);\r\n        menuAddaptor.setLayoutType(FROM_VIEWALL);\r\n        RecyclerView.LayoutManager mLayoutManager = new GridLayoutManager(this, 4);\r\n        binding.viewRecoRecycler.setLayoutManager(mLayoutManager);\r\n        binding.viewRecoRecycler.setHasFixedSize(true);\r\n        binding.viewRecoRecycler.setAdapter(menuAddaptor);\r\n\r\n     /*   if (getIntent().hasExtra(\"viewAll\")) {\r\n            binding.simpleProgressBar.setVisibility(View.VISIBLE);\r\n\r\n            selectedObject = menuModels.get(0);\r\n            LoadDataToUI();\r\n        } else {\r\n            Toast.makeText(act, \"dfgdfgdfgd\", Toast.LENGTH_SHORT).show();\r\n            binding.simpleProgressBar.setVisibility(View.GONE);\r\n        }*/\r\n\r\n    }\r\n\r\n\r\n\r\n    //For Image Select Interface\r\n    @Override\r\n    public void ImageCateonItemSelection(int position, ImageList listModel) {\r\n\r\n\r\n         //   binding.simpleProgressBar.setVisibility(View.GONE);\r\n            selectedObject = listModel;\r\n            LoadDataToUI();\r\n       // else {\r\n           // binding.simpleProgressBar.setVisibility(View.VISIBLE);\r\n        binding.simpleProgressBar.setVisibility(View.GONE);\r\n        loadFirstImage();\r\n    }\r\n\r\n    // For Frame Load View Pager\r\n    public void frameViewPager() {\r\n\r\n    }\r\n\r\n    public void AlertBoxForSaveFrame() {\r\n        alertDialogBuilder = new AlertDialog.Builder(act);\r\n        alertDialogBuilder.setTitle(\"Save Frame\");\r\n        alertDialogBuilder.setMessage(\"Do you want to save your template, you will not able to change once save.\");\r\n        alertDialogBuilder.setPositiveButton(\"yes\",\r\n                new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface arg0, int arg1) {\r\n\r\n                        /*binding.customFrameRelative.setVisibility(View.GONE);\r\n                        binding.FrameImageDuplicate.setVisibility(View.GONE);\r\n                        if (binding.customeContactEdit1.getText().toString().length()==0)\r\n                        {\r\n                            binding.customeContactEdit1.setVisibility(View.GONE);\r\n                        }\r\n                        if (binding.customFrameWebsite.getText().toString().length()==0)\r\n                        {\r\n                            binding.customFrameWebsite.setVisibility(View.GONE);\r\n                        }\r\n                        if (binding.customAddressEdit1.getText().toString().length()==0)\r\n                        {\r\n                            binding.customAddressEdit1.setVisibility(View.GONE);\r\n                        }*/\r\n                        //getCustomFrameInBitmap();\r\n\r\n                    }\r\n                });\r\n        alertDialogBuilder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        AlertDialog alertDialog = alertDialogBuilder.create();\r\n        alertDialog.setCancelable(false);\r\n        alertDialog.show();\r\n\r\n\r\n\r\n    }\r\n\r\n    //For GetFrame\r\n    @Override public void alertListenerClick() {\r\n        requestAgain();\r\n    }\r\n\r\n    private void requestAgain() {\r\n        ActivityCompat.requestPermissions(act,\r\n                new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                        Manifest.permission.READ_EXTERNAL_STORAGE},\r\n                CodeReUse.ASK_PERMISSSION);\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        CodeReUse.activityBackPress(act);\r\n    }\r\n\r\n    @Override\r\n    public void onDialogDismissed(int dialogId) {\r\n    }\r\n\r\n\r\n    private void removeFromFavourite(final int removeFav) {\r\n        Utility.showLoadingTran(act);\r\n        Utility.Log(\"API : \", APIs.REMOVE_FAVOURIT);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.REMOVE_FAVOURIT, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.dismissLoadingTran();\r\n                Utility.Log(\"REMOVE_FAVOURIT : \", response);\r\n\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Utility.dismissLoadingTran();\r\n                        error.printStackTrace();\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                if (imageList != null) {\r\n                    params.put(\"brand_id\", preafManager.getActiveBrand().getId());\r\n                    params.put(\"image_id\", selectedObject.getImageid());\r\n                } else {\r\n                    params.put(\"brand_id\",  preafManager.getActiveBrand().getId());\r\n                    params.put(\"image_id\", selectedObject.getImageid());\r\n\r\n                }\r\n                params.put(\"type\", String.valueOf(removeFav));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n\r\n        // handle result of pick image chooser\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == CropImage.PICK_IMAGE_CHOOSER_REQUEST_CODE && resultCode == Activity.RESULT_OK) {\r\n            Uri imageUri = CropImage.getPickImageResultUri(this, data);\r\n\r\n            if (CropImage.isReadExternalStoragePermissionsRequired(this, imageUri)) {\r\n                mCropImageUri = imageUri;\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                    requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 0);\r\n                }\r\n            } else {\r\n                startCropImageActivity(imageUri);\r\n            }\r\n        }\r\n\r\n        // handle result of CropImageActivity\r\n        if (requestCode == CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE) {\r\n            CropImage.ActivityResult result = CropImage.getActivityResult(data);\r\n            if (resultCode == RESULT_OK) {\r\n                binding.logoCustom.setVisibility(View.VISIBLE);\r\n                binding.logoEmptyState.setVisibility(View.GONE);\r\n                ((ImageView) findViewById(R.id.logoCustom)).setImageURI(result.getUri());\r\n                ImageView imageView = ((ImageView) findViewById(R.id.logoCustom));\r\n                selectedLogo = ((BitmapDrawable) imageView.getDrawable()).getBitmap();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {\r\n        if (mCropImageUri != null && grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n            // required permissions granted, start crop image activity\r\n            startCropImageActivity(mCropImageUri);\r\n        } else {\r\n            //   Toast.makeText(this, \"Cancelling, required permissions are not granted\", Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    private void startCropImageActivity(Uri imageUri) {\r\n        CropImage.activity(imageUri)\r\n                .setGuidelines(CropImageView.Guidelines.ON)\r\n                .setMultiTouchEnabled(true)\r\n                .start(this);\r\n    }\r\n    private void getBrandList() {\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n               // binding.swipeContainer.setRefreshing(false);\r\n                Utility.Log(\"GET_BRAND : \", response);\r\n                ArrayList<BrandListItem> brandListItems=new ArrayList<>();\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    multiListItems = ResponseHandler.HandleGetBrandList(jsonObject);\r\n                    JSONArray dataJsonArray = ResponseHandler.getJSONArray(jsonObject, \"data\");\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                       // binding.swipeContainer.setRefreshing(false);\r\n                        error.printStackTrace();\r\n\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n\r\n\r\n\r\n    public static String convertFirstUpper(String str) {\r\n\r\n        if (str == null || str.isEmpty()) {\r\n            return str;\r\n        }\r\n        Utility.Log(\"FirstLetter\", str.substring(0, 1) + \"    \" + str.substring(1));\r\n        return str.substring(0, 1).toUpperCase() + str.substring(1);\r\n    }\r\n\r\n\r\n    //version 3 ======================================\r\n\r\n    // ask for payment\r\n    public DialogUpgradeLayoutSecondBinding secondBinding;\r\n\r\n    public void askForPayTheirPayment() {\r\n        secondBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.dialog_upgrade_layout_second, null, false);\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(act, R.style.MyAlertDialogStyle_extend);\r\n        builder.setView(secondBinding.getRoot());\r\n        androidx.appcompat.app.AlertDialog alertDialog = builder.create();\r\n        alertDialog.setContentView(secondBinding.getRoot());\r\n\r\n        secondBinding.viewPackage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n                Intent intent = new Intent(act, PackageActivity.class);\r\n                act.startActivity(intent);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n            }\r\n        });\r\n        secondBinding.closeBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n\r\n        secondBinding.element3.setText(\"You haven't selected any package yet. Please choose any package for download more images\");\r\n        alertDialog.setCancelable(false);\r\n        alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        alertDialog.show();\r\n    }\r\n\r\n    //fire intent for share\r\n    public void triggerShareIntent(File new_file) {\r\n        Uri uri = Uri.parse(MediaStore.Images.Media.insertImage(getContentResolver(), BitmapFactory.decodeFile(new_file.getPath()), null, null));\r\n        Intent share = new Intent(Intent.ACTION_SEND);\r\n        share.setType(\"image/*\");\r\n        share.putExtra(Intent.EXTRA_STREAM, uri);\r\n        startActivity(Intent.createChooser(share, \"Share Image\"));\r\n    }\r\n\r\n\r\n\r\n\r\n    //show dialog for upgrading package for using all 6 frames\r\n    public DialogUpgradeDownloadLimitExpireBinding expireBinding;\r\n\r\n    private void downloadLimitExpireDialog() {\r\n        expireBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.dialog_upgrade_download_limit_expire, null, false);\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(act, R.style.MyAlertDialogStyle_extend);\r\n        builder.setView(expireBinding.getRoot());\r\n        androidx.appcompat.app.AlertDialog alertDialog = builder.create();\r\n        alertDialog.setContentView(expireBinding.getRoot());\r\n\r\n        expireBinding.viewPackage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n                Intent intent = new Intent(act, PackageActivity.class);\r\n                act.startActivity(intent);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n            }\r\n        });\r\n        expireBinding.closeBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n\r\n        alertDialog.setCancelable(false);\r\n        alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        alertDialog.show();\r\n\r\n    }\r\n\r\n    // ask to upgrade package to 999 for use all frames\r\n    DialogUpgradeLayoutEnterpriseBinding enterpriseBinding;\r\n\r\n    public void askForUpgradeToEnterpisePackage() {\r\n        enterpriseBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.dialog_upgrade_layout_enterprise, null, false);\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(act, R.style.MyAlertDialogStyle_extend);\r\n        builder.setView(enterpriseBinding.getRoot());\r\n        androidx.appcompat.app.AlertDialog alertDialog = builder.create();\r\n        alertDialog.setContentView(enterpriseBinding.getRoot());\r\n\r\n        enterpriseBinding.viewPackage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n                Intent intent = new Intent(act, PackageActivity.class);\r\n                act.startActivity(intent);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n            }\r\n        });\r\n        enterpriseBinding.closeBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n        //alertDialog.setCancelable(false);\r\n        alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        alertDialog.show();\r\n    }\r\n\r\n\r\n    //for logo drag and click event handle\r\n    GestureDetector gestureDetector;\r\n\r\n    private View.OnTouchListener onTouchListener() {\r\n        return new View.OnTouchListener() {\r\n\r\n            @SuppressLint(\"ClickableViewAccessibility\")\r\n            @Override\r\n            public boolean onTouch(View view, MotionEvent event) {\r\n                if (gestureDetector.onTouchEvent(event)) {\r\n                    if ((preafManager.getActiveBrand().getLogo().isEmpty() && selectedLogo != null) || preafManager.getActiveBrand().getNo_of_used_image().equalsIgnoreCase(\"0\")) {\r\n                        onSelectImageClick(view);\r\n                    } else {\r\n                        Toast.makeText(act, \"You can't change your logo\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }else {\r\n                    final int x = (int) event.getRawX();\r\n                    final int y = (int) event.getRawY();\r\n\r\n                    switch (event.getAction() & MotionEvent.ACTION_MASK) {\r\n\r\n                        case MotionEvent.ACTION_DOWN:\r\n                            RelativeLayout.LayoutParams lParams = (RelativeLayout.LayoutParams)\r\n                                    view.getLayoutParams();\r\n\r\n                            xDelta = x - lParams.leftMargin;\r\n                            yDelta = y - lParams.topMargin;\r\n                            break;\r\n\r\n                        case MotionEvent.ACTION_UP:\r\n\r\n//                            Toast.makeText(act, \"I'm here!\", Toast.LENGTH_SHORT).show();\r\n                            break;\r\n\r\n                        case MotionEvent.ACTION_MOVE:\r\n                            RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) view\r\n                                    .getLayoutParams();\r\n                            layoutParams.leftMargin = x - xDelta;\r\n                            layoutParams.topMargin = y - yDelta;\r\n                            layoutParams.rightMargin = 0;\r\n                            layoutParams.bottomMargin = 0;\r\n                            view.setLayoutParams(layoutParams);\r\n                            break;\r\n                    }\r\n\r\n                    mainLayout.invalidate();\r\n                }\r\n                return true;\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    //save image with frame either custome or from backend\r\n    public void saveImageToGallery(boolean wantToShare) {\r\n\r\n        Drawable bitmapFrame;\r\n        if (isUsingCustomFrame){\r\n            bitmapFrame=new BitmapDrawable(getResources(), getCustomFrameInBitmap());\r\n        }else{\r\n            bitmapFrame=(BitmapDrawable) binding.backendFrame.getDrawable();\r\n        }\r\n        Drawable ImageDrawable = (BitmapDrawable) binding.recoImage.getDrawable();\r\n        Bitmap merged = Bitmap.createBitmap(1000, 1000, Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(merged);\r\n        bitmapFrame.setBounds(0, 0, 1000, 1000);\r\n        ImageDrawable.setBounds(0, 0, 1000, 1000);\r\n        ImageDrawable.draw(canvas);\r\n        bitmapFrame.draw(canvas);\r\n\r\n        FileOutputStream fileOutputStream = null;\r\n        File file = getDisc();\r\n        if (!file.exists() && !file.mkdirs()) {\r\n            return;\r\n        }\r\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyymmsshhmmss\");\r\n        String date = simpleDateFormat.format(new Date());\r\n        String name = \"Img\" + date + \".jpg\";\r\n        String file_name = file.getAbsolutePath() + \"/\" + name;\r\n        new_file = new File(file_name);\r\n        try {\r\n            fileOutputStream = new FileOutputStream(new_file);\r\n            Bitmap bitmap = merged;\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fileOutputStream);\r\n            fileOutputStream.flush();\r\n            fileOutputStream.close();\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        refreshgallery(new_file);\r\n\r\n        if (wantToShare){\r\n            if (isUsingCustomFrame) {\r\n                addDynamicFooter(selectedFooterModel.getLayoutType());\r\n                binding.FrameImageDuplicate.setVisibility(View.GONE);\r\n                binding.FrameImageDuplicate.setImageBitmap(null);\r\n            } else {\r\n                Glide.with(getApplicationContext()).load(selectedBackendFrame.getFrame1()).into(binding.backendFrame);\r\n            }\r\n            Glide.with(getApplicationContext()).load(selectedObject.getFrame()).into(binding.recoImage);\r\n            triggerShareIntent(new_file);\r\n        }else {\r\n            Toast.makeText(act, \"Your image is downloaded\", Toast.LENGTH_SHORT).show();\r\n            if (isUsingCustomFrame) {\r\n                addDynamicFooter(selectedFooterModel.getLayoutType());\r\n                binding.FrameImageDuplicate.setVisibility(View.GONE);\r\n                binding.FrameImageDuplicate.setImageBitmap(null);\r\n            } else {\r\n                Glide.with(getApplicationContext()).load(selectedBackendFrame.getFrame1()).into(binding.backendFrame);\r\n            }\r\n\r\n\r\n        }\r\n\r\n        downloadAndShareApi(DOWLOAD,merged);\r\n    }\r\n\r\n    //generate custom frame from relative layout\r\n    private Bitmap getCustomFrameInBitmap() {\r\n\r\n        Bitmap newFinal;\r\n        Bitmap returnedBitmap = Bitmap.createBitmap(binding.elementCustomFrame.getWidth(), binding.elementCustomFrame.getHeight(),Bitmap.Config.ARGB_8888);\r\n\r\n        Canvas canvas = new Canvas(returnedBitmap);\r\n\r\n        Drawable bgDrawable =binding.elementCustomFrame.getBackground();\r\n        if (bgDrawable!=null) {\r\n            bgDrawable.draw(canvas);\r\n        }   else{\r\n            canvas.drawColor(Color.TRANSPARENT, PorterDuff.Mode.CLEAR);\r\n\r\n        }\r\n        binding.elementCustomFrame.draw(canvas);\r\n\r\n        binding.FrameImageDuplicate.setVisibility(View.VISIBLE);\r\n\r\n        binding.FrameImageDuplicate.setImageBitmap(returnedBitmap);\r\n\r\n        BitmapDrawable drawable = (BitmapDrawable) binding.FrameImageDuplicate.getDrawable();\r\n\r\n        newFinal = drawable.getBitmap();\r\n\r\n        FileOutputStream fileOutputStream = null;\r\n        File file = getDisc();\r\n        if (!file.exists() && !file.mkdirs()) {\r\n            return null;\r\n        }\r\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyymmsshhmmss\");\r\n        String date = simpleDateFormat.format(new Date());\r\n        String name = \"Img\" + date + \".jpg\";\r\n        String file_name = file.getAbsolutePath() + \"/\" + name;\r\n        new_file = new File(file_name);\r\n        try {\r\n            fileOutputStream = new FileOutputStream(new_file);\r\n            Bitmap bitmap = newFinal;\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 100, fileOutputStream);\r\n\r\n            fileOutputStream.flush();\r\n            fileOutputStream.close();\r\n\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        refreshgallery(new_file);\r\n        binding.FrameImageDuplicate.setVisibility(View.VISIBLE);\r\n        //newFinal bitmap\r\n        return newFinal;\r\n\r\n    }\r\n\r\n\r\n    //backend frame load\r\n    @Override\r\n    public void onBackendFrameChoose(ImageList imageList, int position) {\r\n        binding.backendFrame.setVisibility(View.VISIBLE);\r\n        binding.elementCustomFrame.setVisibility(View.GONE);\r\n        selectedBackendFrame=imageList;\r\n        Glide.with(getApplicationContext()).load(imageList.getFrame1()).into(binding.backendFrame);\r\n        isUsingCustomFrame = false;\r\n        forCheckFavorite();\r\n    }\r\n\r\n    //fire on footer select listener\r\n    @Override\r\n    public void onFooterSelectEvent(int footerLayout, FooterModel footerModel) {\r\n        isUsingCustomFrame = true;\r\n        binding.backendFrame.setVisibility(View.GONE);\r\n        binding.elementCustomFrame.setVisibility(View.VISIBLE);\r\n        selectedFooterModel = footerModel;\r\n        addDynamicFooter(footerLayout);\r\n        forCheckFavorite();\r\n    }\r\n\r\n    //check for added to fav or not\r\n    public void forCheckFavorite(){\r\n        preafManager=new PreafManager(act);\r\n        AddFavorite= preafManager.getSavedFavorites();\r\n\r\n        if (AddFavorite!=null) {\r\n            boolean isImageFound=false;\r\n            for (int i = 0; i < AddFavorite.size(); i++) {\r\n                if (isUsingCustomFrame){\r\n                    if (AddFavorite.get(i).isCustom()) {\r\n                        Log.e(\"FFF\",AddFavorite.get(i).getId()+\" \"+selectedObject.getId());\r\n                        if (AddFavorite.get(i).getId().equals(selectedObject.getId())) {\r\n                            binding.addfabroutIcon.setVisibility(View.VISIBLE);\r\n                            binding.fabroutIcon.setVisibility(View.GONE);\r\n                            isImageFound=true;\r\n                            break;\r\n                        } else {\r\n                            binding.addfabroutIcon.setVisibility(View.GONE);\r\n                            binding.fabroutIcon.setVisibility(View.VISIBLE);\r\n                        }\r\n                    }\r\n\r\n                }else {\r\n                    if (!AddFavorite.get(i).isCustom()) {\r\n                        if (AddFavorite.get(i).getId().equals(selectedObject.getId()) && AddFavorite.get(i).getFrame1Id().equalsIgnoreCase(selectedBackendFrame.getFrame1Id())) {\r\n                            binding.addfabroutIcon.setVisibility(View.VISIBLE);\r\n                            binding.fabroutIcon.setVisibility(View.GONE);\r\n                            isImageFound=true;\r\n                            break;\r\n                        } else {\r\n                            binding.addfabroutIcon.setVisibility(View.GONE);\r\n                            binding.fabroutIcon.setVisibility(View.VISIBLE);\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n            if (!isImageFound) {\r\n                binding.addfabroutIcon.setVisibility(View.GONE);\r\n                binding.fabroutIcon.setVisibility(View.VISIBLE);\r\n            }\r\n        }\r\n    }\r\n\r\n    //for adding footer dynamically\r\n    int footerLayout = 1;\r\n    private LayoutForLoadOneBinding oneBinding;\r\n    private LayoutForLoadTwoBinding twoBinding;\r\n    private LayoutForLoadThreeBinding threeBinding;\r\n    private LayoutForLoadFourBinding fourBinding;\r\n    private LayoutForLoadFiveBinding fiveBinding;\r\n    private LayoutForLoadSixBinding sixBinding;\r\n\r\n    private void addDynamicFooter(int layoutType) {\r\n        binding.elementFooter.removeAllViews();\r\n        footerLayout=layoutType;\r\n        if (layoutType== FooterModel.LAYOUT_FRAME_ONE) {\r\n            oneBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_one, null, false);\r\n            binding.elementFooter.addView(oneBinding.getRoot());\r\n            loadFrameFirstData();\r\n        }\r\n        else if (layoutType== FooterModel.LAYOUT_FRAME_TWO) {\r\n            twoBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_two, null, false);\r\n            binding.elementFooter.addView(twoBinding.getRoot());\r\n            loadFrameTwoData();\r\n        }\r\n        else if (layoutType== FooterModel.LAYOUT_FRAME_THREE) {\r\n            threeBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_three, null, false);\r\n            binding.elementFooter.addView(threeBinding.getRoot());\r\n            loadFrameThreeData();\r\n        }\r\n        else if (layoutType== FooterModel.LAYOUT_FRAME_FOUR) {\r\n            fourBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_four, null, false);\r\n            binding.elementFooter.addView(fourBinding.getRoot());\r\n            loadFrameFourData();\r\n        }\r\n        else if (layoutType== FooterModel.LAYOUT_FRAME_FIVE) {\r\n            fiveBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_five, null, false);\r\n            binding.elementFooter.addView(fiveBinding.getRoot());\r\n            loadFrameFiveData();\r\n        }\r\n        else if (layoutType== FooterModel.LAYOUT_FRAME_SIX) {\r\n            sixBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_six, null, false);\r\n            binding.elementFooter.addView(sixBinding.getRoot());\r\n\r\n        }\r\n    }\r\n\r\n    @Override public void onColorItemChange(int colorCode) {\r\n    }\r\n    @Override public void onColorSelected(int dialogId, int colorCode) {\r\n\r\n    }\r\n\r\n    //for Text Color change\r\n    @Override public void onColorChanged(int colorCode) {\r\n        if (editorFragment==4) {\r\n            if (footerLayout==1){\r\n                ChangeTextColorForFrameOne(colorCode);\r\n            }else if (footerLayout==2){\r\n                ChangeTextColorForFrameTwo(colorCode);\r\n            }else if (footerLayout==3){\r\n                ChangeTextColorForFrameThree(colorCode);\r\n            }else if (footerLayout==4){\r\n                ChangeTextColorForFrameFour(colorCode);\r\n            }else if (footerLayout==5){\r\n                ChangeTextColorForFrameFive(colorCode);\r\n            }else if (footerLayout==6){\r\n                ChangeTextColorForFrameSix(colorCode);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //for background color change\r\n    @Override public void onChooseColor(int colorCode) {\r\n        if (editorFragment==3){\r\n            if (footerLayout==1){\r\n                ChangeBackgroundColorForFrameOne(colorCode);\r\n            }else if (footerLayout==2){\r\n                ChangeBackgroundColorForFrameTwo(colorCode);\r\n            }else if (footerLayout==3){\r\n\r\n            }else if (footerLayout==4){\r\n                ChangeBackgroundColorForFrameFour(colorCode);\r\n            }else if (footerLayout==5){\r\n                ChangeBackgroundColorForFrameFive(colorCode);\r\n            }else if (footerLayout==6){\r\n                ChangeBackgroundColorForFrameSix(colorCode);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    //for font change\r\n    @Override public void onFontChangeListenert(String Font) {\r\n            if (footerLayout==1){\r\n                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n                oneBinding.gmailText.setTypeface(custom_font);\r\n                oneBinding.contactText.setTypeface(custom_font);\r\n                 oneBinding.locationText.setTypeface(custom_font);\r\n            }else if (footerLayout==2){\r\n                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n                twoBinding.gmailText.setTypeface(custom_font);\r\n                twoBinding.contactText.setTypeface(custom_font);\r\n                twoBinding.locationText.setTypeface(custom_font);\r\n                twoBinding.websiteText.setTypeface(custom_font);\r\n            }else if (footerLayout==3){\r\n                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n                threeBinding.gmailText.setTypeface(custom_font);\r\n                threeBinding.contactText.setTypeface(custom_font);\r\n                threeBinding.locationText.setTypeface(custom_font);\r\n                threeBinding.websiteText.setTypeface(custom_font);\r\n            }else if (footerLayout==4){\r\n                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n                fourBinding.gmailText.setTypeface(custom_font);\r\n                fourBinding.contactText.setTypeface(custom_font);\r\n                fourBinding.locationText.setTypeface(custom_font);\r\n                fourBinding.websiteText.setTypeface(custom_font);\r\n            }else if (footerLayout==5){\r\n                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n                fiveBinding.gmailText.setTypeface(custom_font);\r\n                fiveBinding.phoneTxt.setTypeface(custom_font);\r\n                fiveBinding.websiteText.setTypeface(custom_font);\r\n            }else if (footerLayout==6) {\r\n                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n                sixBinding.textElement1.setTypeface(custom_font);\r\n\r\n            }\r\n    }\r\n\r\n    //for underline\r\n    @Override public void onUnderLineItalic(boolean Left) {\r\n        if (Left) {\r\n            if (footerLayout==1) {\r\n                Utility.setUnderlineText(oneBinding.gmailText, true);\r\n                Utility.setUnderlineText(oneBinding.contactText, true);\r\n                Utility.setUnderlineText(oneBinding.locationText, true);\r\n\r\n\r\n            }else if (footerLayout==2) {\r\n                Utility.setUnderlineText(twoBinding.gmailText, true);\r\n                Utility.setUnderlineText(twoBinding.contactText, true);\r\n                Utility.setUnderlineText(twoBinding.locationText, true);\r\n                Utility.setUnderlineText(twoBinding.websiteText, true);\r\n\r\n            }else if (footerLayout==3) {\r\n                Utility.setUnderlineText(threeBinding.gmailText, true);\r\n                Utility.setUnderlineText(threeBinding.contactText, true);\r\n                Utility.setUnderlineText(threeBinding.locationText, true);\r\n                Utility.setUnderlineText(threeBinding.websiteText, true);\r\n\r\n\r\n            }else if (footerLayout==4) {\r\n\r\n                Utility.setUnderlineText(fourBinding.gmailText, true);\r\n                Utility.setUnderlineText(fourBinding.contactText, true);\r\n                Utility.setUnderlineText(fourBinding.locationText, true);\r\n                Utility.setUnderlineText(fourBinding.websiteText, true);\r\n            }else if (footerLayout==5) {\r\n                Utility.setUnderlineText(fiveBinding.gmailText, true);\r\n                Utility.setUnderlineText(fiveBinding.phoneTxt, true);\r\n                Utility.setUnderlineText(fiveBinding.websiteText, true);\r\n            }else if (footerLayout==6) {\r\n                Utility.setUnderlineText(sixBinding.textElement1, true);\r\n\r\n            }\r\n        }\r\n        else {\r\n            if (footerLayout == 1) {\r\n                Utility.setUnderlineText(oneBinding.gmailText, false);\r\n                Utility.setUnderlineText(oneBinding.contactText, false);\r\n                Utility.setUnderlineText(oneBinding.locationText, false);\r\n            } else if (footerLayout == 2) {\r\n                Utility.setUnderlineText(twoBinding.gmailText, false);\r\n                Utility.setUnderlineText(twoBinding.contactText, false);\r\n                Utility.setUnderlineText(twoBinding.locationText, false);\r\n                Utility.setUnderlineText(twoBinding.websiteText, false);\r\n            } else if (footerLayout == 3) {\r\n                Utility.setUnderlineText(threeBinding.gmailText, false);\r\n                Utility.setUnderlineText(threeBinding.contactText, false);\r\n                Utility.setUnderlineText(threeBinding.locationText, false);\r\n                Utility.setUnderlineText(threeBinding.websiteText, false);\r\n            } else if (footerLayout == 4) {\r\n\r\n                Utility.setUnderlineText(fourBinding.gmailText, false);\r\n                Utility.setUnderlineText(fourBinding.contactText, false);\r\n                Utility.setUnderlineText(fourBinding.locationText, false);\r\n                Utility.setUnderlineText(fourBinding.websiteText, false);\r\n            } else if (footerLayout == 5) {\r\n                Utility.setUnderlineText(fiveBinding.gmailText, false);\r\n                Utility.setUnderlineText(fiveBinding.phoneTxt, false);\r\n                Utility.setUnderlineText(fiveBinding.websiteText, false);\r\n            } else if (footerLayout == 6) {\r\n\r\n                Utility.setUnderlineText(sixBinding.textElement1, false);\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    //for font size\r\n    @Override public void onfontSize(int textsize) {\r\n        if (footerLayout==1){\r\n            oneBinding.gmailText.setTextSize(textsize);\r\n            oneBinding.contactText.setTextSize(textsize);\r\n            oneBinding.locationText.setTextSize(textsize);\r\n        }else if (footerLayout==2){\r\n\r\n            twoBinding.gmailText.setTextSize(textsize);\r\n            twoBinding.contactText.setTextSize(textsize);\r\n            twoBinding.locationText.setTextSize(textsize);\r\n            twoBinding.websiteText.setTextSize(textsize);\r\n        }else if (footerLayout==3){\r\n\r\n            threeBinding.gmailText.setTextSize(textsize);\r\n            threeBinding.contactText.setTextSize(textsize);\r\n            threeBinding.locationText.setTextSize(textsize);\r\n            threeBinding.websiteText.setTextSize(textsize);\r\n        }else if (footerLayout==4){\r\n\r\n            fourBinding.gmailText.setTextSize(textsize);\r\n            fourBinding.contactText.setTextSize(textsize);\r\n            fourBinding.locationText.setTextSize(textsize);\r\n            fourBinding.websiteText.setTextSize(textsize);\r\n        }else if (footerLayout==5){\r\n\r\n            fiveBinding.gmailText.setTextSize(textsize);\r\n            fiveBinding.phoneTxt.setTextSize(textsize);\r\n            fiveBinding.websiteText.setTextSize(textsize);\r\n        }else if (footerLayout==6) {\r\n\r\n            sixBinding.textElement1.setTextSize(textsize);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    //for bold text\r\n    @Override public void onBoldTextChange(boolean Bold) {\r\n        if (Bold) {\r\n            if (footerLayout == 1) {\r\n                Utility.setBold(oneBinding.gmailText, true);\r\n                Utility.setBold(oneBinding.contactText, true);\r\n                Utility.setBold(oneBinding.locationText, true);\r\n\r\n\r\n            } else if (footerLayout == 2) {\r\n                Utility.setBold(twoBinding.gmailText, true);\r\n                Utility.setBold(twoBinding.contactText, true);\r\n                Utility.setBold(twoBinding.locationText, true);\r\n                Utility.setBold(twoBinding.websiteText, true);\r\n\r\n            } else if (footerLayout == 3) {\r\n                Utility.setBold(threeBinding.gmailText, true);\r\n                Utility.setBold(threeBinding.contactText, true);\r\n                Utility.setBold(threeBinding.locationText, true);\r\n                Utility.setBold(threeBinding.websiteText, true);\r\n\r\n\r\n            } else if (footerLayout == 4) {\r\n\r\n                Utility.setBold(fourBinding.gmailText, true);\r\n                Utility.setBold(fourBinding.contactText, true);\r\n                Utility.setBold(fourBinding.locationText, true);\r\n                Utility.setBold(fourBinding.websiteText, true);\r\n            } else if (footerLayout == 5) {\r\n                Utility.setBold(fiveBinding.gmailText, true);\r\n                Utility.setBold(fiveBinding.phoneTxt, true);\r\n                Utility.setBold(fiveBinding.websiteText, true);\r\n            } else if (footerLayout == 6) {\r\n                Utility.setBold(sixBinding.textElement1, true);\r\n\r\n            }\r\n\r\n        }else {\r\n            if (footerLayout == 1) {\r\n                Utility.setBold(oneBinding.gmailText, false);\r\n                Utility.setBold(oneBinding.contactText, false);\r\n                Utility.setBold(oneBinding.locationText, false);\r\n            } else if (footerLayout == 2) {\r\n                Utility.setBold(twoBinding.gmailText, false);\r\n                Utility.setBold(twoBinding.contactText, false);\r\n                Utility.setBold(twoBinding.locationText, false);\r\n                Utility.setBold(twoBinding.websiteText, false);\r\n            } else if (footerLayout == 3) {\r\n                Utility.setBold(threeBinding.gmailText, false);\r\n                Utility.setBold(threeBinding.contactText, false);\r\n                Utility.setBold(threeBinding.locationText, false);\r\n                Utility.setBold(threeBinding.websiteText, false);\r\n            } else if (footerLayout == 4) {\r\n\r\n                Utility.setBold(fourBinding.gmailText, false);\r\n                Utility.setBold(fourBinding.contactText, false);\r\n                Utility.setBold(fourBinding.locationText, false);\r\n                Utility.setBold(fourBinding.websiteText, false);\r\n            } else if (footerLayout == 5) {\r\n                Utility.setBold(fiveBinding.gmailText, false);\r\n                Utility.setBold(fiveBinding.phoneTxt, false);\r\n                Utility.setBold(fiveBinding.websiteText, false);\r\n            } else if (footerLayout == 6) {\r\n\r\n                Utility.setBold(sixBinding.textElement1, false);\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    //for italic\r\n    @Override public void onItalicTextChange(boolean Italic) {\r\n        if (Italic) {\r\n\r\n            if (footerLayout == 1) {\r\n                Utility.setItalicText(oneBinding.gmailText, true);\r\n                Utility.setItalicText(oneBinding.contactText, true);\r\n                Utility.setItalicText(oneBinding.locationText, true);\r\n\r\n            } else if (footerLayout == 2) {\r\n\r\n                Utility.setItalicText(twoBinding.gmailText, true);\r\n                Utility.setItalicText(twoBinding.contactText, true);\r\n                Utility.setItalicText(twoBinding.locationText, true);\r\n                Utility.setItalicText(twoBinding.websiteText, true);\r\n\r\n            } else if (footerLayout == 3) {\r\n\r\n                Utility.setItalicText(threeBinding.gmailText, true);\r\n                Utility.setItalicText(threeBinding.contactText, true);\r\n                Utility.setItalicText(threeBinding.locationText, true);\r\n                Utility.setItalicText(threeBinding.websiteText, true);\r\n\r\n            } else if (footerLayout == 4) {\r\n                Utility.setItalicText(fourBinding.gmailText, true);\r\n                Utility.setItalicText(fourBinding.contactText, true);\r\n                Utility.setItalicText(fourBinding.locationText, true);\r\n                Utility.setItalicText(fourBinding.websiteText, true);\r\n            } else if (footerLayout == 5) {\r\n                Utility.setItalicText(fiveBinding.gmailText, true);\r\n                Utility.setItalicText(fiveBinding.phoneTxt, true);\r\n                Utility.setItalicText(fiveBinding.websiteText, true);\r\n            } else if (footerLayout == 6) {\r\n                Utility.setItalicText(sixBinding.textElement1, true);\r\n            }\r\n\r\n        }\r\n        else {\r\n            if (footerLayout == 1) {\r\n                Utility.setItalicText(oneBinding.gmailText, false);\r\n                Utility.setItalicText(oneBinding.contactText, false);\r\n                Utility.setItalicText(oneBinding.locationText, false);\r\n            } else if (footerLayout == 2) {\r\n                Utility.setItalicText(twoBinding.gmailText, false);\r\n                Utility.setItalicText(twoBinding.contactText, false);\r\n                Utility.setItalicText(twoBinding.locationText, false);\r\n                Utility.setItalicText(twoBinding.websiteText, false);\r\n            } else if (footerLayout == 3) {\r\n                Utility.setItalicText(threeBinding.gmailText, false);\r\n                Utility.setItalicText(threeBinding.contactText, false);\r\n                Utility.setItalicText(threeBinding.locationText, false);\r\n                Utility.setItalicText(threeBinding.websiteText, false);\r\n            } else if (footerLayout == 4) {\r\n\r\n                Utility.setItalicText(fourBinding.gmailText, false);\r\n                Utility.setItalicText(fourBinding.contactText, false);\r\n                Utility.setItalicText(fourBinding.locationText, false);\r\n                Utility.setItalicText(fourBinding.websiteText, false);\r\n            } else if (footerLayout == 5) {\r\n                Utility.setItalicText(fiveBinding.gmailText, false);\r\n                Utility.setItalicText(fiveBinding.phoneTxt, false);\r\n                Utility.setItalicText(fiveBinding.websiteText, false);\r\n            } else if (footerLayout == 6) {\r\n\r\n                Utility.setItalicText(sixBinding.textElement1, false);\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    public void ChangeBackgroundColorForFrameOne(int colorCode) {\r\n        oneBinding.topView.setBackgroundColor(colorCode);\r\n        oneBinding.topView2.setBackgroundColor(colorCode);\r\n        oneBinding.addressLayoutElement2.setBackgroundColor(colorCode);\r\n    }\r\n\r\n    public void ChangeTextColorForFrameOne(int colodCode) {\r\n        oneBinding.gmailImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        oneBinding.gmailText.setTextColor(colodCode);\r\n        oneBinding.contactImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        oneBinding.contactText.setTextColor(colodCode);\r\n\r\n    }\r\n\r\n    public void ChangeBackgroundColorForFrameTwo(int colorCode) {\r\n        twoBinding.firstView.setBackgroundTintList(ColorStateList.valueOf(colorCode));\r\n        twoBinding.secondView.setBackgroundTintList(ColorStateList.valueOf(colorCode));\r\n\r\n    }\r\n\r\n    public void ChangeTextColorForFrameTwo(int colodCode) {\r\n        twoBinding.gmailImage.setBackgroundTintList(ColorStateList.valueOf(colodCode));\r\n        twoBinding.gmailText.setTextColor(colodCode);\r\n        twoBinding.contactImage.setBackgroundTintList(ColorStateList.valueOf(colodCode));\r\n        twoBinding.contactText.setTextColor(colodCode);\r\n        twoBinding.websiteImage.setBackgroundTintList(ColorStateList.valueOf(colodCode));\r\n        twoBinding.websiteText.setTextColor(colodCode);\r\n        twoBinding.locationImage.setBackgroundTintList(ColorStateList.valueOf(colodCode));\r\n        twoBinding.locationText.setTextColor(colodCode);\r\n\r\n    }\r\n\r\n    public void ChangeTextColorForFrameThree(int colodCode){\r\n        threeBinding.gmailImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        threeBinding.gmailText.setTextColor(colodCode);\r\n        threeBinding.contactImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        threeBinding.contactText.setTextColor(colodCode);\r\n        threeBinding.websiteImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        threeBinding.websiteText.setTextColor(colodCode);\r\n        threeBinding.loacationImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        threeBinding.locationText.setTextColor(colodCode);\r\n\r\n    }\r\n\r\n    public void ChangeBackgroundColorForFrameFour(int colorCode) {\r\n        fourBinding.topView2.setBackgroundColor(colorCode);\r\n    }\r\n\r\n    public void ChangeTextColorForFrameFour(int colodCode) {\r\n        fourBinding.gmailImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fourBinding.gmailText.setTextColor(colodCode);\r\n        fourBinding.contactImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fourBinding.contactText.setTextColor(colodCode);\r\n        fourBinding.websiteImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fourBinding.websiteText.setTextColor(colodCode);\r\n        fourBinding.locationImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fourBinding.locationText.setTextColor(colodCode);\r\n\r\n    }\r\n\r\n    public void ChangeBackgroundColorForFrameFive(int colorCode) {\r\n        fiveBinding.element1.setImageTintList(ColorStateList.valueOf(colorCode));\r\n        fiveBinding.element3.setImageTintList(ColorStateList.valueOf(colorCode));\r\n        fiveBinding.viewElement2.setBackgroundColor(colorCode);\r\n\r\n    }\r\n\r\n    public void ChangeTextColorForFrameFive(int colodCode) {\r\n        fiveBinding.gmailImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fiveBinding.gmailText.setTextColor(colodCode);\r\n        fiveBinding.contactImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fiveBinding.phoneTxt.setTextColor(colodCode);\r\n        fiveBinding.websiteImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fiveBinding.websiteText.setTextColor(colodCode);\r\n    }\r\n\r\n    public void ChangeBackgroundColorForFrameSix(int colorCode) {\r\n        sixBinding.containerElement.setBackgroundTintList(ColorStateList.valueOf(colorCode));\r\n        sixBinding.viewElement2.setBackgroundTintList(ColorStateList.valueOf(colorCode));\r\n\r\n    }\r\n\r\n    public void ChangeTextColorForFrameSix(int colodCode) {\r\n        sixBinding.imgElement1.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        sixBinding.imgElement2.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        sixBinding.imgElement3.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        sixBinding.textElement1.setTextColor(colodCode);\r\n        sixBinding.contactImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        sixBinding.contactText.setTextColor(colodCode);\r\n    }\r\n\r\n    public void loadFrameFirstData() {\r\n        BrandListItem activeBrand = preafManager.getActiveBrand();\r\n        if (!activeBrand.getEmail().isEmpty()) {\r\n            oneBinding.gmailText.setText(activeBrand.getEmail());\r\n        } else {\r\n            oneBinding.gmailLayout.setVisibility(View.GONE);\r\n        }\r\n\r\n        if (!activeBrand.getPhonenumber().isEmpty()) {\r\n            oneBinding.contactText.setText(activeBrand.getPhonenumber());\r\n        } else {\r\n            oneBinding.contactLayout.setVisibility(View.GONE);\r\n        }\r\n\r\n        if (!activeBrand.getAddress().isEmpty()) {\r\n            oneBinding.locationText.setText(activeBrand.getAddress());\r\n        } else {\r\n            oneBinding.addressLayoutElement.setVisibility(View.GONE);\r\n        }\r\n    }\r\n\r\n    public void loadFrameTwoData() {\r\n        BrandListItem activeBrand = preafManager.getActiveBrand();\r\n        if (!activeBrand.getEmail().isEmpty()) {\r\n            twoBinding.gmailText.setText(activeBrand.getEmail());\r\n        } else {\r\n            twoBinding.gmailLayout.setVisibility(View.GONE);\r\n        }\r\n\r\n        if (!activeBrand.getPhonenumber().isEmpty()) {\r\n            twoBinding.contactText.setText(activeBrand.getPhonenumber());\r\n        } else {\r\n            twoBinding.contactLayout.setVisibility(View.GONE);\r\n        }\r\n        if (activeBrand.getPhonenumber().isEmpty() && activeBrand.getEmail().isEmpty()) {\r\n            twoBinding.firstView.setVisibility(View.GONE);\r\n        }\r\n\r\n\r\n        if (!activeBrand.getAddress().isEmpty()) {\r\n            twoBinding.locationText.setText(activeBrand.getAddress());\r\n        } else {\r\n            twoBinding.locationLayout.setVisibility(View.GONE);\r\n        }\r\n        if (!activeBrand.getWebsite().isEmpty()) {\r\n            twoBinding.websiteText.setText(activeBrand.getWebsite());\r\n        } else {\r\n            twoBinding.websiteText.setVisibility(View.GONE);\r\n        }\r\n\r\n        if (activeBrand.getAddress().isEmpty() && activeBrand.getWebsite().isEmpty()) {\r\n            twoBinding.secondView.setVisibility(View.GONE);\r\n        }\r\n    }\r\n\r\n    public void loadFrameThreeData() {\r\n        BrandListItem activeBrand = preafManager.getActiveBrand();\r\n        if (!activeBrand.getEmail().isEmpty()) {\r\n            threeBinding.gmailText.setText(activeBrand.getEmail());\r\n        } else {\r\n            threeBinding.gmailLayout.setVisibility(View.GONE);\r\n        }\r\n\r\n        if (!activeBrand.getPhonenumber().isEmpty()) {\r\n            threeBinding.contactText.setText(activeBrand.getPhonenumber());\r\n        } else {\r\n            threeBinding.contactLayout.setVisibility(View.GONE);\r\n        }\r\n\r\n\r\n        if (!activeBrand.getAddress().isEmpty()) {\r\n            threeBinding.locationText.setText(activeBrand.getAddress());\r\n        } else {\r\n            threeBinding.loactionLayout.setVisibility(View.GONE);\r\n        }\r\n\r\n        if (!activeBrand.getWebsite().isEmpty()) {\r\n            threeBinding.websiteText.setText(activeBrand.getWebsite());\r\n        } else {\r\n            threeBinding.websiteText.setVisibility(View.GONE);\r\n        }\r\n\r\n    }\r\n\r\n    public void loadFrameFourData() {\r\n        BrandListItem activeBrand = preafManager.getActiveBrand();\r\n        if (!activeBrand.getEmail().isEmpty()) {\r\n            fourBinding.gmailText.setText(activeBrand.getEmail());\r\n        } else {\r\n            fourBinding.gmailLayout.setVisibility(View.GONE);\r\n        }\r\n\r\n        if (!activeBrand.getPhonenumber().isEmpty()) {\r\n            fourBinding.contactText.setText(activeBrand.getPhonenumber());\r\n        } else {\r\n            fourBinding.contactLayout.setVisibility(View.GONE);\r\n        }\r\n\r\n\r\n        if (!activeBrand.getAddress().isEmpty()) {\r\n            fourBinding.locationText.setText(activeBrand.getAddress());\r\n        } else {\r\n            fourBinding.locationLayout.setVisibility(View.GONE);\r\n        }\r\n\r\n        if (!activeBrand.getWebsite().isEmpty()) {\r\n            fourBinding.websiteText.setText(activeBrand.getWebsite());\r\n        } else {\r\n            fourBinding.websiteText.setVisibility(View.GONE);\r\n        }\r\n\r\n    }\r\n\r\n    public void loadFrameFiveData() {\r\n        BrandListItem activeBrand = preafManager.getActiveBrand();\r\n        if (!activeBrand.getEmail().isEmpty()) {\r\n            fiveBinding.gmailText.setText(activeBrand.getEmail());\r\n        } else {\r\n            fiveBinding.elementEmail.setVisibility(View.GONE);\r\n        }\r\n\r\n        if (!activeBrand.getPhonenumber().isEmpty()) {\r\n            fiveBinding.phoneTxt.setText(activeBrand.getPhonenumber());\r\n        } else {\r\n            fiveBinding.elementMobile.setVisibility(View.GONE);\r\n        }\r\n\r\n        if (!activeBrand.getWebsite().isEmpty()) {\r\n            fiveBinding.websiteText.setText(activeBrand.getWebsite());\r\n        } else {\r\n            fiveBinding.element0.setVisibility(View.GONE);\r\n        }\r\n    }\r\n\r\n    //to handle click and drag listener\r\n    private class SingleTapConfirm extends GestureDetector.SimpleOnGestureListener {\r\n        @Override\r\n        public boolean onSingleTapUp(MotionEvent event) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    //zoom Logo\r\n    @Override public boolean onTouchEvent(MotionEvent motionEvent) {\r\n        scaleGestureDetector.onTouchEvent(motionEvent);\r\n        binding.logoCustom.onTouchEvent(motionEvent);\r\n        return true;\r\n    }\r\n    private class ScaleListener extends ScaleGestureDetector.SimpleOnScaleGestureListener {\r\n        @Override\r\n        public boolean onScale(ScaleGestureDetector scaleGestureDetector) {\r\n            mScaleFactor *= scaleGestureDetector.getScaleFactor();\r\n            mScaleFactor = Math.max(0.1f, Math.min(mScaleFactor, 10.0f));\r\n            binding.logoCustom.setScaleX(mScaleFactor);\r\n            binding.logoCustom.setScaleY(mScaleFactor);\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //API CALLS---------------------\r\n\r\n\r\n    //getFrames\r\n    private void getFrame() {\r\n        Utility.Log(\"API : \", APIs.GET_FRAME);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_FRAME, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.Log(\"GET_FRAME : \", response);\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    brandListItems = ResponseHandler.HandleGetFrame(jsonObject);\r\n                    JSONObject datajsonobjecttt = ResponseHandler.getJSONObject(jsonObject, \"data\");\r\n                    is_frame = datajsonobjecttt.getString(\"is_frame\");\r\n                    if (is_frame.equals(\"1\")) {\r\n                        is_payment_pending = datajsonobjecttt.getString(\"is_payment_pending\");\r\n                        packagee = datajsonobjecttt.getString(\"package\");\r\n                    }\r\n\r\n\r\n                    CreateTabs();\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n//                        String body;\r\n//                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n//                        Log.e(\"Load-Get_Exam \", body);\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                params.put(\"brand_id\", preafManager.getActiveBrand().getId());\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    //For Download,Share and Fav\r\n    private void downloadAndShareApi(final int download,Bitmap customImage) {\r\n\r\n        Utility.showLoadingTran(act);\r\n        Utility.Log(\"API : \", APIs.DOWNLOAD_SHARE);\r\n        File img1File = null;\r\n        if (customImage != null) {\r\n            img1File = CodeReUse.createFileFromBitmap(act, \"photo.jpeg\", customImage);\r\n        }\r\n        ANRequest.MultiPartBuilder request = AndroidNetworking.upload(APIs.DOWNLOAD_SHARE)\r\n                .addHeaders(\"Accept\", \"application/json\")\r\n                .addHeaders(\"Content-Type\", \"application/json\")\r\n                .addHeaders(\"Authorization\", \"Bearer\" + preafManager.getUserToken())\r\n                .setPriority(Priority.HIGH);\r\n\r\n\r\n\r\n        if (isUsingCustomFrame){\r\n            request.addMultipartParameter(\"brand_id\",  preafManager.getActiveBrand().getId());\r\n            request.addMultipartParameter(\"image_id\", selectedObject.getImageid());\r\n            request.addMultipartParameter(\"is_custom\", \"1\");\r\n            if (img1File != null) {\r\n                request.addMultipartFile(\"image\", img1File);\r\n                Log.e(\"br_logo\", String.valueOf(img1File));\r\n            }\r\n        } else {\r\n            request.addMultipartParameter(\"brand_id\", preafManager.getActiveBrand().getId());\r\n            request.addMultipartParameter(\"image_id\", selectedObject.getImageid());\r\n            request.addMultipartParameter(\"frame_id\", selectedBackendFrame.getFrame1Id());\r\n            request.addMultipartParameter(\"is_custom\", \"0\");\r\n        }\r\n        request.addMultipartParameter(\"type\", String.valueOf(download));\r\n\r\n        request.build().setUploadProgressListener(new UploadProgressListener() {\r\n            @Override\r\n            public void onProgress(long bytesUploaded, long totalBytes) {\r\n                // do anything with progress\r\n            }\r\n        })\r\n                .getAsJSONObject(new JSONObjectRequestListener() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        Utility.dismissLoadingTran();\r\n                        Utility.Log(\"DOWNLOAD_SHARE : \", response);\r\n                        if (updateLogo && selectedLogo != null)\r\n                            uploadLogoForBrand(selectedLogo);\r\n\r\n                        if (download == DOWLOAD) {\r\n                            //this is coding for can we change logo or not\r\n                            String usedImageCountStr = preafManager.getActiveBrand().getNo_of_used_image();\r\n                            if (usedImageCountStr.isEmpty())\r\n                                usedImageCountStr = \"0\";\r\n\r\n                            int usedCounter = Integer.parseInt(usedImageCountStr) + 1;\r\n                            BrandListItem brandListItem = preafManager.getActiveBrand();\r\n                            brandListItem.setNo_of_used_image(String.valueOf(usedCounter));\r\n                            preafManager.setActiveBrand(brandListItem);\r\n                            preafManager = new PreafManager(act);\r\n                            Log.e(\"UUUU\", preafManager.getActiveBrand().getNo_of_used_image() + \"s\");\r\n                        }\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(ANError error) {\r\n                        isLoading = false;\r\n                        Utility.dismissLoadingTran();\r\n                        if (error.getErrorCode() != 0) {\r\n                            Log.e(\"onError errorCode : \", String.valueOf(error.getErrorCode()));\r\n                            Log.e(\"onError errorBody : \", error.getErrorBody());\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        } else {\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    //api for access rights\r\n    private void getImageDownloadRights(String flag) {\r\n        Utility.showLoadingTran(act);\r\n        Utility.Log(\"API : \", APIs.CUSTOM_FRAME_ACCESS);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.CUSTOM_FRAME_ACCESS, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.dismissLoadingTran();\r\n                Utility.Log(\"Access-Rights-Response:\", response);\r\n                JSONObject respJson = ResponseHandler.createJsonObject(response);\r\n                if (ResponseHandler.getBool(respJson, \"status\")) {\r\n                    JSONArray dataJson = ResponseHandler.getJSONArray(respJson, \"data\");\r\n                    try {\r\n                        String frameCount = ResponseHandler.getString(dataJson.getJSONObject(0), \"frame_counter\").equals(\"\") ? \"0\" : ResponseHandler.getString(dataJson.getJSONObject(0), \"frame_counter\");\r\n                        FrameCountForDownload = Integer.parseInt(frameCount);\r\n                        if (ResponseHandler.getBool(dataJson.getJSONObject(0), \"status\")) {\r\n                            canDownload = true;\r\n                            if (flag.equalsIgnoreCase(\"Download\"))\r\n                                askForDownloadImage();\r\n                            else {\r\n                                requestAgain();\r\n                                saveImageToGallery(true);\r\n\r\n                            }\r\n\r\n                        } else {\r\n                            canDownload = false;\r\n                            downloadLimitExpireDialog();\r\n                            //Toast.makeText(act, \"You can't download image bcoz your limit get expire for one day\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                } else {\r\n                    canDownload = false;\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        Utility.dismissLoadingTran();\r\n                        error.printStackTrace();\r\n//                        String body;\r\n//                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n//                        Log.e(\"Load-Get_Exam \", body);\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                params.put(\"brand_id\", preafManager.getActiveBrand().getId());\r\n                Utility.Log(\"Params\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    //update logo to brand\r\n    private void uploadLogoForBrand(Bitmap img) {\r\n        Utility.showLoadingTran(act);\r\n\r\n        File img1File = null;\r\n        if (img != null) {\r\n            img1File = CodeReUse.createFileFromBitmap(act, \"photo.jpeg\", img);\r\n        }\r\n        ANRequest.MultiPartBuilder request = AndroidNetworking.upload(APIs.EDIT_BRAND)\r\n                .addHeaders(\"Accept\", \"application/json\")\r\n                .addHeaders(\"Content-Type\", \"application/json\")\r\n                .addHeaders(\"Authorization\", \"Bearer\" + preafManager.getUserToken())\r\n                .addMultipartParameter(\"brand_id\", preafManager.getActiveBrand().getId())\r\n                .setPriority(Priority.HIGH);\r\n\r\n        if (img1File != null) {\r\n            request.addMultipartFile(\"br_logo\", img1File);\r\n            Log.e(\"br_logo\", String.valueOf(img1File));\r\n        }\r\n\r\n        request.build().setUploadProgressListener(new UploadProgressListener() {\r\n            @Override\r\n            public void onProgress(long bytesUploaded, long totalBytes) {\r\n                // do anything with progress\r\n            }\r\n        })\r\n                .getAsJSONObject(new JSONObjectRequestListener() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        isLoading = false;\r\n                        Utility.dismissLoadingTran();\r\n                        Utility.Log(\"Logo Uploaded\", response);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(ANError error) {\r\n                        isLoading = false;\r\n                        Utility.dismissLoadingTran();\r\n                        if (error.getErrorCode() != 0) {\r\n                            Log.e(\"onError errorCode : \", String.valueOf(error.getErrorCode()));\r\n                            Log.e(\"onError errorBody : \", error.getErrorBody());\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        } else {\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/ViewAllImage.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Activity/ViewAllImage.java	(date 1609307539233)
@@ -8,6 +8,7 @@
 import android.content.Intent;
 import android.content.pm.PackageManager;
 import android.content.res.ColorStateList;
+import android.content.res.Resources;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.Canvas;
@@ -17,6 +18,7 @@
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
+import android.graphics.drawable.GradientDrawable;
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
@@ -36,6 +38,7 @@
 
 import androidx.annotation.RequiresApi;
 import androidx.core.app.ActivityCompat;
+import androidx.core.content.ContextCompat;
 import androidx.databinding.DataBindingUtil;
 import androidx.recyclerview.widget.GridLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
@@ -80,7 +83,6 @@
 import com.app.brandmania.Utils.Utility;
 import com.app.brandmania.databinding.ActivityViewAllImageBinding;
 import com.app.brandmania.databinding.DialogUpgradeDownloadLimitExpireBinding;
-import com.app.brandmania.databinding.DialogUpgradeLayoutBinding;
 import com.app.brandmania.databinding.DialogUpgradeLayoutEnterpriseBinding;
 import com.app.brandmania.databinding.DialogUpgradeLayoutSecondBinding;
 import com.app.brandmania.databinding.LayoutForLoadFiveBinding;
@@ -169,6 +171,10 @@
     private boolean updateLogo = false;
     private Bitmap selectedLogo;
 
+    private int colorCodeForBackground;
+    private int colorCodeForTextColor=0;
+
+
     @Override
     public void onCreate(Bundle savedInstanceState) {
         setTheme(R.style.AppTheme_material_theme);
@@ -191,14 +197,19 @@
 
         mainLayout = (RelativeLayout) findViewById(R.id.elementCustomFrame);
 
+        GradientDrawable drawable = (GradientDrawable) binding.elementCustomFrame.getBackground();
+        drawable.setStroke((int) convertDpToPx(0), colorCodeForBackground);
+
         updateLogo = preafManager.getActiveBrand().getLogo().isEmpty();
 
+        colorCodeForBackground= ContextCompat.getColor(act,R.color.colorPrimary);
+       // colorCodeForTextColor= ContextCompat.getColor(act,R.color.colorPrimary);
 
         binding.logoEmptyState.setOnTouchListener(onTouchListener());
         binding.logoCustom.setOnTouchListener(onTouchListener());
+
         gestureDetector = new GestureDetector(this, new SingleTapConfirm());
 
-
         binding.backIcon.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -209,6 +220,7 @@
         binding.fabroutIcon.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
+
                 if (selectedBackendFrame != null)
                     selectedObject.setFrame1Id(selectedBackendFrame.getFrame1Id());
 
@@ -220,10 +232,11 @@
                     binding.fabroutIcon.setVisibility(View.GONE);
                     binding.addfabroutIcon.setVisibility(View.VISIBLE);
                 }
-
-                downloadAndShareApi(ADDFAV,null);
+                saveImageToGallery(false,true);
+                //downloadAndShareApi(ADDFAV,null);
             }
         });
+
         binding.addfabroutIcon.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -246,34 +259,61 @@
         binding.downloadIcon.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                if (selectedObject.isImageFree()) {
-                    if (isUsingCustomFrame && selectedFooterModel != null && !selectedFooterModel.isFree()) {
-                        askForUpgradeToEnterpisePackage();
-                        return;
-                    }
-                    getImageDownloadRights("Download");
-                }else{
-                    askForPayTheirPayment();
+
+                if (Utility.isUserPaid(preafManager.getActiveBrand())){
+                    if (selectedObject.isImageFree()) {
+                        if (isUsingCustomFrame && selectedFooterModel != null && !selectedFooterModel.isFree()) {
+                            askForUpgradeToEnterpisePackage();
+                            return;
+                        }
+                        getImageDownloadRights("Download");
+                    }else{
+                        askForPayTheirPayment();
+                    }
+                }else {
+                     if (isUsingCustomFrame && selectedFooterModel != null && !selectedFooterModel.isFree()) {
+                            askForUpgradeToEnterpisePackage();
+                            return;
+                        }
+                        getImageDownloadRights("Download");
                 }
+
+
             }
         });
+
         binding.shareIcon.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                if (selectedObject.isImageFree()) {
-                    if (isUsingCustomFrame && selectedFooterModel != null && !selectedFooterModel.isFree()) {
-                        askForUpgradeToEnterpisePackage();
-                        return;
-                    }
-                    getImageDownloadRights("Share");
-                }else{
-                    askForPayTheirPayment();
+              /*  if (selectedObject.isImageFree()) {
+                    if (isUsingCustomFrame && selectedFooterModel != null && !selectedFooterModel.isFree()) {
+                        askForUpgradeToEnterpisePackage();
+                        return;
+                    }
+                    getImageDownloadRights("Share");
+                }else{
+                    askForPayTheirPayment();
+                }*/
+
+                if (Utility.isUserPaid(preafManager.getActiveBrand())){
+                    if (selectedObject.isImageFree()) {
+                        if (isUsingCustomFrame && selectedFooterModel != null && !selectedFooterModel.isFree()) {
+                            askForUpgradeToEnterpisePackage();
+                            return;
+                        }
+                        getImageDownloadRights("Share");
+                    }else{
+                        askForPayTheirPayment();
+                    }
+                }else {
+                    if (isUsingCustomFrame && selectedFooterModel != null && !selectedFooterModel.isFree()) {
+                        askForUpgradeToEnterpisePackage();
+                        return;
+                    }
+                    getImageDownloadRights("Share");
                 }
-
             }
         });
-
-       // binding.logoEmptyState.setVisibility(View.VISIBLE);
 
         if (preafManager.getActiveBrand().getLogo() != null && !preafManager.getActiveBrand().getLogo().isEmpty() ) {
             binding.logoEmptyState.setVisibility(View.GONE);
@@ -318,9 +358,7 @@
                     @Override
                     public void onClick(DialogInterface arg0, int arg1) {
                         requestAgain();
-                        saveImageToGallery(false);
-
-
+                        saveImageToGallery(false,false);
                     }
                 });
         alertDialogBuilder.setNegativeButton("No", new DialogInterface.OnClickListener() {
@@ -361,31 +399,17 @@
                             if (IntroCounter == 1) {
                                 startIntro(binding.shareIcon, "Share", "Share Your Image Directly");
                             }
-                            if (IntroCounter == 2) {
+                            else if (IntroCounter == 2) {
                                 startIntro(binding.fabroutIcon, "Save", "Save To Your Brand");
                             }
-                            if (IntroCounter == 3) {
-                                startIntro(binding.viewPager.getChildAt(0), "Catogery", "List of images");
-                            }
-/*
-                        if (!is_frame.equalsIgnoreCase("1") && preafManager.getFrameIntro()) {
-                            preafManager.setFrameIntro(false);
-                            if (IntroCounter == 4) {
-                                startIntro(binding.logoCard, "Logo", "Change Your Logo");
+                            else if (IntroCounter == 3) {
+                                if (binding.logoEmptyState.getVisibility()==View.VISIBLE)
+                                    startIntro(binding.logoEmptyState, "Brand Logo", "Click on icon for choose your logo\n you can also move logo around anywhere in the image");
+                                else
+                                    startIntro(binding.logoCustom, "Brand Logo", "Click your logo to move around anywhere in the image");
+                            }else {
+                                showTabIntro(binding.viewPager.getChildAt(0), "Category", "Choose your image as you want");
                             }
-                            if (IntroCounter == 5) {
-                                startIntro(binding.customAddressEdit1, "AddressText", "Change Your Address Text color");
-                            }
-                            if (IntroCounter == 6) {
-                                startIntro(binding.customeContactEdit1, "ContactText", "Change Your Contact Text color");
-                            }
-                            if (IntroCounter == 7) {
-                                startIntro(binding.bottomBarView1, "Address Background", "Change Your Address Background color");
-                            }
-                            if (IntroCounter == 8) {
-                                startIntro(binding.bottomBarView2, "Contac Background", "Change Your Contact Background color");
-                            }
-                        }*/
                     }
                 })
                 .build()
@@ -426,27 +450,44 @@
                 .show();
     }
 
+    int tabIndex=1;
+    boolean needToIntro=false;
+    public void showIntroForTabLayout(){
+
+
+    }
+    public void showTabIntro(View view, String title, String desc) {
+
+        new GuideView.Builder(this)
+                .setTitle(title)
+                .setContentText(desc)
+                .setGravity(Gravity.center)
+                .setDismissType(DismissType.targetView)
+                .setTargetView(view)
+                .setContentTextSize(12)
+                .setTitleTextSize(14)
+                .setGuideListener(new GuideListener() {
+                    @Override
+                    public void onDismiss(View view) {
+                        binding.viewPager.setCurrentItem(tabIndex);
+                        tabIndex++;
+                    }
+                })
+                .build()
+                .show();
+    }
 
     public void CreateTabs(){
         binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper("Category")));
         binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper("Footer")));
 
 
-        if (!is_frame.equalsIgnoreCase("1")) {
-            IntroCounter = 0;
-            preafManager.setFrameIntro(false);
-            startIntroForFrameOnly(binding.logoEmptyState, "Logo", "you can upload logo here");
-        } else {
-            if (preafManager.getViewAllActivityIntro()) {
-                startIntro(binding.downloadIcon, "Download", "Download Image From here");
-                preafManager.setViewAllActivityIntro(false);
-            }
-        }
+
         binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper("Frames")));
         binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper("Background")));
         binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper("Text")));
 
-
+        needToIntro=true;
 
         binding.tabLayout.setTabTextColors(Color.parseColor("#727272"), Color.parseColor("#ad2753"));
         binding.tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);
@@ -462,6 +503,23 @@
                 binding.viewPager.setCurrentItem(tab.getPosition());
                 editorFragment=tab.getPosition();
 
+                if (needToIntro) {
+                    if (tabIndex == 1) {
+                        showTabIntro(binding.viewPager, "Footer", "if you want to custom frame then choose your own footer");
+                    }
+                    if (tabIndex == 2) {
+                        showTabIntro(binding.viewPager, "Frames", "Apply custom frame");
+                    }
+                    if (tabIndex == 3) {
+                        showTabIntro(binding.viewPager, "Background", "Choose your image as you want");
+                    }
+                    if (tabIndex == 4) {
+                        showTabIntro(binding.viewPager, "Text", "Change your text and icon color as u want");
+                        needToIntro=false;
+                    }
+                   // tabIndex++;
+
+                }
               //  handler(editorFragment);
             }
 
@@ -474,6 +532,26 @@
             }
         });
 
+
+        if (!is_frame.equalsIgnoreCase("1")) {
+            IntroCounter = 0;
+            preafManager.setFrameIntro(false);
+            //   startIntroForFrameOnly(binding.logoEmptyState, "Logo", "you can upload logo here");
+
+        } else {
+
+        }
+
+
+        if (!preafManager.getViewAllActivityIntro()) {
+            startIntro(binding.downloadIcon, "Download", "Download Image From here");
+            preafManager.setViewAllActivityIntro(false);
+        }else {
+            showTabIntro(binding.viewPager.getChildAt(0), "Category", "Choose your image as you want");
+        }
+
+
+
     }
 
     //load firstImage
@@ -971,7 +1049,7 @@
 
 
     //save image with frame either custome or from backend
-    public void saveImageToGallery(boolean wantToShare) {
+    public void saveImageToGallery(boolean wantToShare,boolean isFavourite) {
 
         Drawable bitmapFrame;
         if (isUsingCustomFrame){
@@ -987,54 +1065,64 @@
         ImageDrawable.draw(canvas);
         bitmapFrame.draw(canvas);
 
-        FileOutputStream fileOutputStream = null;
-        File file = getDisc();
-        if (!file.exists() && !file.mkdirs()) {
-            return;
-        }
-        SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyymmsshhmmss");
-        String date = simpleDateFormat.format(new Date());
-        String name = "Img" + date + ".jpg";
-        String file_name = file.getAbsolutePath() + "/" + name;
-        new_file = new File(file_name);
-        try {
-            fileOutputStream = new FileOutputStream(new_file);
-            Bitmap bitmap = merged;
-            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fileOutputStream);
-            fileOutputStream.flush();
-            fileOutputStream.close();
-        } catch (FileNotFoundException e) {
-            e.printStackTrace();
-        } catch (IOException e) {
-            e.printStackTrace();
-        }
-        refreshgallery(new_file);
+        if (!isFavourite) {
+            FileOutputStream fileOutputStream = null;
+            File file = getDisc();
+            if (!file.exists() && !file.mkdirs()) {
+                return;
+            }
+            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyymmsshhmmss");
+            String date = simpleDateFormat.format(new Date());
+            String name = "Img" + date + ".jpg";
+            String file_name = file.getAbsolutePath() + "/" + name;
+            new_file = new File(file_name);
+            try {
+                fileOutputStream = new FileOutputStream(new_file);
+                Bitmap bitmap = merged;
+                bitmap.compress(Bitmap.CompressFormat.JPEG, 80, fileOutputStream);
+                fileOutputStream.flush();
+                fileOutputStream.close();
+            } catch (FileNotFoundException e) {
+                e.printStackTrace();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+            refreshgallery(new_file);
 
-        if (wantToShare){
-            if (isUsingCustomFrame) {
-                addDynamicFooter(selectedFooterModel.getLayoutType());
-                binding.FrameImageDuplicate.setVisibility(View.GONE);
-                binding.FrameImageDuplicate.setImageBitmap(null);
-            } else {
-                Glide.with(getApplicationContext()).load(selectedBackendFrame.getFrame1()).into(binding.backendFrame);
-            }
-            Glide.with(getApplicationContext()).load(selectedObject.getFrame()).into(binding.recoImage);
-            triggerShareIntent(new_file);
-        }else {
-            Toast.makeText(act, "Your image is downloaded", Toast.LENGTH_SHORT).show();
-            if (isUsingCustomFrame) {
-                addDynamicFooter(selectedFooterModel.getLayoutType());
-                binding.FrameImageDuplicate.setVisibility(View.GONE);
-                binding.FrameImageDuplicate.setImageBitmap(null);
-            } else {
-                Glide.with(getApplicationContext()).load(selectedBackendFrame.getFrame1()).into(binding.backendFrame);
-            }
-
-
-        }
+            if (wantToShare) {
+                if (isUsingCustomFrame) {
+                    addDynamicFooter(selectedFooterModel.getLayoutType(), true);
+                    binding.FrameImageDuplicate.setVisibility(View.GONE);
+                    binding.FrameImageDuplicate.setImageBitmap(null);
+                } else {
+                    Glide.with(getApplicationContext()).load(selectedBackendFrame.getFrame1()).into(binding.backendFrame);
+                }
+                Glide.with(getApplicationContext()).load(selectedObject.getFrame()).into(binding.recoImage);
+                triggerShareIntent(new_file);
+            } else {
+                Toast.makeText(act, "Your image is downloaded", Toast.LENGTH_SHORT).show();
+                if (isUsingCustomFrame) {
+                    addDynamicFooter(selectedFooterModel.getLayoutType(), true);
+                    binding.FrameImageDuplicate.setVisibility(View.GONE);
+                    binding.FrameImageDuplicate.setImageBitmap(null);
+                } else {
+                    Glide.with(getApplicationContext()).load(selectedBackendFrame.getFrame1()).into(binding.backendFrame);
+                }
+            }
 
-        downloadAndShareApi(DOWLOAD,merged);
+            downloadAndShareApi(DOWLOAD, merged);
+        }else {
+            if (isUsingCustomFrame) {
+                addDynamicFooter(selectedFooterModel.getLayoutType(), true);
+                binding.FrameImageDuplicate.setVisibility(View.GONE);
+                binding.FrameImageDuplicate.setImageBitmap(null);
+            } else {
+                Glide.with(getApplicationContext()).load(selectedBackendFrame.getFrame1()).into(binding.backendFrame);
+            }
+            downloadAndShareApi(ADDFAV, merged);
+        }
     }
+
 
     //generate custom frame from relative layout
     private Bitmap getCustomFrameInBitmap() {
@@ -1109,9 +1197,15 @@
         isUsingCustomFrame = true;
         binding.backendFrame.setVisibility(View.GONE);
         binding.elementCustomFrame.setVisibility(View.VISIBLE);
+
+        GradientDrawable drawable = (GradientDrawable) binding.elementCustomFrame.getBackground();
+        drawable.setStroke((int) convertDpToPx(borderSize), colorCodeForBackground);
+
         selectedFooterModel = footerModel;
-        addDynamicFooter(footerLayout);
+        addDynamicFooter(footerLayout,false);
         forCheckFavorite();
+
+        changeBorderColorAsFrame();
     }
 
     //check for added to fav or not
@@ -1168,12 +1262,13 @@
     private LayoutForLoadFiveBinding fiveBinding;
     private LayoutForLoadSixBinding sixBinding;
 
-    private void addDynamicFooter(int layoutType) {
+    private void addDynamicFooter(int layoutType,boolean isReload) {
         binding.elementFooter.removeAllViews();
         footerLayout=layoutType;
         if (layoutType== FooterModel.LAYOUT_FRAME_ONE) {
             oneBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_one, null, false);
             binding.elementFooter.addView(oneBinding.getRoot());
+
             loadFrameFirstData();
         }
         else if (layoutType== FooterModel.LAYOUT_FRAME_TWO) {
@@ -1190,33 +1285,82 @@
             fourBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_four, null, false);
             binding.elementFooter.addView(fourBinding.getRoot());
             loadFrameFourData();
-        }
-        else if (layoutType== FooterModel.LAYOUT_FRAME_FIVE) {
+        } else if (layoutType == FooterModel.LAYOUT_FRAME_FIVE) {
             fiveBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_five, null, false);
             binding.elementFooter.addView(fiveBinding.getRoot());
             loadFrameFiveData();
-        }
-        else if (layoutType== FooterModel.LAYOUT_FRAME_SIX) {
+        } else if (layoutType == FooterModel.LAYOUT_FRAME_SIX) {
             sixBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_six, null, false);
             binding.elementFooter.addView(sixBinding.getRoot());
 
         }
+        loadSameColorToBackgroundAndTextAgain();
+        changeBorderColorAsFrame();
+
+
+        Log.e("NewColor", colorCodeForBackground + " " + colorCodeForTextColor);
+    }
+
+    public void changeBorderColorAsFrame(){
+        GradientDrawable drawable = (GradientDrawable) binding.elementCustomFrame.getBackground();
+        drawable.setStroke((int) convertDpToPx(borderSize), colorCodeForBackground);
+    }
+
+    @Override
+    public void onColorItemChange(int colorCode) {
     }
 
-    @Override public void onColorItemChange(int colorCode) {
+    @Override
+    public void onColorSelected(int dialogId, int colorCode) {
+
     }
-    @Override public void onColorSelected(int dialogId, int colorCode) {
 
+    public void loadSameColorToBackgroundAndTextAgain() {
+
+        if (colorCodeForTextColor!=0) {
+            if (footerLayout == 1) {
+                ChangeTextColorForFrameOne(colorCodeForTextColor);
+            } else if (footerLayout == 2) {
+                ChangeTextColorForFrameTwo(colorCodeForTextColor);
+            } else if (footerLayout == 3) {
+                ChangeTextColorForFrameThree(colorCodeForTextColor);
+            } else if (footerLayout == 4) {
+                ChangeTextColorForFrameFour(colorCodeForTextColor);
+            } else if (footerLayout == 5) {
+                ChangeTextColorForFrameFive(colorCodeForTextColor);
+            } else if (footerLayout == 6) {
+                ChangeTextColorForFrameSix(colorCodeForTextColor);
+            }
+        }
+
+
+        if (footerLayout == 1) {
+            ChangeBackgroundColorForFrameOne(colorCodeForBackground);
+        } else if (footerLayout == 2) {
+            ChangeBackgroundColorForFrameTwo(colorCodeForBackground);
+        } else if (footerLayout == 3) {
+
+        } else if (footerLayout == 4) {
+            ChangeBackgroundColorForFrameFour(colorCodeForBackground);
+        } else if (footerLayout == 5) {
+            ChangeBackgroundColorForFrameFive(colorCodeForBackground);
+        } else if (footerLayout == 6) {
+            ChangeBackgroundColorForFrameSix(colorCodeForBackground);
+        }
+
+        changeBorderColorAsFrame();
     }
 
     //for Text Color change
-    @Override public void onColorChanged(int colorCode) {
-        if (editorFragment==4) {
-            if (footerLayout==1){
+    @Override
+    public void onColorChanged(int colorCode) {
+        if (editorFragment == 4) {
+            colorCodeForTextColor = colorCode;
+            if (footerLayout == 1) {
                 ChangeTextColorForFrameOne(colorCode);
-            }else if (footerLayout==2){
+            } else if (footerLayout == 2) {
                 ChangeTextColorForFrameTwo(colorCode);
-            }else if (footerLayout==3){
+            } else if (footerLayout == 3) {
                 ChangeTextColorForFrameThree(colorCode);
             }else if (footerLayout==4){
                 ChangeTextColorForFrameFour(colorCode);
@@ -1232,6 +1376,7 @@
     //for background color change
     @Override public void onChooseColor(int colorCode) {
         if (editorFragment==3){
+            colorCodeForBackground = colorCode;
             if (footerLayout==1){
                 ChangeBackgroundColorForFrameOne(colorCode);
             }else if (footerLayout==2){
@@ -1240,24 +1385,41 @@
 
             }else if (footerLayout==4){
                 ChangeBackgroundColorForFrameFour(colorCode);
-            }else if (footerLayout==5){
+            } else if (footerLayout == 5) {
                 ChangeBackgroundColorForFrameFive(colorCode);
-            }else if (footerLayout==6){
+            } else if (footerLayout == 6) {
                 ChangeBackgroundColorForFrameSix(colorCode);
             }
+            GradientDrawable drawable = (GradientDrawable) binding.elementCustomFrame.getBackground();
+            drawable.setStroke((int) convertDpToPx(borderSize), colorCodeForBackground);
         }
+
+    }
 
+    //on border size change
+    int borderSize;
+    @Override
+    public void onBorderSizeChange(int size) {
+        borderSize=size;
+        GradientDrawable drawable = (GradientDrawable) binding.elementCustomFrame.getBackground();
+        drawable.setStroke((int) convertDpToPx(size), colorCodeForBackground);
     }
+
+    private int convertDpToPx(int dp) {
+        return (int) (dp * Resources.getSystem().getDisplayMetrics().density);
+    }
+
 
     //for font change
-    @Override public void onFontChangeListenert(String Font) {
-            if (footerLayout==1){
-                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);
-                oneBinding.gmailText.setTypeface(custom_font);
-                oneBinding.contactText.setTypeface(custom_font);
-                 oneBinding.locationText.setTypeface(custom_font);
-            }else if (footerLayout==2){
-                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);
+    @Override
+    public void onFontChangeListenert(String Font) {
+        if (footerLayout == 1) {
+            Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);
+            oneBinding.gmailText.setTypeface(custom_font);
+            oneBinding.contactText.setTypeface(custom_font);
+            oneBinding.locationText.setTypeface(custom_font);
+        } else if (footerLayout == 2) {
+            Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);
                 twoBinding.gmailText.setTypeface(custom_font);
                 twoBinding.contactText.setTypeface(custom_font);
                 twoBinding.locationText.setTypeface(custom_font);
@@ -1550,7 +1712,6 @@
         oneBinding.gmailText.setTextColor(colodCode);
         oneBinding.contactImage.setImageTintList(ColorStateList.valueOf(colodCode));
         oneBinding.contactText.setTextColor(colodCode);
-
     }
 
     public void ChangeBackgroundColorForFrameTwo(int colorCode) {
@@ -1764,6 +1925,32 @@
         }
     }
 
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
     //to handle click and drag listener
     private class SingleTapConfirm extends GestureDetector.SimpleOnGestureListener {
         @Override
@@ -1902,7 +2089,7 @@
             request.addMultipartParameter("is_custom", "0");
         }
         request.addMultipartParameter("type", String.valueOf(download));
-
+        Log.e("Request",gson.toJson(request));
         request.build().setUploadProgressListener(new UploadProgressListener() {
             @Override
             public void onProgress(long bytesUploaded, long totalBytes) {
@@ -1969,7 +2156,7 @@
                                 askForDownloadImage();
                             else {
                                 requestAgain();
-                                saveImageToGallery(true);
+                                saveImageToGallery(true,false);
 
                             }
 
Index: app/src/main/java/com/app/brandmania/Fragment/top/DownloadListTab.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Fragment.top;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Adapter.DownloadFavoriteAdapter;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Model.DownloadFavoriteItemList;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.DownloadlisTabBinding;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class DownloadListTab extends Fragment {\r\n    Activity act;\r\n    private DownloadlisTabBinding binding;\r\n    ArrayList<DownloadFavoriteItemList> menuModels = new ArrayList<>();\r\n    PreafManager preafManager;\r\n    DownloadFavoriteItemList downloadingOjectttt;\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        act = getActivity();\r\n        binding= DataBindingUtil.inflate(inflater,R.layout.downloadlis_tab,container,false);\r\n        preafManager=new PreafManager(act);\r\n\r\n        binding.swipeContainer.setColorSchemeResources(R.color.colorPrimary,\r\n                R.color.colorsecond,\r\n                R.color.colorthird);\r\n        binding.swipeContainer.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n\r\n                startAnimation();\r\n\r\n                getDownloadListItem();\r\n                // startAnimation();\r\n                //getNotice(startDate, endDate);\r\n\r\n            }\r\n        });\r\n\r\n\r\n        getDownloadListItem();\r\n        return binding.getRoot();\r\n    }\r\n    private void startAnimation() {\r\n        binding.shimmerViewContainer.startShimmer();\r\n        binding.shimmerViewContainer.setVisibility(View.VISIBLE);\r\n        binding.DownloadRecycler.setVisibility(View.GONE);\r\n\r\n    }\r\n    DownloadFavoriteItemList downloadingOject;\r\n    public void setAdapter() {\r\n        DownloadFavoriteAdapter menuAddaptor = new DownloadFavoriteAdapter(menuModels, act);\r\n        DownloadFavoriteAdapter.onShareImageClick onShareImageClick=new DownloadFavoriteAdapter.onShareImageClick() {\r\n            @Override\r\n            public void onShareClick(DownloadFavoriteItemList favoriteItemList, int position) {\r\n                requestAgain();\r\n                downloadingOject = favoriteItemList;\r\n                if (!downloadingOject.isCustom())\r\n                    new DownloadImageTaskFrame(favoriteItemList.getFrame()).execute(favoriteItemList.getFrame());\r\n                else\r\n                    new DownloadImageTaskImage(downloadingOject.getImage()).execute(downloadingOject.getImage());\r\n            }\r\n        };\r\n        menuAddaptor.setOnShareImageClick(onShareImageClick);\r\n        RecyclerView.LayoutManager mLayoutManager = new LinearLayoutManager(getActivity(),RecyclerView.VERTICAL,false);\r\n        binding.DownloadRecycler.setLayoutManager(mLayoutManager);\r\n        binding.DownloadRecycler.setHasFixedSize(true);\r\n        binding.DownloadRecycler.setAdapter(menuAddaptor);\r\n    }\r\n    private void requestAgain() {\r\n        ActivityCompat.requestPermissions(act,\r\n                new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                        Manifest.permission.READ_EXTERNAL_STORAGE},\r\n                CodeReUse.ASK_PERMISSSION);\r\n    }\r\n    private class DownloadImageTaskFrame extends AsyncTask<String, Void, BitmapDrawable> {\r\n        String url;\r\n        public DownloadImageTaskFrame(String url) {\r\n            this.url = url;\r\n        }\r\n        protected BitmapDrawable doInBackground(String... urls) {\r\n            String urldisplay = urls[0];\r\n            Bitmap mIcon11 = null;\r\n            try {\r\n                Log.e(\"ErrorImage\", url);\r\n                InputStream in = new java.net.URL(url).openStream();\r\n                mIcon11 = BitmapFactory.decodeStream(in);\r\n            } catch (Exception e) {\r\n                Log.e(\"ErrorImage\", e.getMessage());\r\n                e.printStackTrace();\r\n            }\r\n            return new BitmapDrawable(getResources(), mIcon11);\r\n        }\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            super.onPreExecute();\r\n            Utility.showProgress(act);\r\n        }\r\n\r\n        protected void onPostExecute(BitmapDrawable result) {\r\n            //bmImage.setImageBitmap(result);\r\n            FrameDrawbable=result;\r\n\r\n            new DownloadImageTaskImage(downloadingOject.getImage()).execute(downloadingOject.getImage());\r\n\r\n        }\r\n    }\r\n    private class DownloadImageTaskImage extends AsyncTask<String, Void, BitmapDrawable> {\r\n        String url;\r\n        public DownloadImageTaskImage(String url) {\r\n            this.url = url;\r\n        }\r\n        protected BitmapDrawable doInBackground(String... urls) {\r\n            String urldisplay = urls[0];\r\n            Bitmap mIcon11 = null;\r\n            try {\r\n                Log.e(\"ErrorImage\", url);\r\n                InputStream in = new java.net.URL(url).openStream();\r\n                mIcon11 = BitmapFactory.decodeStream(in);\r\n            } catch (Exception e) {\r\n                Log.e(\"ErrorImage\", e.getMessage());\r\n                e.printStackTrace();\r\n            }\r\n            return new BitmapDrawable(getResources(), mIcon11);\r\n        }\r\n        protected void onPostExecute(BitmapDrawable result) {\r\n            backgroundImageDrable=result;\r\n            startsShare();\r\n            Utility.dismissProgress();\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n    //For CreatFileeDisc For Download Image.........................\r\n    private File getDisc() {\r\n        File file = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM);\r\n        return new File(file, \"Image Demo\");\r\n    }\r\n    File new_file;\r\n    BitmapDrawable FrameDrawbable;\r\n    BitmapDrawable backgroundImageDrable;\r\n\r\n    public void startShare(File new_file) {\r\n\r\n        Uri uri= Uri.parse(MediaStore.Images.Media.insertImage(getActivity().getContentResolver(), BitmapFactory.decodeFile(new_file.getPath()),null,null));\r\n        Intent share = new Intent(Intent.ACTION_SEND);\r\n        share.setType(\"image/*\");\r\n        share.putExtra(Intent.EXTRA_STREAM, uri);\r\n        startActivity(Intent.createChooser(share, \"Share Image\"));\r\n\r\n    }\r\n\r\n\r\n    public void startsShare() {\r\n        Drawable d = FrameDrawbable;\r\n        Drawable ImageDrawable = backgroundImageDrable;\r\n\r\n        if (downloadingOject.isCustom()) {\r\n            d = backgroundImageDrable;\r\n        }\r\n\r\n        Bitmap merged = Bitmap.createBitmap(1000, 1000, Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(merged);\r\n        d.setBounds(0, 0, 1000, 1000);\r\n        ImageDrawable.setBounds(0, 0, 1000, 1000);\r\n        ImageDrawable.draw(canvas);\r\n        d.draw(canvas);\r\n\r\n        FileOutputStream fileOutputStream = null;\r\n        File file = getDisc();\r\n        if (!file.exists() && !file.mkdirs()) {\r\n            return;\r\n        }\r\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyymmsshhmmss\");\r\n        String date = simpleDateFormat.format(new Date());\r\n        String name = \"Img\" + date + \".jpg\";\r\n        String file_name = file.getAbsolutePath() + \"/\" + name;\r\n        new_file = new File(file_name);\r\n        try {\r\n            fileOutputStream = new FileOutputStream(new_file);\r\n            Bitmap bitmap = merged;//viewToBitmap(binding.allSetImage,binding.allSetImage.getWidth(),binding.recoImage.getHeight());\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fileOutputStream);\r\n\r\n            fileOutputStream.flush();\r\n            fileOutputStream.close();\r\n            startShare(new_file);\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n    }\r\n\r\n    private void getDownloadListItem() {\r\n\r\n        Utility.Log(\"API : \", APIs.GET_DOWNLOADLIST_ITEM);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_DOWNLOADLIST_ITEM , new Response.Listener<String>() {\r\n            @SuppressLint(\"ResourceAsColor\")\r\n            @Override\r\n            public void onResponse(String response) {\r\n                binding.swipeContainer.setRefreshing(false);\r\n                Utility.Log(\"GET_DOWNLOADLIST_ITEM : \", response);\r\n\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n\r\n                    menuModels = ResponseHandler.HandleGetIDownloadFavoritList(jsonObject);\r\n\r\n                    if (menuModels != null && menuModels.size() != 0) {\r\n                        setAdapter();\r\n                        binding.shimmerViewContainer.stopShimmer();\r\n                        binding.shimmerViewContainer.setVisibility(View.GONE);\r\n                        binding.DownloadRecycler.setVisibility(View.VISIBLE);\r\n                        binding.emptyStateLayout.setVisibility(View.GONE);\r\n                    }   if (menuModels == null || menuModels.size() == 0) {\r\n                        binding.emptyStateLayout.setVisibility(View.VISIBLE);\r\n\r\n                        binding.DownloadRecycler.setVisibility(View.GONE);\r\n                        binding.shimmerViewContainer.stopShimmer();\r\n                        binding.shimmerViewContainer.setVisibility(View.GONE);\r\n                    }\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        binding.swipeContainer.setRefreshing(false);\r\n                        error.printStackTrace();\r\n                        String body;\r\n                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                        Log.e(\"Load-Get_Exam \", body);\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                params.put(\"id\",preafManager.getActiveBrand().getId());\r\n//                if (imageList != null)\r\n//                    params.put(\"image_category_id\", imageList.getId());\r\n//                else\r\n//                    params.put(\"image_category_id\", selectedObject.getId());\r\n\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Fragment/top/DownloadListTab.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Fragment/top/DownloadListTab.java	(date 1609241629023)
@@ -7,7 +7,9 @@
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.Canvas;
+import android.graphics.Color;
 import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.ColorDrawable;
 import android.graphics.drawable.Drawable;
 import android.net.Uri;
 import android.os.AsyncTask;
@@ -33,6 +35,7 @@
 import com.android.volley.VolleyError;
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
+import com.app.brandmania.Activity.PackageActivity;
 import com.app.brandmania.Adapter.DownloadFavoriteAdapter;
 import com.app.brandmania.Common.PreafManager;
 import com.app.brandmania.Common.ResponseHandler;
@@ -41,8 +44,10 @@
 import com.app.brandmania.Utils.APIs;
 import com.app.brandmania.Utils.CodeReUse;
 import com.app.brandmania.Utils.Utility;
+import com.app.brandmania.databinding.DialogUpgradeDownloadLimitExpireBinding;
 import com.app.brandmania.databinding.DownloadlisTabBinding;
 
+import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
 
@@ -105,11 +110,9 @@
             @Override
             public void onShareClick(DownloadFavoriteItemList favoriteItemList, int position) {
                 requestAgain();
+                getImageDownloadRights();
                 downloadingOject = favoriteItemList;
-                if (!downloadingOject.isCustom())
-                    new DownloadImageTaskFrame(favoriteItemList.getFrame()).execute(favoriteItemList.getFrame());
-                else
-                    new DownloadImageTaskImage(downloadingOject.getImage()).execute(downloadingOject.getImage());
+
             }
         };
         menuAddaptor.setOnShareImageClick(onShareImageClick);
@@ -146,13 +149,13 @@
         @Override
         protected void onPreExecute() {
             super.onPreExecute();
-            Utility.showProgress(act);
+            Utility.showLoadingTran(act);
         }
 
         protected void onPostExecute(BitmapDrawable result) {
             //bmImage.setImageBitmap(result);
             FrameDrawbable=result;
-
+            Utility.dismissLoadingTran();
             new DownloadImageTaskImage(downloadingOject.getImage()).execute(downloadingOject.getImage());
 
         }
@@ -178,12 +181,15 @@
         protected void onPostExecute(BitmapDrawable result) {
             backgroundImageDrable=result;
             startsShare();
-            Utility.dismissProgress();
+            Utility.dismissLoadingTran();
 
         }
 
-
-
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+            Utility.showLoadingTran(act);
+        }
     }
     //For CreatFileeDisc For Download Image.........................
     private File getDisc() {
@@ -269,13 +275,10 @@
                         binding.emptyStateLayout.setVisibility(View.GONE);
                     }   if (menuModels == null || menuModels.size() == 0) {
                         binding.emptyStateLayout.setVisibility(View.VISIBLE);
-
                         binding.DownloadRecycler.setVisibility(View.GONE);
                         binding.shimmerViewContainer.stopShimmer();
                         binding.shimmerViewContainer.setVisibility(View.GONE);
                     }
-
-
                 } catch (JSONException e) {
                     e.printStackTrace();
                 }
@@ -287,9 +290,9 @@
                     public void onErrorResponse(VolleyError error) {
                         binding.swipeContainer.setRefreshing(false);
                         error.printStackTrace();
-                        String body;
+                     /*   String body;
                         body = new String(error.networkResponse.data, StandardCharsets.UTF_8);
-                        Log.e("Load-Get_Exam ", body);
+                        Log.e("Load-Get_Exam ", body);*/
 
                     }
                 }
@@ -319,6 +322,111 @@
                 Utility.Log("POSTED-PARAMS-", params.toString());
                 return params;
             }
+
+        };
+
+        RequestQueue queue = Volley.newRequestQueue(act);
+        queue.add(stringRequest);
+    }
+
+    //show dialog for upgrading package for using all 6 frames
+    public DialogUpgradeDownloadLimitExpireBinding expireBinding;
+
+    private void downloadLimitExpireDialog() {
+        expireBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.dialog_upgrade_download_limit_expire, null, false);
+        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(act, R.style.MyAlertDialogStyle_extend);
+        builder.setView(expireBinding.getRoot());
+        androidx.appcompat.app.AlertDialog alertDialog = builder.create();
+        alertDialog.setContentView(expireBinding.getRoot());
+
+        expireBinding.viewPackage.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                alertDialog.dismiss();
+                Intent intent = new Intent(act, PackageActivity.class);
+                act.startActivity(intent);
+                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);
+            }
+        });
+        expireBinding.closeBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                alertDialog.dismiss();
+            }
+        });
+
+        alertDialog.setCancelable(false);
+        alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
+        alertDialog.show();
+
+    }
+
+    //api for access rights
+    private void getImageDownloadRights() {
+        Utility.showLoadingTran(act);
+        Utility.Log("API : ", APIs.CUSTOM_FRAME_ACCESS);
+        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.CUSTOM_FRAME_ACCESS, new Response.Listener<String>() {
+            @Override
+            public void onResponse(String response) {
+                Utility.dismissLoadingTran();
+                Utility.Log("Access-Rights-Response:", response);
+                JSONObject respJson = ResponseHandler.createJsonObject(response);
+                if (ResponseHandler.getBool(respJson, "status")) {
+                    JSONArray dataJson = ResponseHandler.getJSONArray(respJson, "data");
+                    try {
+                        String frameCount = ResponseHandler.getString(dataJson.getJSONObject(0), "frame_counter").equals("") ? "0" : ResponseHandler.getString(dataJson.getJSONObject(0), "frame_counter");
+                        //FrameCountForDownload = Integer.parseInt(frameCount);
+                        if (ResponseHandler.getBool(dataJson.getJSONObject(0), "status")) {
+                            if (!downloadingOject.isCustom())
+                                new DownloadImageTaskFrame(downloadingOject.getFrame()).execute(downloadingOject.getFrame());
+                            else
+                                new DownloadImageTaskImage(downloadingOject.getImage()).execute(downloadingOject.getImage());
+                        } else {
+                          //  canDownload = false;
+                            downloadLimitExpireDialog();
+                            //Toast.makeText(act, "You can't download image bcoz your limit get expire for one day", Toast.LENGTH_SHORT).show();
+                        }
+                    } catch (JSONException e) {
+                        e.printStackTrace();
+                    }
+
+                } else {
+
+                }
+
+            }
+        },
+                new Response.ErrorListener() {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        Utility.dismissLoadingTran();
+                        error.printStackTrace();
+//                        String body;
+//                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);
+//                        Log.e("Load-Get_Exam ", body);
+
+                    }
+                }
+        ) {
+            /**
+             * Passing some request headers*
+             */
+            @Override
+            public Map<String, String> getHeaders() throws AuthFailureError {
+                Map<String, String> params = new HashMap<String, String>();
+                params.put("Accept", "application/x-www-form-urlencoded");//application/json
+                params.put("Content-Type", "application/x-www-form-urlencoded");
+                params.put("Authorization", "Bearer" + preafManager.getUserToken());
+                return params;
+            }
+
+            @Override
+            protected Map<String, String> getParams() {
+                Map<String, String> params = new HashMap<>();
+                params.put("brand_id", preafManager.getActiveBrand().getId());
+                Utility.Log("Params", params.toString());
+                return params;
+            }
 
         };
 
Index: app/src/main/res/layout/color_tab.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n<RelativeLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:visibility=\"gone\"\r\n        android:id=\"@+id/colorRecycler\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n    </androidx.recyclerview.widget.RecyclerView>\r\n\r\n    <com.jaredrummler.android.colorpicker.ColorPickerView\r\n         android:id=\"@+id/colorPickerView\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"/>\r\n    <TextView\r\n        android:backgroundTint=\"@color/colorthird\"\r\n        android:background=\"@drawable/buttoncornar\"\r\n        android:id=\"@+id/chooseColorTxt\"\r\n        android:visibility=\"gone\"\r\n        android:gravity=\"center\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"@dimen/_26sdp\"\r\n        android:paddingStart=\"@dimen/_15sdp\"\r\n        android:paddingEnd=\"@dimen/_15sdp\"\r\n        android:layout_marginTop=\"@dimen/_10sdp\"\r\n        android:fontFamily=\"@font/inter_regular\"\r\n        android:text=\"Choose Color\"\r\n        android:textColor=\"#FFF\"\r\n        android:textAlignment=\"center\"\r\n        android:textAllCaps=\"false\"\r\n        android:textSize=\"@dimen/_10sdp\"\r\n        />\r\n\r\n</RelativeLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/color_tab.xml	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/res/layout/color_tab.xml	(date 1609238031111)
@@ -1,20 +1,48 @@
 <?xml version="1.0" encoding="utf-8"?>
-<layout xmlns:app="http://schemas.android.com/apk/res-auto">
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent"
+<layout>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:paddingStart="@dimen/_5sdp"
+    android:paddingTop="@dimen/_7sdp"
+    android:paddingEnd="@dimen/_5sdp"
     android:layout_height="match_parent">
 
     <androidx.recyclerview.widget.RecyclerView
         android:visibility="gone"
         android:id="@+id/colorRecycler"
         android:layout_width="match_parent"
-        android:layout_height="match_parent">
-    </androidx.recyclerview.widget.RecyclerView>
+        android:layout_height="match_parent" />
+
+    <CheckBox
+        android:id="@+id/checkbox"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:buttonTint="@color/colorthird"
+        android:fontFamily="@font/inter_regular"
+        android:text="Border"
+        android:textSize="@dimen/_12sdp" />
+
+    <SeekBar
+        android:background="@drawable/font_box_corner"
+        android:id="@+id/seekBar"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/checkbox"
+        android:paddingTop="@dimen/_5sdp"
+        android:layout_marginStart="@dimen/_5sdp"
+        android:layout_marginEnd="@dimen/_5sdp"
+        android:paddingBottom="@dimen/_5sdp"
+        android:theme="@style/SeekBarColor"
+        android:visibility="visible" />
+
 
     <com.jaredrummler.android.colorpicker.ColorPickerView
-         android:id="@+id/colorPickerView"
+        android:id="@+id/colorPickerView"
+        android:layout_height="wrap_content"
+        android:layout_below="@+id/seekBar"
         android:layout_width="match_parent"
-        android:layout_height="wrap_content"/>
+        android:layout_marginTop="@dimen/_5sdp" />
+
     <TextView
         android:backgroundTint="@color/colorthird"
         android:background="@drawable/buttoncornar"
Index: app/src/main/java/com/app/brandmania/Activity/OnlyTextEditorActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.app.Activity;\r\nimport android.graphics.Color;\r\nimport android.graphics.Paint;\r\nimport android.graphics.Typeface;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.TextView;\r\n\r\nimport com.app.brandmania.Adapter.ColorAndEditTabAdapter;\r\nimport com.app.brandmania.Adapter.OnlyEditTabAdapter;\r\nimport com.app.brandmania.Interface.IColorChange;\r\nimport com.app.brandmania.Interface.ITextSizeEvent;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.app.brandmania.Adapter.FrameInterFace;\r\nimport com.app.brandmania.Adapter.ItemeInterFace;\r\nimport com.app.brandmania.Adapter.MultiListItem;\r\n\r\nimport com.app.brandmania.Interface.IItaliTextEvent;\r\nimport com.app.brandmania.Interface.ITextBoldEvent;\r\nimport com.app.brandmania.Interface.ITextColorChangeEvent;\r\nimport com.app.brandmania.Interface.IUnderLineTextEvent;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.IFontChangeEvent;\r\nimport com.app.brandmania.databinding.ActivityOnlyTextEditorBinding;\r\nimport com.jaredrummler.android.colorpicker.ColorPickerDialogListener;\r\nimport com.jaredrummler.android.colorpicker.ColorPickerView;\r\n\r\n\r\nimport static com.app.brandmania.Utils.Utility.Log;\r\n\r\npublic class OnlyTextEditorActivity extends AppCompatActivity implements ItemeInterFace, FrameInterFace, ITextSizeEvent,ITextColorChangeEvent, IFontChangeEvent, ITextBoldEvent, IItaliTextEvent, IUnderLineTextEvent, IColorChange, ColorPickerDialogListener, ColorPickerView.OnColorChangedListener {\r\n    Activity act;\r\n    TextView selectedForEdit;\r\n    View selectedForBackgroundChange;\r\n    int editorFragment;\r\n\r\n    int FramePrimaryOrSecondary=0;\r\n    private ActivityOnlyTextEditorBinding binding;\r\n    @Override protected void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act=this;\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        binding= DataBindingUtil.setContentView(act,R.layout.activity_only_text_editor);\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Background\")));\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(\"Frame\"));\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Texture\")));\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Text\")));\r\n        binding.tabLayout.setTabTextColors(Color.parseColor(\"#727272\"), Color.parseColor(\"#ad2753\"));\r\n        binding.tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);\r\n        final OnlyEditTabAdapter adapter = new OnlyEditTabAdapter(act, getSupportFragmentManager(), binding.tabLayout.getTabCount());\r\n        binding.viewPager.setAdapter(adapter);\r\n        binding.viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(binding.tabLayout));\r\n        binding.textEdit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                binding.clorframeLayout.setVisibility(View.VISIBLE);\r\n                binding.viewPager.setCurrentItem(3);\r\n            }\r\n        });\r\n\r\n\r\n        binding.tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n                binding.viewPager.setCurrentItem(tab.getPosition());\r\n                editorFragment=tab.getPosition();\r\n            }\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n            }\r\n\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n\r\n            }\r\n        });\r\n\r\n        binding.main.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (binding.clorframeLayout.getVisibility()==View.GONE)\r\n                {\r\n                    binding.clorframeLayout.setVisibility(View.VISIBLE);\r\n                    binding.textClick.setVisibility(View.GONE);\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n        binding.textEdit.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View view, boolean b) {\r\n                if (b==true)\r\n                {\r\n                    selectedForEdit=binding.textEdit;\r\n                    binding.viewPager.setCurrentItem(3);\r\n                    editorFragment=3;\r\n                }\r\n            }\r\n        });\r\n        binding.backImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                FramePrimaryOrSecondary=0;\r\n                selectedForBackgroundChange=binding.backImage;\r\n                binding.viewPager.setCurrentItem(0);\r\n            }\r\n        });\r\n\r\n    }\r\n    public static String convertFirstUpper(String str) {\r\n\r\n        if (str == null || str.isEmpty()) {\r\n            return str;\r\n        }\r\n        Log(\"FirstLetter\", str.substring(0, 1) + \"    \" + str.substring(1));\r\n        return str.substring(0, 1).toUpperCase() + str.substring(1);\r\n    }\r\n    @Override public void onItemSelection(int position, MultiListItem listModel) {\r\n        binding.frameImage.setImageResource(listModel.getImage());\r\n    }\r\n    @Override public void onFrameItemSelection(int position, MultiListItem listModel) {\r\n        binding.frameImage.setImageResource(listModel.getImage());\r\n    }\r\n    @Override public void onColorItemChange(int colorcode) {\r\n        binding.textEdit.setTextColor(colorcode);\r\n    }\r\n    @Override public void onFontChangeListenert(String Font) {\r\n        Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n        binding.textEdit.setTypeface(custom_font);\r\n    }\r\n    @Override public void onBoldTextChange(boolean Bold) {\r\n        if (Bold) {\r\n          //  Toast.makeText(act,\"true\",Toast.LENGTH_SHORT).show();\r\n            binding.textEdit.setTypeface(  binding.textEdit.getTypeface(), Typeface.BOLD);\r\n\r\n        }else {\r\n          //  Toast.makeText(act,\"false\",Toast.LENGTH_SHORT).show();\r\n            binding.textEdit.setTypeface(null, Typeface.NORMAL);\r\n\r\n        }\r\n\r\n    }\r\n    @Override public void onItalicTextChange(boolean Italic) {\r\n        if (Italic) {\r\n            //Toast.makeText(act,\"true\",Toast.LENGTH_SHORT).show();\r\n            binding.textEdit.setTypeface(  binding.textEdit.getTypeface(), Typeface.ITALIC);\r\n\r\n        }else {\r\n           // Toast.makeText(act,\"false\",Toast.LENGTH_SHORT).show();\r\n            binding.textEdit.setTypeface(null, Typeface.NORMAL);\r\n\r\n        }\r\n    }\r\n    @Override public void onUnderLineItalic(boolean Left) {\r\n        if (Left) {\r\n          //  Toast.makeText(act,\"true\",Toast.LENGTH_SHORT).show();\r\n            binding.textEdit.setPaintFlags( binding.textEdit.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n        }\r\n        else\r\n        {\r\n           // Toast.makeText(act,\"false\",Toast.LENGTH_SHORT).show();\r\n          //  .setTypeface(null, Typeface.NORMAL);\r\n            binding.textEdit.setPaintFlags(0);\r\n        }\r\n    }\r\n    @Override public void onChooseColor(int colorCode) {\r\n        if (editorFragment==3 && selectedForEdit!=null) {\r\n            selectedForEdit.setTextColor(colorCode);\r\n        }\r\n        if (editorFragment==0 && selectedForBackgroundChange!=null){\r\n            if (FramePrimaryOrSecondary==0){\r\n                binding.backImage.setBackgroundColor(colorCode);\r\n            }\r\n            selectedForBackgroundChange.setBackgroundColor(colorCode);\r\n        }\r\n    }\r\n    @Override public void onColorChanged(int colorCode) {\r\n        if (editorFragment==3 && selectedForEdit!=null) {\r\n            selectedForEdit.setTextColor(colorCode);\r\n        }\r\n        if (editorFragment==0 && selectedForBackgroundChange!=null){\r\n            if (FramePrimaryOrSecondary==0){\r\n                binding.backImage.setBackgroundColor(colorCode);\r\n            }\r\n            selectedForBackgroundChange.setBackgroundColor(colorCode);\r\n        }\r\n    }\r\n    @Override public void onColorSelected(int dialogId, int colorCode) {\r\n        if (editorFragment==3 && selectedForEdit!=null) {\r\n            selectedForEdit.setTextColor(colorCode);\r\n        }\r\n        if (editorFragment==0 && selectedForBackgroundChange!=null){\r\n            if (FramePrimaryOrSecondary==0){\r\n                binding.backImage.setBackgroundColor(colorCode);\r\n            }\r\n            selectedForBackgroundChange.setBackgroundColor(colorCode);\r\n        }\r\n    }\r\n    @Override public void onDialogDismissed(int dialogId) {\r\n\r\n    }\r\n    @Override public void onfontSize(int textsize) {\r\n\r\n        binding.textEdit.setTextSize(textsize);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/OnlyTextEditorActivity.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Activity/OnlyTextEditorActivity.java	(date 1609237932817)
@@ -185,6 +185,12 @@
             selectedForBackgroundChange.setBackgroundColor(colorCode);
         }
     }
+
+    @Override
+    public void onBorderSizeChange(int size) {
+
+    }
+
     @Override public void onColorChanged(int colorCode) {
         if (editorFragment==3 && selectedForEdit!=null) {
             selectedForEdit.setTextColor(colorCode);
Index: app/src/main/java/com/app/brandmania/Activity/ColorAndTextEditActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Color;\r\nimport android.graphics.Matrix;\r\nimport android.graphics.Paint;\r\nimport android.graphics.PointF;\r\nimport android.graphics.Typeface;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport android.view.GestureDetector;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.WindowManager;\r\nimport android.view.animation.LinearInterpolator;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.app.brandmania.Adapter.IImageFromGalary;\r\nimport com.app.brandmania.Adapter.ColorAndEditTabAdapter;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Interface.IColorChange;\r\nimport com.app.brandmania.Interface.IItaliTextEvent;\r\nimport com.app.brandmania.Interface.ITextBoldEvent;\r\nimport com.app.brandmania.Interface.ITextSizeEvent;\r\nimport com.app.brandmania.Interface.IUnderLineTextEvent;\r\nimport com.app.brandmania.Model.ImageFromGalaryModel;\r\nimport com.app.brandmania.Utils.IFontChangeEvent;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.app.brandmania.Adapter.ItemeInterFace;\r\nimport com.app.brandmania.Adapter.MultiListItem;\r\nimport com.app.brandmania.Interface.ITextColorChangeEvent;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.databinding.ActivityColorAndTextEditBinding;\r\nimport com.jaredrummler.android.colorpicker.ColorPickerDialogListener;\r\nimport com.jaredrummler.android.colorpicker.ColorPickerView;\r\n\r\nimport java.io.FileNotFoundException;\r\nimport java.io.InputStream;\r\n\r\npublic class ColorAndTextEditActivity extends BaseActivity implements IColorChange,ItemeInterFace, ITextBoldEvent, IItaliTextEvent, IUnderLineTextEvent, ITextSizeEvent, IImageFromGalary,ColorPickerDialogListener, ColorPickerView.OnColorChangedListener,View.OnTouchListener,ITextColorChangeEvent, IFontChangeEvent {\r\n\r\n    Activity act;\r\n    private ActivityColorAndTextEditBinding binding;\r\n    TextView selectedForEdit;\r\n    View selectedForBackgroundChange;\r\n    int editorFragment;\r\n    Drawable yourDrawable;\r\n    int FramePrimaryOrSecondary=0;\r\n    private static final String TAG = \"Touch\";\r\n    @SuppressWarnings(\"unused\")\r\n    private static final float MIN_ZOOM = 1f, MAX_ZOOM = 1f;\r\n\r\n    Matrix matrix = new Matrix();\r\n    Matrix savedMatrix = new Matrix();\r\n\r\n    // The 3 states (events) which the user is trying to perform\r\n    static final int NONE = 0;\r\n    static final int DRAG = 1;\r\n    static final int ZOOM = 2;\r\n    int mode = NONE;\r\n\r\n    // these PointF objects are used to record the point(s) the user is touching\r\n    PointF start = new PointF();\r\n    PointF mid = new PointF();\r\n    float oldDist = 1f;\r\n    float scalediff;\r\n    private float d = 0f;\r\n    private float newRot = 0f;\r\n\r\n\r\n\r\n\r\n\r\n\r\n    private int _xDelta;\r\n    private int _yDelta;\r\n    EditText myEditText;\r\n    GestureDetector gestureDetector;\r\n    @SuppressLint(\"ResourceAsColor\")\r\n    @Override public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_color_and_text_edit);\r\n\r\n        init();\r\n\r\n\r\n        RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(250, 250);\r\n        layoutParams.leftMargin = 50;\r\n        layoutParams.topMargin = 50;\r\n        layoutParams.bottomMargin = -250;\r\n        layoutParams.rightMargin = -250;\r\n        binding.editableImageview.setLayoutParams(layoutParams);\r\n        binding.editableImageview.setOnTouchListener(new View.OnTouchListener() {\r\n            RelativeLayout.LayoutParams parms;\r\n            int startwidth;\r\n            int startheight;\r\n            float dx = 0, dy = 0, x = 0, y = 0;\r\n            float angle = 0;\r\n\r\n    @Override\r\n    public boolean onTouch(View view, MotionEvent motionEvent) {\r\n\r\n\r\n            final ImageView view1 = (ImageView) view;\r\n\r\n            ((BitmapDrawable) view1.getDrawable()).setAntiAlias(true);\r\n            switch (motionEvent.getAction() & MotionEvent.ACTION_MASK) {\r\n                case MotionEvent.ACTION_DOWN:\r\n\r\n                    parms = (RelativeLayout.LayoutParams) view.getLayoutParams();\r\n                    startwidth = parms.width;\r\n                    startheight = parms.height;\r\n                    dx = motionEvent.getRawX() - parms.leftMargin;\r\n                    dy = motionEvent.getRawY() - parms.topMargin;\r\n                    mode = DRAG;\r\n                    break;\r\n\r\n                case MotionEvent.ACTION_POINTER_DOWN:\r\n                    oldDist = spacing(motionEvent);\r\n                    if (oldDist > 10f) {\r\n                        mode = ZOOM;\r\n                    }\r\n\r\n                    d = rotation(motionEvent);\r\n\r\n                    break;\r\n                case MotionEvent.ACTION_UP:\r\n\r\n                    break;\r\n\r\n                case MotionEvent.ACTION_POINTER_UP:\r\n                    mode = NONE;\r\n\r\n                    break;\r\n                case MotionEvent.ACTION_MOVE:\r\n                    if (mode == DRAG) {\r\n\r\n                        x = motionEvent.getRawX();\r\n                        y = motionEvent.getRawY();\r\n\r\n                        parms.leftMargin = (int) (x - dx);\r\n                        parms.topMargin = (int) (y - dy);\r\n\r\n                        parms.rightMargin = 0;\r\n                        parms.bottomMargin = 0;\r\n                        parms.rightMargin = parms.leftMargin + (5 * parms.width);\r\n                        parms.bottomMargin = parms.topMargin + (10 * parms.height);\r\n\r\n                        view.setLayoutParams(parms);\r\n\r\n                    } else if (mode == ZOOM) {\r\n\r\n                        if (motionEvent.getPointerCount() == 2) {\r\n\r\n                            newRot = rotation(motionEvent);\r\n                            float r = newRot - d;\r\n                            angle = r;\r\n\r\n                            x = motionEvent.getRawX();\r\n                            y = motionEvent.getRawY();\r\n\r\n                            float newDist = spacing(motionEvent);\r\n                            if (newDist > 10f) {\r\n                                float scale = newDist / oldDist * view.getScaleX();\r\n                                if (scale > 0.6) {\r\n                                    scalediff = scale;\r\n                                    view.setScaleX(scale);\r\n                                    view.setScaleY(scale);\r\n\r\n                                }\r\n                            }\r\n\r\n                            view.animate().rotationBy(angle).setDuration(0).setInterpolator(new LinearInterpolator()).start();\r\n\r\n                            x = motionEvent.getRawX();\r\n                            y = motionEvent.getRawY();\r\n\r\n                            parms.leftMargin = (int) ((x - dx) + scalediff);\r\n                            parms.topMargin = (int) ((y - dy) + scalediff);\r\n\r\n                            parms.rightMargin = 0;\r\n                            parms.bottomMargin = 0;\r\n                            parms.rightMargin = parms.leftMargin + (5 * parms.width);\r\n                            parms.bottomMargin = parms.topMargin + (10 * parms.height);\r\n\r\n                            view.setLayoutParams(parms);\r\n\r\n\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            return true;\r\n\r\n        }\r\n\r\n});\r\n\r\n\r\n\r\n        gestureDetector = new GestureDetector(this, new SingleTapConfirm());\r\n\r\n        RelativeLayout mRlayout = (RelativeLayout) findViewById(R.id.main);\r\n        RelativeLayout.LayoutParams mRparams = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n        myEditText = new EditText(act,null);\r\n        myEditText.setLayoutParams(mRparams);\r\n        myEditText.setHint(R.string.enter_email_id);\r\n        myEditText.setHintTextColor(Color.parseColor(\"#CDCDCD\"));\r\n//        myEditText.setTextColor(Color.parseColor(\"#E6494848\"));\r\n        myEditText.setBackgroundTintList(ColorStateList.valueOf(Color.TRANSPARENT));\r\n        myEditText.setOnTouchListener((View.OnTouchListener) act);\r\n        mRlayout.addView(myEditText);\r\n\r\n\r\n\r\n\r\n\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Color\")));\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Image\")));\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Frame\")));\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Texture\")));\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Text\")));\r\n        binding.tabLayout.setTabTextColors(Color.parseColor(\"#727272\"), Color.parseColor(\"#ad2753\"));\r\n        binding.tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);\r\n        final ColorAndEditTabAdapter adapter = new ColorAndEditTabAdapter(act, getSupportFragmentManager(), binding.tabLayout.getTabCount());\r\n        binding.viewPager.setAdapter(adapter);\r\n        binding.viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(binding.tabLayout));\r\n\r\n\r\n\r\n        binding.tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n                binding.viewPager.setCurrentItem(tab.getPosition());\r\n                editorFragment=tab.getPosition();\r\n            }\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n            }\r\n\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n            }\r\n        });\r\n        myEditText.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View view, boolean b) {\r\n                if (b==true)\r\n                {\r\n                    selectedForEdit=myEditText;\r\n                    binding.viewPager.setCurrentItem(3);\r\n                    editorFragment=3;\r\n                }\r\n            }\r\n        });\r\n        binding.backImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                FramePrimaryOrSecondary=0;\r\n                selectedForBackgroundChange=binding.backImage;\r\n                binding.viewPager.setCurrentItem(0);\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    public static String convertFirstUpper(String str) {\r\n\r\n        if (str == null || str.isEmpty()) {\r\n            return str;\r\n        }\r\n        Utility.Log(\"FirstLetter\", str.substring(0, 1) + \"    \" + str.substring(1));\r\n        return str.substring(0, 1).toUpperCase() + str.substring(1);\r\n    }\r\n\r\n    @Override\r\n    public void onColorItemChange(int colorcode) {\r\n        myEditText.setTextColor(colorcode);\r\n    }\r\n\r\n    @Override\r\n    public void onFontChangeListenert(String Font) {\r\n        Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n        myEditText.setTypeface(custom_font);\r\n    }\r\n\r\n    private class SingleTapConfirm extends GestureDetector.SimpleOnGestureListener {\r\n\r\n        @Override\r\n        public boolean onSingleTapUp(MotionEvent event) {\r\n            return true;\r\n        }\r\n    }\r\n    @Override\r\n    public void onChooseColor(int colorCode) {\r\n        if (editorFragment==3 && selectedForEdit!=null) {\r\n            selectedForEdit.setTextColor(colorCode);\r\n        }\r\n        if (editorFragment==0 && selectedForBackgroundChange!=null){\r\n            if (FramePrimaryOrSecondary==0){\r\n                binding.backgroundClick.setVisibility(View.GONE);\r\n                binding.backImage.setBackgroundColor(colorCode);\r\n            }\r\n            selectedForBackgroundChange.setBackgroundColor(colorCode);\r\n        }\r\n    }\r\n    @Override public void onItemSelection(int position, MultiListItem listModel) {\r\n        binding.frameImage.setImageResource(listModel.getImage());\r\n    }\r\n\r\n    @Override public void onImageFromGalaryItemSelection(int position, ImageFromGalaryModel listModel) {\r\n        try {\r\n            binding.editableImageview.setVisibility(View.VISIBLE);\r\n            InputStream inputStream = getContentResolver().openInputStream(listModel.getUri());\r\n            yourDrawable = Drawable.createFromStream(inputStream, listModel.getUri().toString() );\r\n            binding.editableImageview.setImageDrawable(yourDrawable);\r\n        } catch (FileNotFoundException e) {\r\n\r\n        }\r\n    }\r\n    private void init() {\r\n    }\r\n    private float spacing(MotionEvent event) {\r\n        float x = event.getX(0) - event.getX(1);\r\n        float y = event.getY(0) - event.getY(1);\r\n        return (float) Math.sqrt(x * x + y * y);\r\n    }\r\n    private float rotation(MotionEvent event) {\r\n        double delta_x = (event.getX(0) - event.getX(1));\r\n        double delta_y = (event.getY(0) - event.getY(1));\r\n        double radians = Math.atan2(delta_y, delta_x);\r\n        return (float) Math.toDegrees(radians);\r\n    }\r\n    @Override public void onColorSelected(int dialogId, int color) {\r\n        if (editorFragment==3 && selectedForEdit!=null) {\r\n            selectedForEdit.setTextColor(color);\r\n        }\r\n        if (editorFragment==0 && selectedForBackgroundChange!=null){\r\n            if (FramePrimaryOrSecondary==0){\r\n                binding.backgroundClick.setVisibility(View.GONE);\r\n                binding.backImage.setBackgroundColor(color);\r\n            }\r\n            selectedForBackgroundChange.setBackgroundColor(color);\r\n        }\r\n    }\r\n    @Override public void onDialogDismissed(int dialogId) {\r\n\r\n    }\r\n\r\n    @Override public void onColorChanged(int newColor) {\r\n        if (editorFragment==3 && selectedForEdit!=null) {\r\n            selectedForEdit.setTextColor(newColor);\r\n        }\r\n        if (editorFragment==0 && selectedForBackgroundChange!=null){\r\n            if (FramePrimaryOrSecondary==0){\r\n                binding.backgroundClick.setVisibility(View.GONE);\r\n                binding.backImage.setBackgroundColor(newColor);\r\n            }\r\n            selectedForBackgroundChange.setBackgroundColor(newColor);\r\n        }\r\n    }\r\n    @Override public void onBoldTextChange(boolean Bold) {\r\n        if (Bold) {\r\n            //  Toast.makeText(act,\"true\",Toast.LENGTH_SHORT).show();\r\n            myEditText.setTypeface(  myEditText.getTypeface(), Typeface.BOLD);\r\n\r\n        }else {\r\n            //  Toast.makeText(act,\"false\",Toast.LENGTH_SHORT).show();\r\n            myEditText.setTypeface(null, Typeface.NORMAL);\r\n\r\n        }\r\n\r\n    }\r\n    @Override public void onItalicTextChange(boolean Italic) {\r\n        if (Italic) {\r\n            //Toast.makeText(act,\"true\",Toast.LENGTH_SHORT).show();\r\n            myEditText.setTypeface(  myEditText.getTypeface(), Typeface.ITALIC);\r\n\r\n        }else {\r\n            // Toast.makeText(act,\"false\",Toast.LENGTH_SHORT).show();\r\n            myEditText.setTypeface(null, Typeface.NORMAL);\r\n\r\n        }\r\n    }\r\n    @Override public void onUnderLineItalic(boolean Left) {\r\n        if (Left) {\r\n            //  Toast.makeText(act,\"true\",Toast.LENGTH_SHORT).show();\r\n            myEditText.setPaintFlags( myEditText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n        }\r\n        else\r\n        {\r\n            // Toast.makeText(act,\"false\",Toast.LENGTH_SHORT).show();\r\n            //  .setTypeface(null, Typeface.NORMAL);\r\n            myEditText.setPaintFlags(0);\r\n        }\r\n    }\r\n    @Override public void onfontSize(int textsize) {\r\n\r\n        myEditText.setTextSize(textsize);\r\n    }\r\n    public boolean onTouch(View view, MotionEvent event) {\r\n        if (gestureDetector.onTouchEvent(event)) {\r\n            Toast.makeText(act, \"click\", Toast.LENGTH_SHORT).show();\r\n            return true;\r\n        }else {\r\n            final int X = (int) event.getRawX();\r\n            final int Y = (int) event.getRawY();\r\n            switch (event.getAction() & MotionEvent.ACTION_MASK) {\r\n                case MotionEvent.ACTION_DOWN:\r\n                    RelativeLayout.LayoutParams lParams = (RelativeLayout.LayoutParams) view.getLayoutParams();\r\n                    _xDelta = X - lParams.leftMargin;\r\n                    _yDelta = Y - lParams.topMargin;\r\n                    break;\r\n                case MotionEvent.ACTION_UP:\r\n                    break;\r\n                case MotionEvent.ACTION_POINTER_DOWN:\r\n                    break;\r\n                case MotionEvent.ACTION_POINTER_UP:\r\n                    break;\r\n                case MotionEvent.ACTION_MOVE:\r\n                    RelativeLayout.LayoutParams mRparams = (RelativeLayout.LayoutParams) view.getLayoutParams();\r\n                    mRparams.leftMargin = X - _xDelta;\r\n                    mRparams.topMargin = Y - _yDelta;\r\n                    mRparams.rightMargin = -250;\r\n                    mRparams.bottomMargin = -250;\r\n                    view.setLayoutParams(mRparams);\r\n                    break;\r\n            }\r\n            // root.invalidate();\r\n            return false;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/ColorAndTextEditActivity.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Activity/ColorAndTextEditActivity.java	(date 1609237932836)
@@ -48,7 +48,10 @@
 import java.io.FileNotFoundException;
 import java.io.InputStream;
 
-public class ColorAndTextEditActivity extends BaseActivity implements IColorChange,ItemeInterFace, ITextBoldEvent, IItaliTextEvent, IUnderLineTextEvent, ITextSizeEvent, IImageFromGalary,ColorPickerDialogListener, ColorPickerView.OnColorChangedListener,View.OnTouchListener,ITextColorChangeEvent, IFontChangeEvent {
+public class ColorAndTextEditActivity extends BaseActivity implements IColorChange,ItemeInterFace, ITextBoldEvent,
+        IItaliTextEvent, IUnderLineTextEvent, ITextSizeEvent, IImageFromGalary,ColorPickerDialogListener,
+        ColorPickerView.OnColorChangedListener,View.OnTouchListener,ITextColorChangeEvent,
+        IFontChangeEvent {
 
     Activity act;
     private ActivityColorAndTextEditBinding binding;
@@ -324,6 +327,12 @@
             selectedForBackgroundChange.setBackgroundColor(colorCode);
         }
     }
+
+    @Override
+    public void onBorderSizeChange(int size) {
+
+    }
+
     @Override public void onItemSelection(int position, MultiListItem listModel) {
         binding.frameImage.setImageResource(listModel.getImage());
     }
Index: app/src/main/java/com/app/brandmania/Model/BrandListItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Model;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class BrandListItem {\r\n\r\n    public static final int LAYOUT_BRANDLIST=1;\r\n    public static final int LAYOUT_NOTIFICATIONlIST=2;\r\n    public static final int LAYOUT_BRANDLISTBYID=3;\r\n    public static final int LAYOUT_LOADING = 33;\r\n    ArrayList<ImageList> examTimeTables;\r\n    ArrayList<FrameItem> frame;\r\n    private int layoutType;\r\n    private String id;\r\n    private String name;\r\n    private String categoryId;\r\n    private String categoryName;\r\n    private String website;\r\n    private String email;\r\n    private String phonenumber;\r\n    private String address;\r\n    private String logo;\r\n    private String framee;\r\n    private int Image;\r\n    private String description;\r\n    private String tag;\r\n    private String status;\r\n    private String message;\r\n    private String date;\r\n    private String time;\r\n    private String is_frame;\r\n    private String frame_message;\r\n    private String frambaseyrl;\r\n    private String is_payment_pending;\r\n    private String payment_message;\r\n    private String packagename;\r\n    private String packagemessage;\r\n    private String no_of_total_image;\r\n    private String no_of_used_image;\r\n    private String no_of_frame;\r\n    private String no_of_remaining;\r\n    private String expiery_date;\r\n    private String package_id;\r\n    private String rate;\r\n    private String duration;\r\n\r\n\r\n    public BrandListItem() {\r\n    }\r\n\r\n    public ArrayList<FrameItem> getFrame() {\r\n        return frame;\r\n    }\r\n\r\n    public void setFrame(ArrayList<FrameItem> frame) {\r\n        this.frame = frame;\r\n    }\r\n\r\n    public static int getLayoutBrandlist() {\r\n        return LAYOUT_BRANDLIST;\r\n    }\r\n\r\n    public static int getLayoutNotificationlist() {\r\n        return LAYOUT_NOTIFICATIONlIST;\r\n    }\r\n\r\n    public static int getLayoutBrandlistbyid() {\r\n        return LAYOUT_BRANDLISTBYID;\r\n    }\r\n\r\n    public static int getLayoutLoading() {\r\n        return LAYOUT_LOADING;\r\n    }\r\n\r\n    public int getLayoutType() {\r\n        return layoutType;\r\n    }\r\n\r\n    public void setLayoutType(int layoutType) {\r\n        this.layoutType = layoutType;\r\n    }\r\n\r\n    public int getImage() {\r\n        return Image;\r\n    }\r\n\r\n    public void setImage(int image) {\r\n        Image = image;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n\r\n\r\n    public String getWebsite() {\r\n        return website;\r\n    }\r\n\r\n    public void setWebsite(String website) {\r\n        this.website = website;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public String getPhonenumber() {\r\n        return phonenumber;\r\n    }\r\n\r\n    public void setPhonenumber(String phonenumber) {\r\n        this.phonenumber = phonenumber;\r\n    }\r\n\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n    public String getLogo() {\r\n        return logo;\r\n    }\r\n\r\n    public void setLogo(String logo) {\r\n        this.logo = logo;\r\n    }\r\n\r\n\r\n    public String getId() {\r\n        return id;\r\n    }\r\n    public void setId(String id) {\r\n        this.id = id;\r\n    }\r\n    public String getDescription() {\r\n        return description;\r\n    }\r\n\r\n    public void setDescription(String description) {\r\n        this.description = description;\r\n    }\r\n\r\n    public String getTag() {\r\n        return tag;\r\n    }\r\n\r\n    public void setTag(String tag) {\r\n        this.tag = tag;\r\n    }\r\n\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    public void setStatus(String status) {\r\n        this.status = status;\r\n    }\r\n\r\n    public ArrayList<ImageList> getExamTimeTables() {\r\n        return examTimeTables;\r\n    }\r\n\r\n    public void setExamTimeTables(ArrayList<ImageList> examTimeTables) {\r\n        this.examTimeTables = examTimeTables;\r\n    }\r\n\r\n    public String getCategoryId() {\r\n        return categoryId;\r\n    }\r\n\r\n    public void setCategoryId(String categoryId) {\r\n        this.categoryId = categoryId;\r\n    }\r\n\r\n    public String getCategoryName() {\r\n        return categoryName;\r\n    }\r\n\r\n    public void setCategoryName(String categoryName) {\r\n        this.categoryName = categoryName;\r\n    }\r\n\r\n    public String getFramee() {\r\n        return framee;\r\n    }\r\n\r\n    public void setFramee(String framee) {\r\n        this.framee = framee;\r\n    }\r\n\r\n    public String getMessage() {\r\n        return message;\r\n    }\r\n\r\n    public void setMessage(String message) {\r\n        this.message = message;\r\n    }\r\n\r\n    public String getDate() {\r\n        return date;\r\n    }\r\n\r\n    public void setDate(String date) {\r\n        this.date = date;\r\n    }\r\n\r\n    public String getTime() {\r\n        return time;\r\n    }\r\n\r\n    public void setTime(String time) {\r\n        this.time = time;\r\n    }\r\n\r\n    public String getIs_frame() {\r\n        return is_frame;\r\n    }\r\n\r\n    public void setIs_frame(String is_frame) {\r\n        this.is_frame = is_frame;\r\n    }\r\n\r\n    public String getFrame_message() {\r\n        return frame_message;\r\n    }\r\n\r\n    public void setFrame_message(String frame_message) {\r\n        this.frame_message = frame_message;\r\n    }\r\n\r\n    public String getFrambaseyrl() {\r\n        return frambaseyrl;\r\n    }\r\n\r\n    public void setFrambaseyrl(String frambaseyrl) {\r\n        this.frambaseyrl = frambaseyrl;\r\n    }\r\n\r\n    public String getIs_payment_pending() {\r\n        return is_payment_pending;\r\n    }\r\n\r\n    public void setIs_payment_pending(String is_payment_pending) {\r\n        this.is_payment_pending = is_payment_pending;\r\n    }\r\n\r\n    public String getPayment_message() {\r\n        return payment_message;\r\n    }\r\n\r\n    public void setPayment_message(String payment_message) {\r\n        this.payment_message = payment_message;\r\n    }\r\n\r\n    public String getPackagename() {\r\n        return packagename;\r\n    }\r\n\r\n    public void setPackagename(String packagename) {\r\n        this.packagename = packagename;\r\n    }\r\n\r\n    public String getPackagemessage() {\r\n        return packagemessage;\r\n    }\r\n\r\n    public void setPackagemessage(String packagemessage) {\r\n        this.packagemessage = packagemessage;\r\n    }\r\n\r\n    public String getNo_of_total_image() {\r\n        return no_of_total_image;\r\n    }\r\n\r\n    public void setNo_of_total_image(String no_of_total_image) {\r\n        this.no_of_total_image = no_of_total_image;\r\n    }\r\n\r\n    public String getNo_of_used_image() {\r\n        return no_of_used_image;\r\n    }\r\n\r\n    public void setNo_of_used_image(String no_of_used_image) {\r\n        this.no_of_used_image = no_of_used_image;\r\n    }\r\n\r\n    public String getNo_of_frame() {\r\n        return no_of_frame;\r\n    }\r\n\r\n    public void setNo_of_frame(String no_of_frame) {\r\n        this.no_of_frame = no_of_frame;\r\n    }\r\n\r\n    public String getNo_of_remaining() {\r\n        return no_of_remaining;\r\n    }\r\n\r\n    public void setNo_of_remaining(String no_of_remaining) {\r\n        this.no_of_remaining = no_of_remaining;\r\n    }\r\n\r\n    public String getExpiery_date() {\r\n        return expiery_date;\r\n    }\r\n\r\n    public void setExpiery_date(String expiery_date) {\r\n        this.expiery_date = expiery_date;\r\n    }\r\n\r\n    public String getPackage_id() {\r\n        return package_id;\r\n    }\r\n\r\n    public void setPackage_id(String package_id) {\r\n        this.package_id = package_id;\r\n    }\r\n\r\n    public String getRate() {\r\n        return rate;\r\n    }\r\n\r\n    public void setRate(String rate) {\r\n        this.rate = rate;\r\n    }\r\n\r\n    public String getDuration() {\r\n        return duration;\r\n    }\r\n\r\n    public void setDuration(String duration) {\r\n        this.duration = duration;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Model/BrandListItem.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Model/BrandListItem.java	(date 1609249079484)
@@ -43,7 +43,16 @@
     private String package_id;
     private String rate;
     private String duration;
+    private String subscriptionDate;
 
+    public String getSubscriptionDate() {
+        return subscriptionDate;
+    }
+
+    public BrandListItem setSubscriptionDate(String subscriptionDate) {
+        this.subscriptionDate = subscriptionDate;
+        return this;
+    }
 
     public BrandListItem() {
     }
Index: app/src/main/res/layout/activity_razor_pay.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:id=\"@+id/rootBackground\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:theme=\"@style/AppTheme_material_theme\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:background=\"@color/colorNavText\">\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:visibility=\"visible\"\r\n        android:id=\"@+id/my_toolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"@dimen/_70sdp\"\r\n        android:background=\"@drawable/toolbar_background_second\"\r\n        android:elevation=\"4dp\"\r\n        android:theme=\"@style/ThemeOverlay.AppCompat.ActionBar\"\r\n        app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\">\r\n\r\n        <RelativeLayout\r\n            android:layout_marginTop=\"@dimen/_10sdp\"\r\n            android:layout_marginEnd=\"@dimen/_7sdp\"\r\n            android:id=\"@+id/main_linearlayout_title\"\r\n            android:elevation=\"0dp\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"@dimen/_70sdp\">\r\n\r\n            <ImageView\r\n                android:layout_width=\"23dp\"\r\n                android:layout_height=\"23dp\"\r\n                android:layout_alignParentStart=\"true\"\r\n                android:id=\"@+id/BackButtonMember\"\r\n                android:layout_marginStart=\"6dp\"\r\n                android:layout_marginEnd=\"10dp\"\r\n                android:background=\"@drawable/ic_left_arrow\" />\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_toEndOf=\"@+id/BackButtonMember\"\r\n                android:fontFamily=\"@font/montserrat_semibold\"\r\n                android:text=\"Payment\"\r\n                android:textColor=\"@color/colorNavText\"\r\n                android:textSize=\"@dimen/_13sdp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n        </RelativeLayout>\r\n    </androidx.appcompat.widget.Toolbar>\r\n\r\n    <ImageView\r\n        android:layout_marginStart=\"-100dp\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:src=\"@drawable/bottom\"\r\n        android:layout_width=\"@dimen/_300sdp\"\r\n        android:layout_height=\"@dimen/_300sdp\">\r\n\r\n    </ImageView>\r\n\r\n    <ScrollView\r\n        android:layout_width=\"fill_parent\"\r\n        android:clipToPadding=\"false\"\r\n        android:paddingBottom=\"@dimen/_30sdp\"\r\n        android:layout_height=\"fill_parent\"\r\n        android:layout_below=\"@+id/my_toolbar\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"@dimen/_15sdp\"\r\n            android:layout_marginEnd=\"@dimen/_15sdp\"\r\n            android:orientation=\"vertical\">\r\n\r\n\r\n\r\n            <RelativeLayout\r\n                android:layout_marginTop=\"@dimen/_15sdp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\">\r\n                <TextView\r\n                    android:id=\"@+id/packageNameTxt\"\r\n                    android:layout_alignParentStart=\"true\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/inter_bold\"\r\n                    android:text=\"Basic\"\r\n                    android:textSize=\"@dimen/_15sdp\" />\r\n                <TextView\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:layout_gravity=\"end\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:id=\"@+id/durationTxt\"\r\n                    android:layout_height=\"wrap_content\"\r\n                     android:fontFamily=\"@font/inter_regular\"\r\n                    android:textStyle=\"bold\"\r\n                    android:text=\"Per Year\"\r\n                    android:layout_alignParentBottom=\"true\"\r\n                    android:textSize=\"@dimen/_10sdp\" />\r\n            </RelativeLayout>\r\n\r\n            <View\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"1dp\"\r\n                android:layout_marginTop=\"@dimen/_5sdp\"\r\n                android:background=\"#B1B1B1\" />\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"@dimen/_7sdp\"\r\n                android:layout_marginBottom=\"@dimen/_4sdp\"\r\n                android:fontFamily=\"@font/inter_regular\"\r\n                android:text=\"Features:\"\r\n                android:textSize=\"@dimen/_11sdp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/servicesContainer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\">\r\n\r\n\r\n            </LinearLayout>\r\n\r\n\r\n            <View\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"1dp\"\r\n                android:layout_marginTop=\"@dimen/_30sdp\"\r\n                android:background=\"#B1B1B1\" />\r\n\r\n            <RelativeLayout\r\n                android:paddingTop=\"@dimen/_5sdp\"\r\n                android:paddingBottom=\"@dimen/_5sdp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/element1\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/inter_regular\"\r\n                    android:text=\"Price\"\r\n                    android:textSize=\"@dimen/_11sdp\" />\r\n\r\n                <TextView\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:id=\"@+id/actualPriceTxt\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"end\"\r\n                    android:fontFamily=\"@font/inter_regular\"\r\n                    android:text=\"299\"\r\n                    android:textSize=\"@dimen/_11sdp\" />\r\n            </RelativeLayout>\r\n\r\n            <View\r\n                android:id=\"@+id/element2\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"1dp\"\r\n                 android:background=\"#B1B1B1\" />\r\n\r\n            <RelativeLayout\r\n                android:paddingTop=\"@dimen/_5sdp\"\r\n                android:paddingBottom=\"@dimen/_5sdp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/inter_regular\"\r\n                    android:text=\"Discount\"\r\n                    android:textSize=\"@dimen/_11sdp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/discountedAmountTxt\"\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"end\"\r\n                    android:fontFamily=\"@font/inter_regular\"\r\n                    android:text=\"299\"\r\n                    android:textSize=\"@dimen/_11sdp\" />\r\n            </RelativeLayout>\r\n\r\n            <View\r\n                android:id=\"@+id/element3\"\r\n\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"1dp\"\r\n                android:background=\"#B1B1B1\" />\r\n\r\n            <RelativeLayout\r\n                android:paddingTop=\"@dimen/_5sdp\"\r\n                android:paddingBottom=\"@dimen/_5sdp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <TextView\r\n                    android:fontFamily=\"@font/inter_bold\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"Final Amount\"\r\n                    android:textSize=\"@dimen/_11sdp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/finalAmountTxt\"\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"end\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:fontFamily=\"@font/inter_bold\"\r\n                    android:text=\"299\"\r\n                    android:textSize=\"@dimen/_11sdp\" />\r\n            </RelativeLayout>\r\n\r\n\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"@dimen/_28sdp\"\r\n                android:id=\"@+id/proceedToPayment\"\r\n                android:layout_gravity=\"end\"\r\n                android:layout_marginTop=\"@dimen/_30sdp\"\r\n                android:layout_marginBottom=\"@dimen/_30sdp\"\r\n                android:background=\"@drawable/buttoncornar\"\r\n                android:backgroundTint=\"@color/colorthird\"\r\n                android:fontFamily=\"@font/inter_regular\"\r\n                android:gravity=\"center\"\r\n                android:paddingStart=\"@dimen/_25sdp\"\r\n                android:paddingEnd=\"@dimen/_25sdp\"\r\n                android:text=\"Proceed\"\r\n                android:textStyle=\"bold\"\r\n                android:textAlignment=\"center\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"#FFF\"\r\n                android:textSize=\"@dimen/_10sdp\" />\r\n\r\n\r\n\r\n        </LinearLayout>\r\n\r\n\r\n    </ScrollView>\r\n</RelativeLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_razor_pay.xml	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/res/layout/activity_razor_pay.xml	(date 1609305440385)
@@ -1,11 +1,10 @@
 <?xml version="1.0" encoding="utf-8"?>
-<layout>
+<layout xmlns:app="http://schemas.android.com/apk/res-auto">
 <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
     android:id="@+id/rootBackground"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:theme="@style/AppTheme_material_theme"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
     android:background="@color/colorNavText">
     <androidx.appcompat.widget.Toolbar
         android:visibility="visible"
@@ -82,7 +81,7 @@
                     android:layout_alignParentStart="true"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:fontFamily="@font/inter_bold"
+                    android:fontFamily="@font/montserrat_bold"
                     android:text="Basic"
                     android:textSize="@dimen/_15sdp" />
                 <TextView
@@ -91,7 +90,7 @@
                     android:layout_width="wrap_content"
                     android:id="@+id/durationTxt"
                     android:layout_height="wrap_content"
-                     android:fontFamily="@font/inter_regular"
+                     android:fontFamily="@font/montserrat_regular"
                     android:textStyle="bold"
                     android:text="Per Year"
                     android:layout_alignParentBottom="true"
@@ -109,7 +108,7 @@
                 android:layout_height="wrap_content"
                 android:layout_marginTop="@dimen/_7sdp"
                 android:layout_marginBottom="@dimen/_4sdp"
-                android:fontFamily="@font/inter_regular"
+                android:fontFamily="@font/montserrat_regular"
                 android:text="Features:"
                 android:textSize="@dimen/_11sdp"
                 android:textStyle="bold" />
@@ -124,13 +123,10 @@
             </LinearLayout>
 
 
-            <View
-                android:layout_width="match_parent"
-                android:layout_height="1dp"
-                android:layout_marginTop="@dimen/_30sdp"
-                android:background="#B1B1B1" />
+
 
             <RelativeLayout
+                android:layout_marginTop="@dimen/_20sdp"
                 android:paddingTop="@dimen/_5sdp"
                 android:paddingBottom="@dimen/_5sdp"
                 android:layout_width="match_parent"
@@ -140,7 +136,7 @@
                     android:id="@+id/element1"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:fontFamily="@font/inter_regular"
+                    android:fontFamily="@font/montserrat_regular"
                     android:text="Price"
                     android:textSize="@dimen/_11sdp" />
 
@@ -150,28 +146,72 @@
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
                     android:layout_gravity="end"
-                    android:fontFamily="@font/inter_regular"
+                    android:fontFamily="@font/montserrat_regular"
                     android:text="299"
                     android:textSize="@dimen/_11sdp" />
             </RelativeLayout>
 
-            <View
-                android:id="@+id/element2"
+
+            <RelativeLayout
+                android:visibility="gone"
+                android:id="@+id/previousLayout"
+                android:layout_marginTop="@dimen/_5sdp"
+                android:paddingTop="@dimen/_5sdp"
+                android:paddingBottom="@dimen/_5sdp"
                 android:layout_width="match_parent"
-                android:layout_height="1dp"
-                 android:background="#B1B1B1" />
+                android:layout_height="wrap_content">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:fontFamily="@font/montserrat_regular"
+                    android:text="Previous Package Amount"
+                    android:textSize="@dimen/_11sdp" />
+
+                <RelativeLayout
+                    android:layout_alignParentEnd="true"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content">
+
+                    <ImageView
+                        android:layout_centerVertical="true"
+                        android:layout_toStartOf="@+id/prevAmount"
+                        android:src="@drawable/ic_sign"
+                        android:layout_marginEnd="@dimen/_3sdp"
+                        android:layout_width="@dimen/_6sdp"
+                        android:layout_height="@dimen/_15sdp"
+                        app:tint="@color/red" />
+                    <TextView
+                        android:layout_centerVertical="true"
+                        android:id="@+id/prevAmount"
+                        android:layout_alignParentEnd="true"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_gravity="end"
+                        android:fontFamily="@font/montserrat_regular"
+                        android:text="299"
+                        android:textSize="@dimen/_11sdp" />
+                </RelativeLayout>
+            </RelativeLayout>
+
+
+
 
             <RelativeLayout
+                android:visibility="gone"
+                android:id="@+id/discountedAmountLayout"
                 android:paddingTop="@dimen/_5sdp"
                 android:paddingBottom="@dimen/_5sdp"
+                android:layout_marginTop="@dimen/_5sdp"
+
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content">
 
                 <TextView
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
-                    android:fontFamily="@font/inter_regular"
-                    android:text="Discount"
+                    android:fontFamily="@font/montserrat_regular"
+                    android:text="Discount Amount"
                     android:textSize="@dimen/_11sdp" />
 
                 <TextView
@@ -180,26 +220,21 @@
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
                     android:layout_gravity="end"
-                    android:fontFamily="@font/inter_regular"
+                    android:fontFamily="@font/montserrat_regular"
                     android:text="299"
                     android:textSize="@dimen/_11sdp" />
             </RelativeLayout>
 
-            <View
-                android:id="@+id/element3"
-
-                android:layout_width="match_parent"
-                android:layout_height="1dp"
-                android:background="#B1B1B1" />
 
             <RelativeLayout
+                android:layout_marginTop="@dimen/_5sdp"
                 android:paddingTop="@dimen/_5sdp"
                 android:paddingBottom="@dimen/_5sdp"
                 android:layout_width="match_parent"
                 android:layout_height="wrap_content">
 
                 <TextView
-                    android:fontFamily="@font/inter_bold"
+                    android:fontFamily="@font/montserrat_bold"
                     android:layout_width="wrap_content"
                     android:textColor="@color/black"
                     android:layout_height="wrap_content"
@@ -213,32 +248,62 @@
                     android:layout_height="wrap_content"
                     android:layout_gravity="end"
                     android:textColor="@color/black"
-                    android:fontFamily="@font/inter_bold"
+                    android:fontFamily="@font/montserrat_bold"
                     android:text="299"
                     android:textSize="@dimen/_11sdp" />
             </RelativeLayout>
 
 
+
             <TextView
-                android:layout_width="wrap_content"
-                android:layout_height="@dimen/_28sdp"
-                android:id="@+id/proceedToPayment"
-                android:layout_gravity="end"
-                android:layout_marginTop="@dimen/_30sdp"
-                android:layout_marginBottom="@dimen/_30sdp"
-                android:background="@drawable/buttoncornar"
-                android:backgroundTint="@color/colorthird"
-                android:fontFamily="@font/inter_regular"
-                android:gravity="center"
-                android:paddingStart="@dimen/_25sdp"
-                android:paddingEnd="@dimen/_25sdp"
-                android:text="Proceed"
-                android:textStyle="bold"
-                android:textAlignment="center"
-                android:textAllCaps="false"
-                android:textColor="#FFF"
-                android:textSize="@dimen/_10sdp" />
+                android:visibility="gone"
+                android:id="@+id/noticeTxt"
+                android:layout_marginTop="@dimen/_10sdp"
+                android:fontFamily="@font/montserrat_regular"
+                android:textColor="@color/green"
+                android:textStyle="bold"
+                android:layout_width="match_parent"
+                 android:layout_height="wrap_content"
+                android:text="Your currently active package is"
+                android:textSize="@dimen/_10sdp" />
+            <RelativeLayout
+                android:layout_marginTop="@dimen/_12sdp"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="@dimen/_28sdp"
+                    android:id="@+id/proceedToPayment"
+                    android:layout_gravity="end"
+                    android:layout_marginTop="@dimen/_30sdp"
+                    android:background="@drawable/buttoncornar"
+                    android:backgroundTint="@color/colorthird"
+                    android:fontFamily="@font/montserrat_regular"
+                    android:gravity="center"
+                    android:paddingStart="@dimen/_25sdp"
+                    android:paddingEnd="@dimen/_25sdp"
+                    android:text="Proceed"
+                    android:textStyle="bold"
+                    android:textAlignment="center"
+                    android:textAllCaps="false"
+                    android:textColor="#FFF"
+                    android:textSize="@dimen/_10sdp" />
 
+                <TextView
+                    android:layout_alignParentStart="true"
+                    android:layout_marginTop="@dimen/_6sdp"
+                    android:layout_gravity="end"
+                    android:id="@+id/terms"
+                    android:fontFamily="@font/montserrat_regular"
+                    android:layout_width="wrap_content"
+                    android:layout_marginBottom="@dimen/_30sdp"
+                    android:layout_height="@dimen/_15sdp"
+                    android:text="I accept term and conditions"
+                    android:textSize="@dimen/_9sdp" />
+
+            </RelativeLayout>
+
 
 
         </LinearLayout>
Index: app/src/main/java/com/app/brandmania/Activity/SpleshActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.animation.AnimatorSet;\r\nimport android.animation.ObjectAnimator;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.Model.IsCompeteModel;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityMainBinding;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class SpleshActivity extends BaseActivity implements alertListenerCallback {\r\n    Activity act;\r\n    private ActivityMainBinding binding;\r\n    PreafManager preafManager;\r\n    AnimatorSet animatorSet1;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_main);\r\n        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);\r\n\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        preafManager=new PreafManager(this);\r\n\r\n        binding.logo.setVisibility(View.VISIBLE);\r\n        final ObjectAnimator scaleAnimatiorXX = ObjectAnimator.ofFloat(binding.logo, \"scaleX\", 0, 1f);\r\n        ObjectAnimator scaleAnimatiorYX = ObjectAnimator.ofFloat(binding.logo, \"scaleY\", 0, 1f);\r\n        animatorSet1 = new AnimatorSet();\r\n        animatorSet1.playTogether(scaleAnimatiorXX, scaleAnimatiorYX);\r\n        animatorSet1.setDuration(3000);\r\n        new Handler().postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n\r\n                if (preafManager.getUserToken()!=null && !preafManager.getUserToken().isEmpty() ) {\r\n                    LoginFlow();\r\n                }\r\n                else {\r\n                    Intent intent = new Intent(act, LoginActivity.class);\r\n                    intent.addCategory(Intent.CATEGORY_HOME);\r\n                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                    startActivity(intent);\r\n                    overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                    finish();\r\n                }\r\n\r\n            }\r\n        }, 1000);\r\n\r\n    }\r\n    private void LoginFlow() {\r\n        Utility.Log(\"API : \", APIs.IS_COMPLETE);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, APIs.IS_COMPLETE, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.Log(\"IS_COMPLETE : \", response);\r\n                try {\r\n                    JSONObject jsonObject=new JSONObject(response);\r\n                    if (ResponseHandler.getBool(jsonObject,\"status\")) {\r\n                        JSONObject jsonObject1 = jsonObject.getJSONObject(\"data\");\r\n                        if (jsonObject1.getString(\"is_completed\").equals(\"0\")) {\r\n                            preafManager.setIs_Registration(false);\r\n                            sessionCreat();\r\n                        }\r\n                        if (jsonObject1.getString(\"is_completed\").equals(\"1\")) {\r\n                            preafManager.setIS_Brand(false);\r\n                            sessionCreat();\r\n                        }\r\n                        if (jsonObject1.getString(\"is_completed\").equals(\"2\")) {\r\n                            preafManager.setIs_Registration(true);\r\n                            preafManager.setIS_Brand(true);\r\n\r\n                            Intent i = new Intent(act, HomeActivity.class);\r\n                            startActivity(i);\r\n                            overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n                            finish();\r\n                        }\r\n                    }else {\r\n                        Utility.showAlert(act,ResponseHandler.getString(jsonObject,\"message\"));\r\n                    }\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        error.printStackTrace();\r\n                        String body;\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(5000,\r\n                2,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        queue.add(stringRequest);\r\n    }\r\n    private void sessionCreat() {\r\n\r\n        preafManager=new PreafManager(act);\r\n        if (preafManager.getIs_Registration())\r\n        {\r\n            if (preafManager.getIS_Brand())\r\n            {\r\n                Intent i = new Intent(act, HomeActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                finish();\r\n            }\r\n            else\r\n            {\r\n                Intent i = new Intent(act, AddBranddActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                finish();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            Intent intent = new Intent(act, RegistrationActivity.class);\r\n            intent.addCategory(Intent.CATEGORY_HOME);\r\n            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n            startActivity(intent);\r\n            overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n            finish();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void getBrandList() {\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Log.e(\"addbrandresponce\",response);\r\n                ArrayList<BrandListItem> brandListItems=new ArrayList<>();\r\n                try {\r\n                    JSONObject res=new JSONObject(response);\r\n\r\n                    JSONArray jsonArray1 = res.getJSONArray(\"data\");\r\n                    for (int i=0;i<jsonArray1.length();i++)\r\n                    {\r\n                        JSONObject jsonObject=jsonArray1.getJSONObject(i);\r\n                        BrandListItem brandListItemm=new BrandListItem();\r\n                        brandListItemm.setId(ResponseHandler.getString(jsonObject,\"id\"));\r\n                        brandListItemm.setCategoryId(ResponseHandler.getString(jsonObject, \"br_category_id\"));\r\n                        brandListItemm.setCategoryName(ResponseHandler.getString(jsonObject, \"br_category_name\"));\r\n                        brandListItemm.setName(ResponseHandler.getString(jsonObject,\"br_name\"));\r\n                        brandListItemm.setWebsite(ResponseHandler.getString(jsonObject,\"br_website\"));\r\n                        brandListItemm.setEmail(ResponseHandler.getString(jsonObject,\"br_email\"));\r\n                        brandListItemm.setPhonenumber(ResponseHandler.getString(jsonObject, \"br_phone\"));\r\n                        brandListItemm.setAddress(ResponseHandler.getString(jsonObject,\"br_address\"));\r\n                        brandListItemm.setLogo(ResponseHandler.getString(jsonObject,\"br_logo\"));\r\n                        brandListItemm.setPackage_id(ResponseHandler.getString(jsonObject, \"package_id\"));\r\n                        brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, \"is_frame\"));\r\n                        brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, \"frame_message\"));\r\n                        brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, \"fream_base_url\"));\r\n                        brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, \"is_payment_pending\"));\r\n                        brandListItemm.setPayment_message(ResponseHandler.getString(jsonObject, \"payment_message\"));\r\n                        brandListItemm.setPackagename(ResponseHandler.getString(jsonObject, \"package\"));\r\n                        brandListItemm.setPackagemessage(ResponseHandler.getString(jsonObject, \"package_message\"));\r\n                        brandListItemm.setNo_of_total_image(ResponseHandler.getString(jsonObject, \"no_of_img\"));\r\n                        brandListItemm.setNo_of_used_image(ResponseHandler.getString(jsonObject, \"no_of_used_img\"));\r\n                        brandListItemm.setNo_of_frame(ResponseHandler.getString(jsonObject, \"no_of_frame\"));\r\n                        brandListItemm.setNo_of_remaining(ResponseHandler.getString(jsonObject, \"remaining_img\"));\r\n                        brandListItemm.setRate(ResponseHandler.getString(jsonObject, \"rate\"));\r\n\r\n                        brandListItemm.setExpiery_date(ResponseHandler.getString(jsonObject, \"expire_date\"));\r\n                        \r\n                        \r\n                        \r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"br_frame\");\r\n                        \r\n                        ArrayList<FrameItem>frameItems=null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject,\"fream_base_url\")+\"/\"+ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n\r\n                        brandListItemm.setFrame(frameItems);\r\n                        brandListItems.add(brandListItemm);\r\n                    }\r\n\r\n\r\n                    preafManager.setAddBrandList(brandListItems);\r\n                    preafManager.setIS_Brand(true);\r\n\r\n                    /*if (brandListItems!=null && brandListItems.size()!=0){\r\n                        preafManager.setActiveBrand(brandListItems.get(0));\r\n                    }*/\r\n\r\n\r\n                    Intent i = new Intent(act, HomeActivity.class);\r\n                    startActivity(i);\r\n                    overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n                    finish();\r\n\r\n\r\n                }\r\n                catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n//                        String body;\r\n//                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n//                        Log.e(\"Error \", body);\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(5000,\r\n                2,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    @Override\r\n    public void alertListenerClick() {\r\n        preafManager.Logout();\r\n        Intent intent = new Intent(act, LoginActivity.class);\r\n        intent.addCategory(Intent.CATEGORY_HOME);\r\n        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n        startActivity(intent);\r\n        overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n        finish();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/SpleshActivity.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Activity/SpleshActivity.java	(date 1609249079288)
@@ -225,6 +225,7 @@
                         brandListItemm.setPackage_id(ResponseHandler.getString(jsonObject, "package_id"));
                         brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, "is_frame"));
                         brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, "frame_message"));
+                        brandListItemm.setSubscriptionDate(ResponseHandler.getString(jsonObject,"subscription_date"));
                         brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, "fream_base_url"));
                         brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, "is_payment_pending"));
                         brandListItemm.setPayment_message(ResponseHandler.getString(jsonObject, "payment_message"));
Index: app/src/main/java/com/app/brandmania/Activity/RegistrationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.PopupMenu;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.text.Html;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.androidnetworking.AndroidNetworking;\r\nimport com.androidnetworking.common.ANRequest;\r\nimport com.androidnetworking.common.Priority;\r\nimport com.androidnetworking.error.ANError;\r\nimport com.androidnetworking.interfaces.JSONObjectRequestListener;\r\nimport com.androidnetworking.interfaces.UploadProgressListener;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityRegistrationBinding;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RegistrationActivity extends BaseActivity implements  PopupMenu.OnMenuItemClickListener{\r\n    Activity act;\r\n    private ActivityRegistrationBinding binding;\r\n    private boolean isLoading=false;\r\n    private String is_completed=\"\";\r\n    int errorColor;\r\n    final int version = Build.VERSION.SDK_INT;\r\n    PreafManager preafManager;\r\n    AlertDialog.Builder alertDialogBuilder;\r\n    private ImageView menuOtpion;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act= this;\r\n        binding= DataBindingUtil.setContentView(act, R.layout.activity_registration);\r\n        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        alertDialogBuilder=new AlertDialog.Builder(act);\r\n        preafManager=new PreafManager(this);\r\n        binding.emailId.setImeActionLabel(\"Custom text\", KeyEvent.KEYCODE_ENTER);\r\n\r\n        binding.firstName.setNextFocusDownId(R.id.lastName);\r\n        binding.lastName.setNextFocusDownId(R.id.emailId);\r\n        binding.emailId.setNextFocusDownId(R.id.submitBtn);\r\n        binding.menuOtpion.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n\r\n            }\r\n        });\r\n\r\n\r\n        menuOtpion=findViewById(R.id.menuOtpion);\r\n        menuOtpion.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                PopupMenu popup = new PopupMenu(RegistrationActivity.this, view);\r\n                popup.setOnMenuItemClickListener(RegistrationActivity.this);\r\n                popup.inflate(R.menu.menu);\r\n                popup.show();\r\n            }\r\n        });\r\n\r\n\r\n\r\n        preafManager.setEMAIL_Id(binding.emailId.getText().toString());\r\n        binding.submitBtn.setOnClickListener(new View.OnClickListener() {\r\n            @RequiresApi(api = Build.VERSION_CODES.M)\r\n            @Override\r\n            public void onClick(View v) {\r\n                Validation();\r\n\r\n            }\r\n        });\r\n        CodeReUse.RemoveError(binding.firstName, binding.userNameTextLayout);\r\n        CodeReUse.RemoveError(binding.lastName, binding.lastNameTextLayout);\r\n        CodeReUse.RemoveError(binding.emailId, binding.emailIdTextLayout);\r\n\r\n        String CreatAccount = \"Create<br>Account</font></br>\";\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\r\n           // binding.signupText.setText(Html.fromHtml(Message, Html.FROM_HTML_MODE_COMPACT));\r\n            binding.creatAccount.setText(Html.fromHtml(CreatAccount, Html.FROM_HTML_MODE_COMPACT));\r\n        } else {\r\n            //binding.signupText.setText(Html.fromHtml(Message));\r\n            binding.creatAccount.setText(Html.fromHtml(CreatAccount));\r\n        }\r\n    }\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    private void Validation() {\r\n\r\n        boolean isError = false;\r\n        boolean isFocus = false;\r\n\r\n        if (binding.firstName.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.userNameTextLayout.setError(getString(R.string.enter_first_name));\r\n            binding.userNameTextLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n            binding.firstName.requestFocus();\r\n\r\n        }\r\n\r\n\r\n\r\n        if (binding.lastName.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.lastNameTextLayout.setError(getString(R.string.enter_last_name));\r\n            binding.lastNameTextLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n            binding.lastName.requestFocus();\r\n\r\n        }\r\n        if (!binding.emailId.getText().toString().equals(\"\")) {\r\n            if (!CodeReUse.isEmailValid(binding.emailId.getText().toString())) {\r\n                isError = true;\r\n                isFocus = true;\r\n                binding.emailIdTextLayout.setError(getString(R.string.enter_valid_email_address));\r\n                binding.emailIdTextLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n                binding.emailId.requestFocus();\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            if (binding.emailId.getText().toString().length() == 0) {\r\n                isError = true;\r\n                isFocus = true;\r\n                binding.emailIdTextLayout.setError(getString(R.string.enter_email_id));\r\n                binding.emailIdTextLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n                          binding.emailId.requestFocus();\r\n\r\n            }\r\n        }\r\n        if (!isError)\r\n        {\r\n            addUser();\r\n        }\r\n\r\n    }\r\n    @Override\r\n    public boolean onMenuItemClick(MenuItem item) {\r\n\r\n        switch (item.getItemId()) {\r\n            case R.id.logo:\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    private void addUser() {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Log.e(\"API\", APIs.USER_REGISTRATION);\r\n        Log.w(\"Tokennn\", preafManager.getUserToken());\r\n        ANRequest.MultiPartBuilder request = AndroidNetworking.upload(APIs.USER_REGISTRATION)\r\n                .addHeaders(\"Accept\", \"application/json\")\r\n                .addHeaders(\"Content-Type\", \"application/json\")\r\n                .addHeaders(\"Authorization\", \"Bearer \"+preafManager.getUserToken())\r\n                .addMultipartParameter(\"first_name\", binding.firstName.getText().toString())\r\n                .addMultipartParameter(\"last_name\", binding.lastName.getText().toString())\r\n                .addMultipartParameter(\"email\", binding.emailId.getText().toString())\r\n                .setTag(\"Add User\")\r\n                .setPriority(Priority.HIGH);\r\n        preafManager.setEMAIL_Id(binding.emailId.getText().toString());\r\n        request.build().setUploadProgressListener(new UploadProgressListener() {\r\n            @Override\r\n            public void onProgress(long bytesUploaded, long totalBytes) {\r\n                // do anything with progress\r\n            }\r\n        })\r\n                .getAsJSONObject(new JSONObjectRequestListener() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        Utility.Log(\"Verify-Response\", response);\r\n\r\n                        try {\r\n\r\n                            if (response.getBoolean(\"status\")) {\r\n                                preafManager.setIs_Registration(true);\r\n\r\n                                JSONObject jsonArray = response.getJSONObject(\"data\");\r\n                                is_completed= jsonArray.getString(\"is_completed\");\r\n\r\n                                        preafManager.loginStep(is_completed);\r\n                                        if (is_completed.equals(\"1\"))\r\n                                        {\r\n                                            Intent i = new Intent(act, AddBranddActivity.class);\r\n                                            i.addCategory(Intent.CATEGORY_HOME);\r\n                                            i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                                            startActivity(i);\r\n                                            overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                                            finish();\r\n                                        }\r\n                                        if (is_completed.equals(\"2\"))\r\n                                        {\r\n\r\n                                            getBrandList();\r\n\r\n//                                    Intent i = new Intent(act, HomeActivity.class);\r\n//                                    i.addCategory(Intent.CATEGORY_HOME);\r\n//                                    i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n//                                    startActivity(i);\r\n//                                    overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n//                                    finish();\r\n                                        }\r\n\r\n\r\n\r\n\r\n                            }\r\n                        }\r\n                        catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(ANError error) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        if (error.getErrorCode() != 0) {\r\n                            Log.e(\"onError errorCode : \", String.valueOf(error.getErrorCode()));\r\n                            Log.e(\"onError errorBody : \", error.getErrorBody());\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        } else {\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n    private void getBrandList() {\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Log.e(\"addbrandresponce\",response);\r\n                ArrayList<BrandListItem> brandListItems=new ArrayList<>();\r\n                try {\r\n                    JSONObject res=new JSONObject(response);\r\n\r\n                    JSONArray jsonArray1 = res.getJSONArray(\"data\");\r\n                    for (int i=0;i<jsonArray1.length();i++)\r\n                    {\r\n                        JSONObject jsonObject=jsonArray1.getJSONObject(i);\r\n                        BrandListItem brandListItemm=new BrandListItem();\r\n                        brandListItemm.setId(ResponseHandler.getString(jsonObject, \"id\"));\r\n                        brandListItemm.setCategoryId(ResponseHandler.getString(jsonObject, \"br_category_id\"));\r\n                        brandListItemm.setCategoryName(ResponseHandler.getString(jsonObject, \"br_category_name\"));\r\n                        brandListItemm.setName(ResponseHandler.getString(jsonObject, \"br_name\"));\r\n                        brandListItemm.setPhonenumber(ResponseHandler.getString(jsonObject, \"br_phone\"));\r\n                        brandListItemm.setWebsite(ResponseHandler.getString(jsonObject, \"br_website\"));\r\n                        brandListItemm.setEmail(ResponseHandler.getString(jsonObject, \"br_email\"));\r\n                        brandListItemm.setAddress(ResponseHandler.getString(jsonObject, \"br_address\"));\r\n                        brandListItemm.setLogo(ResponseHandler.getString(jsonObject, \"br_logo\"));\r\n                        brandListItemm.setPackage_id(ResponseHandler.getString(jsonObject, \"package_id\"));\r\n                        brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, \"is_frame\"));\r\n                        brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, \"frame_message\"));\r\n                        brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, \"fream_base_url\"));\r\n                        brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, \"is_payment_pending\"));\r\n                        brandListItemm.setPayment_message(ResponseHandler.getString(jsonObject, \"payment_message\"));\r\n                        brandListItemm.setPackagename(ResponseHandler.getString(jsonObject, \"package\"));\r\n                        brandListItemm.setPackagemessage(ResponseHandler.getString(jsonObject, \"package_message\"));\r\n                        brandListItemm.setNo_of_total_image(ResponseHandler.getString(jsonObject, \"no_of_img\"));\r\n                        brandListItemm.setNo_of_used_image(ResponseHandler.getString(jsonObject, \"no_of_used_img\"));\r\n                        brandListItemm.setNo_of_frame(ResponseHandler.getString(jsonObject, \"no_of_frame\"));\r\n                        brandListItemm.setNo_of_remaining(ResponseHandler.getString(jsonObject, \"remaining_img\"));\r\n                        brandListItemm.setExpiery_date(ResponseHandler.getString(jsonObject, \"expire_date\"));\r\n                        brandListItemm.setRate(ResponseHandler.getString(jsonObject, \"rate\"));\r\n\r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"br_frame\");\r\n                        ArrayList<FrameItem>frameItems=null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject,\"fream_base_url\")+\"/\"+ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n\r\n                        brandListItemm.setFrame(frameItems);\r\n                        brandListItems.add(brandListItemm);\r\n                    }\r\n\r\n\r\n                    preafManager.setAddBrandList(brandListItems);\r\n                    preafManager.setIS_Brand(true);\r\n\r\n                    if (brandListItems!=null && brandListItems.size()!=0){\r\n                        preafManager.setActiveBrand(brandListItems.get(0));\r\n                    }\r\n\r\n\r\n                    Intent i = new Intent(act, HomeActivity.class);\r\n                    startActivity(i);\r\n                    overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n                    finish();\r\n\r\n                }\r\n                catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n                        String body;\r\n                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                        Log.e(\"Error \", body);\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n    public void captureScreenShort()\r\n    {\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/RegistrationActivity.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Activity/RegistrationActivity.java	(date 1609249079456)
@@ -318,6 +318,7 @@
                         brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, "frame_message"));
                         brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, "fream_base_url"));
                         brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, "is_payment_pending"));
+                        brandListItemm.setSubscriptionDate(ResponseHandler.getString(jsonObject,"subscription_date"));
                         brandListItemm.setPayment_message(ResponseHandler.getString(jsonObject, "payment_message"));
                         brandListItemm.setPackagename(ResponseHandler.getString(jsonObject, "package"));
                         brandListItemm.setPackagemessage(ResponseHandler.getString(jsonObject, "package_message"));
Index: app/src/main/java/com/app/brandmania/Activity/AddBrandMultipleActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Bitmap;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.androidnetworking.AndroidNetworking;\r\nimport com.androidnetworking.common.ANRequest;\r\nimport com.androidnetworking.common.Priority;\r\nimport com.androidnetworking.error.ANError;\r\nimport com.androidnetworking.interfaces.JSONObjectRequestListener;\r\nimport com.androidnetworking.interfaces.UploadProgressListener;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Common.MakeMyBrandApp;\r\nimport com.app.brandmania.Common.ObserverActionID;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Connection.ItemSelectionInterface;\r\nimport com.app.brandmania.Fragment.bottom.ListBottomFragment;\r\nimport com.app.brandmania.Fragment.bottom.PickerFragment;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.CommonListModel;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityAddBrandMultipleBinding;\r\nimport com.app.brandmania.databinding.ActivityAddBranddBinding;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class AddBrandMultipleActivity extends BaseActivity implements ItemSelectionInterface,alertListenerCallback {\r\n    Activity act;\r\n    private ActivityAddBrandMultipleBinding binding;\r\n    public static int BRAND_CATEGORY = 0;\r\n    private String BrandTitle;\r\n    CommonListModel commonListModel;\r\n    ArrayList<BrandListItem> multiListItems=new ArrayList<>();\r\n    ArrayList<CommonListModel> BRANDTypeList = new ArrayList<>();\r\n    PreafManager preafManager;\r\n    private boolean isLoading=false;\r\n    private String is_completed=\"\";\r\n    private ListBottomFragment bottomSheetFragment;\r\n    private Bitmap selectedImagesBitmap;\r\n    private boolean isEditModeEnable = false;\r\n    private AlertDialog.Builder alertDialogBuilder;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act=this;\r\n        //getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        binding= DataBindingUtil.setContentView(act,R.layout.activity_add_brand_multiple);\r\n        preafManager=new PreafManager(this);\r\n        alertDialogBuilder=new AlertDialog.Builder(act);\r\n        binding.websiteEdt.setText(\"https://\");\r\n        binding.BackButtonMember.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n        binding.addExpenceBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Validation();\r\n            }\r\n        });\r\n        getBrandCategory(BRAND_CATEGORY);\r\n        binding.categoryEdt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                showFragmentList(BRAND_CATEGORY, BrandTitle, BRANDTypeList);\r\n            }\r\n        });\r\n        CodeReUse.RemoveError(binding.categoryEdt, binding.categoryEdtLayout);\r\n        CodeReUse.RemoveError(binding.nameTxt, binding.nameTxtLayout);\r\n        CodeReUse.RemoveError(binding.phoneTxt, binding.phoneTxtLayout);\r\n        CodeReUse.RemoveError(binding.addressEdt, binding.addressEdtLayout);\r\n        CodeReUse.RemoveError(binding.websiteEdt, binding.websiteEdtLayout);\r\n        CodeReUse.RemoveError(binding.emailIdEdt, binding.emailIdEdtLayout);\r\n        binding.viewImgFirst.setTag(\"0\");\r\n        binding.imgCardFirst.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (!isEditModeEnable) {\r\n                    if (binding.viewImgFirst.getTag().toString().equalsIgnoreCase(\"1\"))\r\n                        pickerView(Constant.PICKER_FIRST, true, selectedImagesBitmap);\r\n                    else\r\n                        pickerView(Constant.PICKER_FIRST, false, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n    private void Validation() {\r\n        boolean isError = false;\r\n        boolean isFocus = false;\r\n\r\n        if (binding.categoryEdt.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.categoryEdtLayout.setError(getString(R.string.brandcategory_text));\r\n            binding.categoryEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.categoryEdt.requestFocus();\r\n\r\n        }\r\n        if (binding.nameTxt.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.nameTxtLayout.setError(getString(R.string.brandname_text));\r\n            binding.nameTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.nameTxt.requestFocus();\r\n\r\n        }\r\n\r\n\r\n        if (binding.addressEdt.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.addressEdtLayout.setError(getString(R.string.enter_address));\r\n            binding.addressEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.addressEdt.requestFocus();\r\n\r\n        }\r\n        if (!binding.emailIdEdt.getText().toString().equals(\"\")) {\r\n            if (!CodeReUse.isEmailValid(binding.emailIdEdt.getText().toString())) {\r\n                isError = true;\r\n                isFocus = true;\r\n                binding.emailIdEdtLayout.setError(getString(R.string.enter_valid_email_address));\r\n                binding.emailIdEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n                binding.emailIdEdt.requestFocus();\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n            }\r\n\r\n        }\r\n        if (!binding.phoneTxt.getText().toString().equals(\"\")) {\r\n            if (binding.phoneTxt.getText().toString().length() < 10) {\r\n                binding.phoneTxtLayout.setError(getString(R.string.validphoneno_txt));\r\n                binding.phoneTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n                binding.phoneTxt.requestFocus();\r\n                return;\r\n            }\r\n\r\n        }\r\n        else\r\n        {\r\n            if (binding.phoneTxt.getText().toString().equals(\"\"))\r\n            {\r\n                binding.phoneTxtLayout.setError(getString(R.string.entermobileno_text));\r\n                binding.phoneTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n                binding.phoneTxt.requestFocus();\r\n                return;\r\n            }\r\n\r\n        }\r\n        if (!isError) {\r\n            Bitmap bitmap = null;\r\n            if (selectedImagesBitmap != null) {\r\n                bitmap = selectedImagesBitmap;\r\n            }\r\n            Bitmap bitmap1 = null;\r\n            if (selectedImagesBitmap != null) {\r\n                bitmap1 = selectedImagesBitmap;\r\n            }\r\n            addBrand(bitmap,bitmap1);\r\n        }\r\n\r\n    }\r\n    public void showFragmentList(int callingFlag, String title, ArrayList<CommonListModel> datalist) {\r\n        bottomSheetFragment = new ListBottomFragment();\r\n        Log.e(\"Size---\", String.valueOf(datalist.size()));\r\n        bottomSheetFragment.setListData(callingFlag, title, datalist);\r\n        if (bottomSheetFragment.isVisible()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        if (bottomSheetFragment.isAdded()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        bottomSheetFragment.show(getSupportFragmentManager(), bottomSheetFragment.getTag());\r\n    }\r\n    private void addBrand(Bitmap img,Bitmap img1) {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Log.e(\"API\", APIs.ADD_BRAND);\r\n        Log.e(\"API\", preafManager.getUserToken());\r\n        File img1File = null;\r\n        if (img != null) {\r\n            img1File = CodeReUse.createFileFromBitmap(act, \"photo.jpeg\", img);\r\n        }\r\n        File img1File1 = null;\r\n        if (img1 != null) {\r\n            img1File1= CodeReUse.createFileFromBitmap(act, \"photo.jpeg\", img1);\r\n        }\r\n\r\n        ANRequest.MultiPartBuilder request = AndroidNetworking.upload(APIs.ADD_BRAND)\r\n                .addHeaders(\"Accept\", \"application/json\")\r\n                .addHeaders(\"Content-Type\", \"application/json\")\r\n                .addHeaders(\"Authorization\", \"Bearer\"+preafManager.getUserToken())\r\n                .addMultipartParameter(\"br_category\", commonListModel.getId())\r\n                .addMultipartParameter(\"br_name\", binding.nameTxt.getText().toString())\r\n                .addMultipartParameter(\"br_phone\", binding.phoneTxt.getText().toString())\r\n                .addMultipartParameter(\"br_address\", binding.addressEdt.getText().toString())\r\n                .addMultipartParameter(\"br_website\", binding.websiteEdt.getText().toString())\r\n                .addMultipartParameter(\"br_email\", binding.emailIdEdt.getText().toString())\r\n                .setTag(\"Add User\")\r\n                .setPriority(Priority.HIGH);\r\n\r\n        if (img1File != null) {\r\n            request.addMultipartFile(\"br_logo\", img1File);\r\n            Log.e(\"br_logo\", String.valueOf(img1File));\r\n        }\r\n\r\n        if (img1File1 != null) {\r\n            request.addMultipartFile(\"frame\", img1File1);\r\n            Log.e(\"frame\", String.valueOf(img1File1));\r\n        }\r\n\r\n        request.build().setUploadProgressListener(new UploadProgressListener() {\r\n            @Override\r\n            public void onProgress(long bytesUploaded, long totalBytes) {\r\n                // do anything with progress\r\n            }\r\n        })\r\n                .getAsJSONObject(new JSONObjectRequestListener() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        Utility.Log(\"Verify-Response\", response);\r\n                        ArrayList<BrandListItem> brandListItems=new ArrayList<>();\r\n                        try {\r\n\r\n\r\n                            if (response.getBoolean(\"status\")) {\r\n\r\n\r\n                                JSONObject jsonArray = response.getJSONObject(\"data\");\r\n                                is_completed= jsonArray.getString(\"is_completed\");\r\n\r\n                                alertDialogBuilder.setMessage(ResponseHandler.getString(response, \"message\"));\r\n                                alertDialogBuilder.setPositiveButton(\"Ok\", new DialogInterface.OnClickListener() {\r\n                                    @Override\r\n                                    public void onClick(DialogInterface arg0, int arg1) {\r\n                                        preafManager.loginStep(is_completed);\r\n                                        if (is_completed.equals(\"2\"))\r\n                                        {\r\n                                            getBrandList(ResponseHandler.getString(jsonArray,\"brand_id\"));\r\n                                        }\r\n                                    }\r\n                                });\r\n                                AlertDialog alertDialog = alertDialogBuilder.create();\r\n                                alertDialog.setCancelable(false);\r\n                                alertDialog.show();\r\n                            }\r\n                        }\r\n                        catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(ANError error) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        if (error.getErrorCode() != 0) {\r\n                            Log.e(\"onError errorCode : \", String.valueOf(error.getErrorCode()));\r\n                            Log.e(\"onError errorBody : \", error.getErrorBody());\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        } else {\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n    private void getBrandList(String brand_id) {\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Log.e(\"addbrandresponce\", response);\r\n                int toSetActiveBrand=0;\r\n                ArrayList<BrandListItem> brandListItems = new ArrayList<>();\r\n                try {\r\n                    JSONObject res = new JSONObject(response);\r\n\r\n                    JSONArray jsonArray1 = res.getJSONArray(\"data\");\r\n                    for (int i = 0; i < jsonArray1.length(); i++) {\r\n                        JSONObject jsonObject = jsonArray1.getJSONObject(i);\r\n                        BrandListItem brandListItemm = new BrandListItem();\r\n                        brandListItemm.setId(ResponseHandler.getString(jsonObject, \"id\"));\r\n                        if (brand_id.equals(brandListItemm.getId())){\r\n                            toSetActiveBrand=i;\r\n                        }\r\n                        brandListItemm.setCategoryId(ResponseHandler.getString(jsonObject, \"br_category_id\"));\r\n                        brandListItemm.setCategoryName(ResponseHandler.getString(jsonObject, \"br_category_name\"));\r\n                        brandListItemm.setName(ResponseHandler.getString(jsonObject, \"br_name\"));\r\n                        brandListItemm.setPhonenumber(ResponseHandler.getString(jsonObject, \"br_phone\"));\r\n                        brandListItemm.setWebsite(ResponseHandler.getString(jsonObject, \"br_website\"));\r\n                        brandListItemm.setEmail(ResponseHandler.getString(jsonObject, \"br_email\"));\r\n                        brandListItemm.setAddress(ResponseHandler.getString(jsonObject, \"br_address\"));\r\n                        brandListItemm.setLogo(ResponseHandler.getString(jsonObject, \"br_logo\"));\r\n                        brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, \"is_frame\"));\r\n                        brandListItemm.setPackage_id(ResponseHandler.getString(jsonObject, \"package_id\"));\r\n                        brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, \"frame_message\"));\r\n                        brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, \"fream_base_url\"));\r\n                        brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, \"is_payment_pending\"));\r\n                        brandListItemm.setPayment_message(ResponseHandler.getString(jsonObject, \"payment_message\"));\r\n                        brandListItemm.setPackagename(ResponseHandler.getString(jsonObject, \"package\"));\r\n                        brandListItemm.setPackagemessage(ResponseHandler.getString(jsonObject, \"package_message\"));\r\n                        brandListItemm.setNo_of_total_image(ResponseHandler.getString(jsonObject, \"no_of_img\"));\r\n                        brandListItemm.setNo_of_used_image(ResponseHandler.getString(jsonObject, \"no_of_used_img\"));\r\n                        brandListItemm.setNo_of_frame(ResponseHandler.getString(jsonObject, \"no_of_frame\"));\r\n                        brandListItemm.setNo_of_remaining(ResponseHandler.getString(jsonObject, \"remaining_img\"));\r\n                        brandListItemm.setExpiery_date(ResponseHandler.getString(jsonObject, \"expire_date\"));\r\n                        brandListItemm.setRate(ResponseHandler.getString(jsonObject, \"rate\"));\r\n\r\n\r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"br_frame\");\r\n                        ArrayList<FrameItem> frameItems = null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n\r\n                        brandListItemm.setFrame(frameItems);\r\n                        brandListItems.add(brandListItemm);\r\n                    }\r\n\r\n\r\n                    preafManager.setAddBrandList(brandListItems);\r\n                    preafManager.setIS_Brand(true);\r\n\r\n                    if (brandListItems.size() != 0) {\r\n                        preafManager.setActiveBrand(brandListItems.get(toSetActiveBrand));\r\n                    }\r\n\r\n                  //  MakeMyBrandApp.getInstance().getObserver().setValue(ObserverActionID.JUSTBRAND);\r\n\r\n\r\n                    Intent i = new Intent(act, HomeActivity.class);\r\n\r\n                    i.addCategory(Intent.CATEGORY_HOME);\r\n                    i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                    startActivity(i);\r\n                    overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                    finish();\r\n\r\n                  //  onBackPressed();\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n                        String body;\r\n                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                        Log.e(\"Error \", body);\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\", \"Bearer \" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n    private void getBrandCategory(int flag) {\r\n        String apiUrl = \"\";\r\n        int requestedMethod = 0;\r\n\r\n        if (flag == BRAND_CATEGORY) {\r\n            apiUrl = APIs.GET_BRAND_CATEGORY;\r\n            requestedMethod = Request.Method.POST;\r\n        }\r\n\r\n        Utility.Log(\"API : \", apiUrl);\r\n\r\n        StringRequest request = new StringRequest(requestedMethod, apiUrl, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n\r\n\r\n                Utility.Log(flag + \"- Response : \", response);\r\n                try {\r\n                    if (ResponseHandler.isSuccess(response, null)) {\r\n                        JSONObject responseJson = ResponseHandler.createJsonObject(response);\r\n                        JSONArray jsonArray = ResponseHandler.getJSONArray(responseJson, \"data\");\r\n                        Log.e(\"jsonArray-\", jsonArray.toString());\r\n                        for (int i = 0; i < jsonArray.length(); i++) {\r\n                            JSONObject itemObj = jsonArray.getJSONObject(i);\r\n                            CommonListModel listModel = new CommonListModel();\r\n                            listModel.setLayoutType(CommonListModel.LAYOUT_BLOCK);\r\n                            listModel.setId(ResponseHandler.getString(itemObj, \"id\"));\r\n                            listModel.setName(ResponseHandler.getString(itemObj, \"biz_cat_name\"));\r\n                            BRANDTypeList.add(listModel);\r\n                        }\r\n                        Log.w(\"Size\", String.valueOf(BRANDTypeList.size()));\r\n                    }\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                error.printStackTrace();\r\n            }\r\n        }) {\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\"+preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                HashMap<String, String> map = new HashMap<>();\r\n\r\n\r\n                Utility.Log(\"Params : \", map.toString());\r\n                return map;\r\n            }\r\n        };\r\n        RequestQueue queue = Volley.newRequestQueue(this);\r\n        queue.add(request);\r\n\r\n    }\r\n    private void pickerView(int actionId, boolean viewMode, Bitmap selectedBitmap) {\r\n        PickerFragment pickerFragment = new PickerFragment(act);\r\n        pickerFragment.setEnableViewMode(viewMode);\r\n        pickerFragment.setActionId(actionId);\r\n\r\n        if (viewMode) {\r\n            pickerFragment.setSelectedBitmapForFullView(selectedBitmap);\r\n        }\r\n        PickerFragment.HandlerImageLoad imageLoad = new PickerFragment.HandlerImageLoad() {\r\n            @Override\r\n            public void onGalleryResult(int flag, Bitmap bitmap) {\r\n                if (flag == Constant.PICKER_FIRST) {\r\n                    binding.viewImgFirst.setImageBitmap(bitmap);\r\n                    binding.imgEmptyStateFirst.setVisibility(View.GONE);\r\n                    binding.actionDeleteFirst.setVisibility(View.VISIBLE);\r\n                    selectedImagesBitmap = bitmap;\r\n                    binding.viewImgFirst.setTag(\"1\");\r\n                    if (!isEditModeEnable) {\r\n\r\n                    }\r\n                    binding.viewImgFirst.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n\r\n\r\n            }\r\n        };\r\n        pickerFragment.setImageLoad(imageLoad);\r\n        pickerFragment.show(getSupportFragmentManager(), pickerFragment.getTag());\r\n    }\r\n    @Override public void onItemSelection(int calledFlag, int position, CommonListModel listModel) {\r\n        if (bottomSheetFragment != null && bottomSheetFragment.isVisible()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        if (calledFlag == BRAND_CATEGORY) {\r\n            binding.categoryEdt.setText(listModel.getName());\r\n            commonListModel=listModel;\r\n        }\r\n    }\r\n    @Override\r\n    public void onBackPressed() {CodeReUse.activityBackPress(act);\r\n    }\r\n    private void requestAgain() {\r\n        ActivityCompat.requestPermissions(act,\r\n                new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                        Manifest.permission.READ_EXTERNAL_STORAGE},\r\n                CodeReUse.ASK_PERMISSSION);\r\n    }\r\n    @Override public void alertListenerClick() {\r\n        requestAgain();\r\n    }\r\n    public void captureScreenShort()\r\n    {\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/AddBrandMultipleActivity.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Activity/AddBrandMultipleActivity.java	(date 1609249199158)
@@ -344,6 +344,7 @@
                         brandListItemm.setLogo(ResponseHandler.getString(jsonObject, "br_logo"));
                         brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, "is_frame"));
                         brandListItemm.setPackage_id(ResponseHandler.getString(jsonObject, "package_id"));
+                        brandListItemm.setSubscriptionDate(ResponseHandler.getString(jsonObject,"subscription_date"));
                         brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, "frame_message"));
                         brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, "fream_base_url"));
                         brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, "is_payment_pending"));
Index: app/src/main/res/drawable/ic_insurance.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_insurance.xml	(date 1609247642673)
+++ app/src/main/res/drawable/ic_insurance.xml	(date 1609247642673)
@@ -0,0 +1,6 @@
+<vector android:height="24dp" android:viewportHeight="512"
+    android:viewportWidth="512" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="m446.606,104.394 l-100,-100c-2.813,-2.813 -6.628,-4.394 -10.606,-4.394h-220c-30.327,0 -55,24.673 -55,55v402c0,30.327 24.673,55 55,55h280c30.327,0 55,-24.673 55,-55v-342c0,-3.978 -1.581,-7.793 -4.394,-10.606zM351,51.213 L399.787,100h-48.787zM396,482h-280c-13.785,0 -25,-11.215 -25,-25v-402c0,-13.785 11.215,-25 25,-25h205v85c0,8.284 6.716,15 15,15h85v327c0,13.785 -11.215,25 -25,25z"/>
+    <path android:fillColor="#FF000000" android:pathData="m356,202c-18.955,0 -35.996,-10.532 -44.472,-27.484l-2.111,-4.223c-2.541,-5.083 -7.735,-8.293 -13.417,-8.293h-80c-5.682,0 -10.876,3.21 -13.417,8.292l-2.111,4.222c-8.476,16.954 -25.517,27.486 -44.472,27.486 -8.284,0 -15,6.716 -15,15v85.597c0,33.654 10.619,65.715 30.708,92.716 20.089,27 47.747,46.384 79.982,56.054 1.406,0.422 2.858,0.633 4.31,0.633s2.904,-0.211 4.31,-0.633c32.235,-9.67 59.893,-29.054 79.982,-56.054 20.089,-27.001 30.708,-59.062 30.708,-92.716v-85.597c0,-8.284 -6.716,-15 -15,-15zM341,302.597c0,54.256 -33.971,101.385 -85,118.66 -51.029,-17.275 -85,-64.404 -85,-118.66v-71.995c22.701,-4.285 42.437,-18.2 54.125,-38.603h61.75c11.688,20.402 31.424,34.318 54.125,38.603z"/>
+    <path android:fillColor="#FF000000" android:pathData="m287.82,268.109 l-45.962,45.961 -17.678,-17.677c-5.857,-5.858 -15.355,-5.858 -21.213,0s-5.858,15.355 0,21.213l28.284,28.284c2.929,2.929 6.768,4.394 10.606,4.394s7.678,-1.464 10.606,-4.394l56.568,-56.568c5.858,-5.858 5.858,-15.355 0,-21.213 -5.856,-5.858 -15.354,-5.858 -21.211,0z"/>
+</vector>
Index: app/src/main/res/layout/item_service_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout>\r\n<TextView\r\n    android:id=\"@+id/servicesTxt\"\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:fontFamily=\"@font/inter_regular\"\r\n    android:text=\"- 1 - Templates / Brand\"\r\n    android:textSize=\"@dimen/_10sdp\"\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\" />\r\n\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_service_layout.xml	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/res/layout/item_service_layout.xml	(date 1609304907893)
@@ -4,8 +4,8 @@
     android:id="@+id/servicesTxt"
     android:layout_width="wrap_content"
     android:layout_height="wrap_content"
-    android:fontFamily="@font/inter_regular"
-    android:text="- 1 - Templates / Brand"
+    android:fontFamily="@font/montserrat_regular"
+
     android:textSize="@dimen/_10sdp"
     xmlns:android="http://schemas.android.com/apk/res/android" />
 
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <!-- Base application theme. -->\r\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"android:windowTranslucentStatus\">true</item>\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/startcolor</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n        <item name=\"android:textColorSecondary\">@color/colorNavText</item>\r\n\r\n    </style>\r\n    <style name=\"AppTheme_Second\" parent=\"Theme.AppCompat.Light.NoActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimary</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n        <item name=\"android:textColorSecondary\">@color/colorNavText</item>\r\n\r\n    </style>\r\n\r\n    <style name=\"SplashTheme\" parent=\"Theme.AppCompat.Light.NoActionBar\">\r\n\r\n        <item name=\"android:background\">@color/colorPrimary</item>\r\n    </style>\r\n\r\n\r\n    <style name=\"CustomViewAllTab\" parent=\"@android:style/TextAppearance.Widget.TabWidget\">\r\n        <item name=\"android:textSize\">@dimen/_10sdp</item>\r\n        <item name=\"android:fontFamily\">@font/montserrat_semibold</item>\r\n    </style>\r\n    <style name=\"Style_TextView\">\r\n        <item name=\"fontFamily\">@font/montserrat_semibold</item>\r\n    </style>\r\n    <style name=\"MyAlertDialogStyle_extend\" parent=\"MyAlertDialogStyle\">\r\n        <item name=\"android:textColor\">@color/colorPrimaryTransperent</item>\r\n        <item name=\"android:windowIsFloating\">false</item>\r\n        <item name=\"colorAccent\">@color/colorPrimaryTransperent</item>\r\n        <item name=\"android:windowBackground\">@color/colorPrimaryTransperent</item>\r\n        <item name=\"android:layout_gravity\">center_vertical</item>\r\n    </style>\r\n\r\n    <style name=\"MyTabLayout\" parent=\"Base.Widget.Design.TabLayout\">\r\n        <item name=\"tabTextAppearance\">@style/MyTabTextAppearance</item>\r\n    </style>\r\n    <style name=\"EditText\">\r\n        <item name=\"android:singleLine\">true</item>\r\n        <item name=\"colorControlNormal\">#FFFFFF</item>\r\n        <item name=\"colorControlActivated\">#FFFFFF</item>\r\n        <item name=\"android:textColorPrimary\">#FFFFFF</item>\r\n        <item name=\"android:textSize\">14sp</item>\r\n    </style>\r\n    <style name=\"Widget.MaterialComponents.FloatingActionButton\" parent=\"Widget.Design.FloatingActionButton\">\r\n        <item name=\"android:background\">@null</item>\r\n        <item name=\"enforceMaterialTheme\">true</item>\r\n        <item name=\"ensureMinTouchTargetSize\">true</item>\r\n        <item name=\"elevation\">@dimen/mtrl_fab_elevation</item>\r\n        <item name=\"backgroundTint\">?attr/colorSecondary</item>\r\n        <item name=\"tint\">?attr/colorOnSecondary</item>\r\n        <item name=\"hoveredFocusedTranslationZ\">@dimen/mtrl_fab_translation_z_hovered_focused</item>\r\n        <item name=\"pressedTranslationZ\">@dimen/mtrl_fab_translation_z_pressed</item>\r\n        <item name=\"rippleColor\">@color/mtrl_fab_ripple_color</item>\r\n        <item name=\"showMotionSpec\">@animator/mtrl_fab_show_motion_spec</item>\r\n        <item name=\"hideMotionSpec\">@animator/mtrl_fab_hide_motion_spec</item>\r\n        <item name=\"shapeAppearance\">?attr/shapeAppearanceSmallComponent</item>\r\n        <item name=\"shapeAppearanceOverlay\">\r\n            @style/ShapeAppearanceOverlay.MaterialComponents.FloatingActionButton\r\n        </item>\r\n    </style>\r\n    <style name=\"MyTabTextAppearance\" parent=\"TextAppearance.AppCompat.Button\">\r\n        <item name=\"android:textSize\">@dimen/_11sdp</item>\r\n        <item name=\"android:textAllCaps\">false</item>\r\n        <item name=\"fontFamily\">@font/inter_regular</item>\r\n\r\n    </style>\r\n\r\n    <style name=\"AppTheme_material_theme\" parent=\"Theme.MaterialComponents.Light.NoActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimary</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n    </style>\r\n    <style name=\"Widget.BottomNavigationView\"\r\n        parent=\"Widget.Design.BottomNavigationView\">\r\n        <item name=\"fontFamily\">@font/poppins_medium</item>\r\n        <item name=\"android:textSize\">@dimen/_10sdp</item>\r\n    </style>\r\n    <style name=\"ShapeAppearanceOverlay_card_custom_corners\" parent=\"\">\r\n        <item name=\"cornerFamily\">rounded</item>\r\n        <item name=\"cornerSizeTopRight\">@dimen/_10sdp</item>\r\n        <item name=\"background\">@color/colorNavText</item>\r\n        <item name=\"cornerSizeTopLeft\">@dimen/_10sdp</item>\r\n    </style>\r\n    <style name=\"CustomCardViewStyle\" parent=\"@style/Widget.MaterialComponents.CardView\">\r\n        <item name=\"shapeAppearanceOverlay\">@style/ShapeAppearanceOverlay_card_custom_corners</item>\r\n    </style>\r\n    <style name=\"helperTextAppearance\" parent=\"@android:style/TextAppearance\">\r\n        <item name=\"android:textColor\">@color/colorRed</item>\r\n        <item name=\"android:textSize\">@dimen/_8sdp</item>\r\n        <item name=\"android:fontFamily\">@font/poppins_medium</item>\r\n        <item name=\"android:layout_marginTop\">@dimen/_3sdp</item>\r\n        <item name=\"helperTextTextColor\">@color/colorRed</item>\r\n    </style>\r\n    <style name=\"AppThemeMyLight\" parent=\"Theme.AppCompat.Light\">\r\n        <item name=\"colorAccent\">@color/colorPrimaryDark</item>\r\n    </style>\r\n    <style name=\"AppTheme.PopupOverlay\" parent=\"ThemeOverlay.AppCompat.Light\" />\r\n    <style name=\"LoginTextInputLayoutStyle\" parent=\"Widget.MaterialComponents.TextInputLayout.OutlinedBox\">\r\n        <item name=\"boxStrokeColor\">@color/colorPrimary</item>\r\n        <item name=\"boxCornerRadiusTopStart\">@dimen/_20sdp</item>\r\n        <item name=\"hintTextColor\">@color/Graycolor</item>\r\n        <item name=\"android:layout_marginTop\">@dimen/_10sdp</item>\r\n        <item name=\"boxCornerRadiusTopEnd\">@dimen/_20sdp</item>\r\n        <item name=\"boxCornerRadiusBottomStart\">@dimen/_20sdp</item>\r\n        <item name=\"boxCornerRadiusBottomEnd\">@dimen/_20sdp</item>\r\n        <item name=\"android:backgroundTint\">@color/colorPrimary</item>\r\n        <item name=\"boxStrokeWidthFocused\">0.5dp</item>\r\n        <item name=\"boxStrokeWidth\">0.4dp</item>\r\n        <item name=\"boxBackgroundMode\">outline</item>\r\n        <item name=\"helperTextEnabled\">true</item>\r\n        <item name=\"helperTextTextColor\">@color/colorRed</item>\r\n        <item name=\"helperTextTextAppearance\">@style/helperTextAppearance</item>\r\n    </style>\r\n\r\n    <style name=\"fontStyle\" parent=\"Widget.MaterialComponents.TextInputLayout.OutlinedBox\">\r\n        <item name=\"boxStrokeColor\">@color/colorPrimary</item>\r\n        <item name=\"boxCornerRadiusTopStart\">@dimen/_5sdp</item>\r\n        <item name=\"hintTextColor\">@color/Graycolor</item>\r\n        <item name=\"boxCornerRadiusTopEnd\">@dimen/_5sdp</item>\r\n        <item name=\"boxCornerRadiusBottomStart\">@dimen/_5sdp</item>\r\n        <item name=\"boxCornerRadiusBottomEnd\">@dimen/_5sdp</item>\r\n        <item name=\"android:backgroundTint\">@color/colorPrimary</item>\r\n        <item name=\"boxStrokeWidthFocused\">0.5dp</item>\r\n        <item name=\"boxStrokeWidth\">0.4dp</item>\r\n        <item name=\"boxBackgroundMode\">outline</item>\r\n        <item name=\"helperTextEnabled\">true</item>\r\n        <item name=\"helperTextTextColor\">@color/colorRed</item>\r\n        <item name=\"helperTextTextAppearance\">@style/helperTextAppearance</item>\r\n    </style>\r\n    <style name=\"RegistrationTextInputLayoutStyle\" parent=\"Widget.MaterialComponents.TextInputLayout.OutlinedBox\">\r\n        <item name=\"boxStrokeColor\">@color/colorNavText</item>\r\n        <item name=\"boxCornerRadiusTopStart\">@dimen/_20sdp</item>\r\n        <item name=\"hintTextColor\">@color/colorNavText</item>\r\n        <item name=\"android:layout_marginTop\">@dimen/_10sdp</item>\r\n        <item name=\"boxCornerRadiusTopEnd\">@dimen/_20sdp</item>\r\n        <item name=\"boxCornerRadiusBottomStart\">@dimen/_20sdp</item>\r\n        <item name=\"boxCornerRadiusBottomEnd\">@dimen/_20sdp</item>\r\n        <item name=\"android:backgroundTint\">@color/colorNavText</item>\r\n        <item name=\"boxStrokeWidthFocused\">0.5dp</item>\r\n        <item name=\"boxStrokeWidth\">1dp</item>\r\n        <item name=\"boxBackgroundMode\">outline</item>\r\n        <item name=\"helperTextEnabled\">true</item>\r\n        <item name=\"helperTextTextColor\">@color/colorthird</item>\r\n        <item name=\"helperTextTextAppearance\">@style/helperTextAppearance</item>\r\n           </style>\r\n    <style name=\"ToolbarStyle\">\r\n        <item name=\"android:layout_height\">@dimen/_70sdp</item>\r\n        <item name=\"android:layout_width\">match_parent</item>\r\n\r\n        <item name=\"android:orientation\">vertical</item>\r\n        <item name=\"android:title\" />\r\n        <item name=\"android:layout_marginStart\">-5dp</item>\r\n        <item name=\"contentInsetStart\">0dp</item>\r\n        <item name=\"contentInsetEnd\">0dp</item>\r\n\r\n        <item name=\"contentInsetStartWithNavigation\">0dp</item>\r\n    </style>\r\n    <style name=\"textLayoutForDescription\" parent=\"Widget.MaterialComponents.TextInputLayout.OutlinedBox\">\r\n        <item name=\"boxStrokeColor\">@color/colorPrimary</item>\r\n        <item name=\"hintTextColor\">@color/Graycolor</item>\r\n        <item name=\"boxCornerRadiusTopStart\">@dimen/_2sdp</item>\r\n        <item name=\"boxCornerRadiusTopEnd\">@dimen/_2sdp</item>\r\n        <item name=\"boxCornerRadiusBottomStart\">@dimen/_2sdp</item>\r\n        <item name=\"boxCornerRadiusBottomEnd\">@dimen/_2sdp</item>\r\n        <item name=\"android:backgroundTint\">@color/colorPrimary</item>\r\n        <item name=\"boxStrokeWidthFocused\">0.5dp</item>\r\n        <item name=\"boxStrokeWidth\">0.4dp</item>\r\n        <item name=\"boxBackgroundMode\">outline</item>\r\n        <item name=\"android:layout_marginTop\">@dimen/_10sdp</item>\r\n        <item name=\"helperTextEnabled\">true</item>\r\n        <item name=\"helperTextTextColor\">@color/colorRed</item>\r\n        <item name=\"helperTextTextAppearance\">@style/helperTextAppearance</item>\r\n    </style>\r\n    <style name=\"error_appearance\" parent=\"@android:style/TextAppearance\">\r\n        <item name=\"android:tint\">@color/colorthird</item>\r\n        <item name=\"android:backgroundTint\">@color/colorthird</item>\r\n        <item name=\"android:tintMode\">@color/colorthird</item>\r\n\r\n        <item name=\"android:textSize\">12sp</item>\r\n    </style>\r\n    <style name=\"MyAlertDialogStyle\" parent=\"Theme.AppCompat.Light.Dialog.Alert\">\r\n        <item name=\"android:textColor\">@color/colorPrimaryTransperent</item>\r\n        <item name=\"android:windowIsFloating\">false</item>\r\n        <item name=\"colorAccent\">@color/colorPrimaryTransperent</item>\r\n        <item name=\"android:windowBackground\">@color/colorPrimaryTransperent</item>\r\n        <item name=\"android:layout_gravity\">bottom</item>\r\n    </style>\r\n\r\n\r\n    <style name=\"progressStyles\" parent=\"Theme.AppCompat.Light\">\r\n        <item name=\"colorAccent\">@color/colorPrimary</item>\r\n    </style>\r\n\r\n    <style name=\"DialogTheme\" parent=\"android:Theme.Dialog\">\r\n        <item name=\"android:layout_width\">fill_parent</item>\r\n        <item name=\"android:layout_height\">fill_parent</item>\r\n    </style>\r\n    <style name=\"SeekBarColor\"\r\n        parent=\"Widget.AppCompat.SeekBar\">\r\n        <item name=\"colorAccent\">@color/black</item>\r\n    </style>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/res/values/styles.xml	(date 1609240791361)
@@ -25,8 +25,8 @@
 
 
     <style name="CustomViewAllTab" parent="@android:style/TextAppearance.Widget.TabWidget">
-        <item name="android:textSize">@dimen/_10sdp</item>
-        <item name="android:fontFamily">@font/montserrat_semibold</item>
+        <item name="android:textSize">@dimen/_11sdp</item>
+        <item name="android:fontFamily">@font/montserrat_regular</item>
     </style>
     <style name="Style_TextView">
         <item name="fontFamily">@font/montserrat_semibold</item>
Index: app/src/main/java/com/app/brandmania/Activity/AddBranddActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.PopupMenu;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Bitmap;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.androidnetworking.AndroidNetworking;\r\nimport com.androidnetworking.common.ANRequest;\r\nimport com.androidnetworking.common.Priority;\r\nimport com.androidnetworking.error.ANError;\r\nimport com.androidnetworking.interfaces.JSONObjectRequestListener;\r\nimport com.androidnetworking.interfaces.UploadProgressListener;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Connection.ItemSelectionInterface;\r\nimport com.app.brandmania.Fragment.bottom.ListBottomFragment;\r\nimport com.app.brandmania.Fragment.bottom.PickerFragment;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.CommonListModel;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\n\r\nimport com.app.brandmania.databinding.ActivityAddBranddBinding;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class AddBranddActivity extends BaseActivity implements ItemSelectionInterface ,alertListenerCallback  , PopupMenu.OnMenuItemClickListener {\r\n    Activity act;\r\n    private ActivityAddBranddBinding binding;\r\n    public static int BRAND_CATEGORY = 0;\r\n    private String BrandTitle;\r\n    CommonListModel commonListModel;\r\n    ArrayList<BrandListItem> multiListItems = new ArrayList<>();\r\n    ArrayList<CommonListModel> BRANDTypeList = new ArrayList<>();\r\n    PreafManager preafManager;\r\n    private boolean isLoading = false;\r\n    private String is_completed = \"\";\r\n    private ListBottomFragment bottomSheetFragment;\r\n    private Bitmap selectedImagesBitmap;\r\n    private boolean isEditModeEnable = false;\r\n    AlertDialog.Builder alertDialogBuilder;\r\n    private ImageView menuOtpion;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_add_brandd);\r\n\r\n        preafManager = new PreafManager(this);\r\n\r\n        preafManager.setIs_Registration(true);\r\n        binding.menuOtpion.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n\r\n            }\r\n        });\r\n        binding.websiteEdt.setText(\"https://\");\r\n        alertDialogBuilder = new AlertDialog.Builder(act);\r\n        String NumberShow = getIntent().getStringExtra(Constant.MOBILE_NUMBER);\r\n        String EmailIdShow = getIntent().getStringExtra(Constant.EMAIL_ID);\r\n        binding.phoneTxt.setText(preafManager.getMobileNumber());\r\n        binding.emailIdEdt.setText(preafManager.getEMAIL_Id());\r\n        menuOtpion=findViewById(R.id.menuOtpion);\r\n        menuOtpion.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                PopupMenu popup = new PopupMenu(AddBranddActivity.this, view);\r\n                popup.setOnMenuItemClickListener(AddBranddActivity.this);\r\n                popup.inflate(R.menu.menu);\r\n                popup.show();\r\n            }\r\n        });\r\n\r\n        //LoginFlow();\r\n        binding.addExpenceBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Validation();\r\n            }\r\n        });\r\n        getBrandCategory(BRAND_CATEGORY);\r\n        CodeReUse.RemoveError(binding.categoryEdt, binding.categoryEdtLayout);\r\n        CodeReUse.RemoveError(binding.nameTxt, binding.nameTxtLayout);\r\n        CodeReUse.RemoveError(binding.phoneTxt, binding.phoneTxtLayout);\r\n        CodeReUse.RemoveError(binding.addressEdt, binding.addressEdtLayout);\r\n        CodeReUse.RemoveError(binding.websiteEdt, binding.websiteEdtLayout);\r\n        CodeReUse.RemoveError(binding.emailIdEdt, binding.emailIdEdtLayout);\r\n        binding.categoryEdt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                showFragmentList(BRAND_CATEGORY, BrandTitle, BRANDTypeList);\r\n            }\r\n        });\r\n        binding.viewImgFirst.setTag(\"0\");\r\n\r\n\r\n        binding.imgCardFirst.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (!isEditModeEnable) {\r\n                    if (binding.viewImgFirst.getTag().toString().equalsIgnoreCase(\"1\"))\r\n                        pickerView(Constant.PICKER_FIRST, true, selectedImagesBitmap);\r\n                    else\r\n                        pickerView(Constant.PICKER_FIRST, false, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void Validation() {\r\n        boolean isError = false;\r\n        boolean isFocus = false;\r\n\r\n        if (binding.categoryEdt.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.categoryEdtLayout.setError(getString(R.string.brandcategory_text));\r\n            binding.categoryEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.categoryEdt.requestFocus();\r\n\r\n        }\r\n        if (binding.nameTxt.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.nameTxtLayout.setError(getString(R.string.brandname_text));\r\n            binding.nameTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.nameTxt.requestFocus();\r\n\r\n        }\r\n\r\n\r\n        if (binding.addressEdt.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.addressEdtLayout.setError(getString(R.string.enter_address));\r\n            binding.addressEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.addressEdt.requestFocus();\r\n\r\n        }\r\n\r\n\r\n        if (!binding.emailIdEdt.getText().toString().equals(\"\")) {\r\n            if (!CodeReUse.isEmailValid(binding.emailIdEdt.getText().toString())) {\r\n                isError = true;\r\n                isFocus = true;\r\n                binding.emailIdEdtLayout.setError(getString(R.string.enter_valid_email_address));\r\n                binding.emailIdEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n                binding.emailIdEdt.requestFocus();\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (!binding.phoneTxt.getText().toString().equals(\"\")) {\r\n            if (binding.phoneTxt.getText().toString().length() < 10) {\r\n                binding.phoneTxtLayout.setError(getString(R.string.validphoneno_txt));\r\n                binding.phoneTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n                binding.phoneTxt.requestFocus();\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            if (binding.phoneTxt.getText().toString().equals(\"\")) {\r\n                binding.phoneTxtLayout.setError(getString(R.string.entermobileno_text));\r\n                binding.phoneTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n                binding.phoneTxt.requestFocus();\r\n                return;\r\n            }\r\n\r\n        }\r\n        if (!isError) {\r\n            Bitmap bitmap = null;\r\n            if (selectedImagesBitmap != null) {\r\n                bitmap = selectedImagesBitmap;\r\n            }\r\n            Bitmap bitmap1 = null;\r\n            if (selectedImagesBitmap != null) {\r\n                bitmap1 = selectedImagesBitmap;\r\n            }\r\n            addBrand(bitmap, bitmap1);\r\n        }\r\n\r\n    }\r\n\r\n    public void showFragmentList(int callingFlag, String title, ArrayList<CommonListModel> datalist) {\r\n        bottomSheetFragment = new ListBottomFragment();\r\n        Log.e(\"Size---\", String.valueOf(datalist.size()));\r\n        bottomSheetFragment.setListData(callingFlag, title, datalist);\r\n        if (bottomSheetFragment.isVisible()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        if (bottomSheetFragment.isAdded()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        bottomSheetFragment.show(getSupportFragmentManager(), bottomSheetFragment.getTag());\r\n    }\r\n\r\n    private void addBrand(Bitmap img, Bitmap img1) {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Log.e(\"API\", APIs.ADD_BRAND);\r\n        Log.e(\"API\", preafManager.getUserToken());\r\n        File img1File = null;\r\n        if (img != null) {\r\n            img1File = CodeReUse.createFileFromBitmap(act, \"photo.jpeg\", img);\r\n        }\r\n        File img1File1 = null;\r\n        if (img1 != null) {\r\n            img1File1 = CodeReUse.createFileFromBitmap(act, \"photo.jpeg\", img1);\r\n        }\r\n\r\n        ANRequest.MultiPartBuilder request = AndroidNetworking.upload(APIs.ADD_BRAND)\r\n                .addHeaders(\"Accept\", \"application/json\")\r\n                .addHeaders(\"Content-Type\", \"application/json\")\r\n                .addHeaders(\"Authorization\", \"Bearer\" + preafManager.getUserToken())\r\n                .addMultipartParameter(\"br_category\", commonListModel.getId())\r\n                .addMultipartParameter(\"br_name\", binding.nameTxt.getText().toString())\r\n                .addMultipartParameter(\"br_phone\", binding.phoneTxt.getText().toString())\r\n                .addMultipartParameter(\"br_address\", binding.addressEdt.getText().toString())\r\n                .addMultipartParameter(\"br_website\", binding.websiteEdt.getText().toString())\r\n                .addMultipartParameter(\"br_email\", binding.emailIdEdt.getText().toString())\r\n                .setTag(\"Add User\")\r\n                .setPriority(Priority.HIGH);\r\n\r\n        if (img1File != null) {\r\n            request.addMultipartFile(\"br_logo\", img1File);\r\n            Log.e(\"br_logo\", String.valueOf(img1File));\r\n        }\r\n\r\n        if (img1File1 != null) {\r\n            request.addMultipartFile(\"frame\", img1File1);\r\n            Log.e(\"frame\", String.valueOf(img1File1));\r\n        }\r\n\r\n        request.build().setUploadProgressListener(new UploadProgressListener() {\r\n            @Override\r\n            public void onProgress(long bytesUploaded, long totalBytes) {\r\n                // do anything with progress\r\n            }\r\n        })\r\n                .getAsJSONObject(new JSONObjectRequestListener() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        Utility.Log(\"Verify-Response\", response);\r\n                        ArrayList<BrandListItem> brandListItems = new ArrayList<>();\r\n                        try {\r\n\r\n                            if (response.getBoolean(\"status\")) {\r\n                                JSONObject jsonArray = response.getJSONObject(\"data\");\r\n                                is_completed = jsonArray.getString(\"is_completed\");\r\n                                alertDialogBuilder.setMessage(ResponseHandler.getString(response, \"message\"));\r\n                                alertDialogBuilder.setPositiveButton(\"Ok\", new DialogInterface.OnClickListener() {\r\n                                    @Override\r\n                                    public void onClick(DialogInterface arg0, int arg1) {\r\n                                        preafManager.loginStep(is_completed);\r\n                                        if (is_completed.equals(\"2\")) {\r\n                                            getBrandList();\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n                                AlertDialog alertDialog = alertDialogBuilder.create();\r\n                                alertDialog.setCancelable(false);\r\n                                alertDialog.show();\r\n\r\n\r\n                            }\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(ANError error) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n\r\n                        if (error.getErrorCode() != 0) {\r\n                            Log.e(\"onError errorCode : \", String.valueOf(error.getErrorCode()));\r\n                            Log.e(\"onError errorBody : \", error.getErrorBody());\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        } else {\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        }\r\n\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void alertListenerClick() {\r\n        requestAgain();\r\n    }\r\n\r\n    private void requestAgain() {\r\n        ActivityCompat.requestPermissions(act,\r\n                new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                        Manifest.permission.READ_EXTERNAL_STORAGE},\r\n                CodeReUse.ASK_PERMISSSION);\r\n    }\r\n\r\n    private void getBrandCategory(int flag) {\r\n        String apiUrl = \"\";\r\n        int requestedMethod = 0;\r\n\r\n        if (flag == BRAND_CATEGORY) {\r\n            apiUrl = APIs.GET_BRAND_CATEGORY;\r\n            requestedMethod = Request.Method.POST;\r\n        }\r\n\r\n        Utility.Log(\"API : \", apiUrl);\r\n\r\n        StringRequest request = new StringRequest(requestedMethod, apiUrl, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n\r\n\r\n                Utility.Log(flag + \"- Response : \", response);\r\n                try {\r\n                    if (ResponseHandler.isSuccess(response, null)) {\r\n                        JSONObject responseJson = ResponseHandler.createJsonObject(response);\r\n                        JSONArray jsonArray = ResponseHandler.getJSONArray(responseJson, \"data\");\r\n                        Log.e(\"jsonArray-\", jsonArray.toString());\r\n                        for (int i = 0; i < jsonArray.length(); i++) {\r\n                            JSONObject itemObj = jsonArray.getJSONObject(i);\r\n                            CommonListModel listModel = new CommonListModel();\r\n                            listModel.setLayoutType(CommonListModel.LAYOUT_BLOCK);\r\n                            listModel.setId(ResponseHandler.getString(itemObj, \"id\"));\r\n                            listModel.setName(ResponseHandler.getString(itemObj, \"biz_cat_name\"));\r\n                            BRANDTypeList.add(listModel);\r\n                        }\r\n                        Log.w(\"Size\", String.valueOf(BRANDTypeList.size()));\r\n                    }\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                error.printStackTrace();\r\n            }\r\n        }) {\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                HashMap<String, String> map = new HashMap<>();\r\n\r\n\r\n                Utility.Log(\"Params : \", map.toString());\r\n                return map;\r\n            }\r\n        };\r\n        RequestQueue queue = Volley.newRequestQueue(this);\r\n        queue.add(request);\r\n\r\n    }\r\n\r\n    private void pickerView(int actionId, boolean viewMode, Bitmap selectedBitmap) {\r\n        PickerFragment pickerFragment = new PickerFragment(act);\r\n        pickerFragment.setEnableViewMode(viewMode);\r\n        pickerFragment.setActionId(actionId);\r\n\r\n        if (viewMode) {\r\n            pickerFragment.setSelectedBitmapForFullView(selectedBitmap);\r\n        }\r\n        PickerFragment.HandlerImageLoad imageLoad = new PickerFragment.HandlerImageLoad() {\r\n            @Override\r\n            public void onGalleryResult(int flag, Bitmap bitmap) {\r\n                if (flag == Constant.PICKER_FIRST) {\r\n                    binding.viewImgFirst.setImageBitmap(bitmap);\r\n                    binding.imgEmptyStateFirst.setVisibility(View.GONE);\r\n                    binding.actionDeleteFirst.setVisibility(View.VISIBLE);\r\n                    selectedImagesBitmap = bitmap;\r\n                    binding.viewImgFirst.setTag(\"1\");\r\n                    if (!isEditModeEnable) {\r\n\r\n                    }\r\n                    binding.viewImgFirst.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n\r\n            }\r\n        };\r\n        pickerFragment.setImageLoad(imageLoad);\r\n        pickerFragment.show(getSupportFragmentManager(), pickerFragment.getTag());\r\n    }\r\n\r\n    private void getBrandList() {\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Log.e(\"addbrandresponce\", response);\r\n                ArrayList<BrandListItem> brandListItems = new ArrayList<>();\r\n                try {\r\n                    JSONObject res = new JSONObject(response);\r\n\r\n                    JSONArray jsonArray1 = res.getJSONArray(\"data\");\r\n                    for (int i = 0; i < jsonArray1.length(); i++) {\r\n                        JSONObject jsonObject = jsonArray1.getJSONObject(i);\r\n                        BrandListItem brandListItemm = new BrandListItem();\r\n                        brandListItemm.setId(ResponseHandler.getString(jsonObject, \"id\"));\r\n                        brandListItemm.setCategoryId(ResponseHandler.getString(jsonObject, \"br_category_id\"));\r\n                        brandListItemm.setCategoryName(ResponseHandler.getString(jsonObject, \"br_category_name\"));\r\n                        brandListItemm.setName(ResponseHandler.getString(jsonObject, \"br_name\"));\r\n                        brandListItemm.setPhonenumber(ResponseHandler.getString(jsonObject, \"br_phone\"));\r\n                        brandListItemm.setWebsite(ResponseHandler.getString(jsonObject, \"br_website\"));\r\n                        brandListItemm.setEmail(ResponseHandler.getString(jsonObject, \"br_email\"));\r\n                        brandListItemm.setAddress(ResponseHandler.getString(jsonObject, \"br_address\"));\r\n                        brandListItemm.setLogo(ResponseHandler.getString(jsonObject, \"br_logo\"));\r\n                        brandListItemm.setPackage_id(ResponseHandler.getString(jsonObject, \"package_id\"));\r\n                        brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, \"is_frame\"));\r\n                        brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, \"frame_message\"));\r\n                        brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, \"fream_base_url\"));\r\n                        brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, \"is_payment_pending\"));\r\n                        brandListItemm.setPayment_message(ResponseHandler.getString(jsonObject, \"payment_message\"));\r\n                        brandListItemm.setPackagename(ResponseHandler.getString(jsonObject, \"package\"));\r\n                        brandListItemm.setRate(ResponseHandler.getString(jsonObject, \"rate\"));\r\n                        brandListItemm.setPackagemessage(ResponseHandler.getString(jsonObject, \"package_message\"));\r\n                        brandListItemm.setNo_of_total_image(ResponseHandler.getString(jsonObject, \"no_of_img\"));\r\n                        brandListItemm.setNo_of_used_image(ResponseHandler.getString(jsonObject, \"no_of_used_img\"));\r\n                        brandListItemm.setNo_of_frame(ResponseHandler.getString(jsonObject, \"no_of_frame\"));\r\n                        brandListItemm.setNo_of_remaining(ResponseHandler.getString(jsonObject, \"remaining_img\"));\r\n                        brandListItemm.setExpiery_date(ResponseHandler.getString(jsonObject, \"expire_date\"));\r\n\r\n\r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"br_frame\");\r\n                        ArrayList<FrameItem> frameItems = null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n\r\n                        brandListItemm.setFrame(frameItems);\r\n                        brandListItems.add(brandListItemm);\r\n                    }\r\n\r\n\r\n                    preafManager.setAddBrandList(brandListItems);\r\n                    preafManager.setIS_Brand(true);\r\n\r\n                    if (brandListItems.size() != 0) {\r\n                        preafManager.setActiveBrand(brandListItems.get(0));\r\n                    }\r\n\r\n\r\n                    Intent i = new Intent(act, HomeActivity.class);\r\n                    startActivity(i);\r\n                    overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n                    finish();\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n                        String body;\r\n                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                        Log.e(\"Error \", body);\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\", \"Bearer \" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    @Override\r\n    public void onItemSelection(int calledFlag, int position, CommonListModel listModel) {\r\n        if (bottomSheetFragment != null && bottomSheetFragment.isVisible()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        if (calledFlag == BRAND_CATEGORY) {\r\n            binding.categoryEdt.setText(listModel.getName());\r\n            commonListModel = listModel;\r\n        }\r\n    }\r\n\r\n    public void captureScreenShort() {\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n    }\r\n\r\n    @Override\r\n    public boolean onMenuItemClick(MenuItem item) {\r\n         switch (item.getItemId()) {\r\n            case R.id.logo:\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n   /* @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n\r\n        MenuInflater mi = getMenuInflater();\r\n        mi.inflate(R.menu.menu,menu);\r\n        return true;\r\n    }\r\n    public void pop(View v){\r\n        PopupMenu popup = new PopupMenu(this,v);\r\n        MenuInflater mi = getMenuInflater();\r\n        mi.inflate(R.menu.menu,popup.getMenu());\r\n        popup.show();\r\n\r\n    }\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        int id = item.getItemId();\r\n        switch (id) {\r\n            case R.id.log_out_brand:\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n                return true;\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n    @Override\r\n    public boolean onMenuItemClick(MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case R.id.log_out_brand:\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n                break;\r\n\r\n        }\r\n        return true;\r\n    }*/\r\n\r\n/*\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.menu, menu);\r\n        return true;\r\n    }\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        Toast.makeText(this, \"Selected Item: \" +item.getTitle(), Toast.LENGTH_SHORT).show();\r\n        switch (item.getItemId()) {\r\n            case R.id.logo:\r\n\r\n                return true;\r\n\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }*/\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/AddBranddActivity.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Activity/AddBranddActivity.java	(date 1609249079469)
@@ -487,6 +487,7 @@
                         brandListItemm.setLogo(ResponseHandler.getString(jsonObject, "br_logo"));
                         brandListItemm.setPackage_id(ResponseHandler.getString(jsonObject, "package_id"));
                         brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, "is_frame"));
+                        brandListItemm.setSubscriptionDate(ResponseHandler.getString(jsonObject,"subscription_date"));
                         brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, "frame_message"));
                         brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, "fream_base_url"));
                         brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, "is_payment_pending"));
Index: app/src/main/res/layout/activity_view_all_image.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:shimmer=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:theme=\"@style/AppTheme_material_theme\"\r\n        tools:context=\".Activity.ViewAllImage\">\r\n\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:id=\"@+id/my_toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"@dimen/_40sdp\"\r\n            android:background=\"@color/colorPrimary\"\r\n            android:elevation=\"4dp\"\r\n            android:theme=\"@style/ThemeOverlay.AppCompat.ActionBar\"\r\n            android:visibility=\"visible\"\r\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\">\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/main_linearlayout_title\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"@dimen/_70sdp\"\r\n                android:layout_marginTop=\"@dimen/_10sdp\"\r\n                android:layout_marginRight=\"@dimen/_7sdp\"\r\n                android:elevation=\"0dp\">\r\n\r\n                <RelativeLayout\r\n\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"@dimen/_70sdp\"\r\n                    android:layout_marginRight=\"@dimen/_7sdp\"\r\n                    android:elevation=\"0dp\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/backIcon\"\r\n                        android:layout_width=\"23dp\"\r\n                        android:layout_height=\"23dp\"\r\n                        android:layout_alignParentLeft=\"true\"\r\n                        android:layout_marginLeft=\"6dp\"\r\n                        android:layout_marginRight=\"10dp\"\r\n                        android:background=\"@drawable/ic_left_arrow\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/titleName\"\r\n                        android:layout_width=\"@dimen/_120sdp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_toEndOf=\"@+id/backIcon\"\r\n                        android:ellipsize=\"marquee\"\r\n                        android:focusable=\"true\"\r\n                        android:focusableInTouchMode=\"true\"\r\n                        android:fontFamily=\"@font/montserrat_semibold\"\r\n                        android:marqueeRepeatLimit=\"marquee_forever\"\r\n                        android:scrollHorizontally=\"true\"\r\n                        android:singleLine=\"true\"\r\n                        android:text=\"My Business\"\r\n                        android:textColor=\"@color/colorNavText\"\r\n                        android:textSize=\"@dimen/_13sdp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                </RelativeLayout>\r\n\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/downloadIcon\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                    android:fontFamily=\"@font/inter_semibold\"\r\n                    android:src=\"@drawable/ic_baseline_cloud_download_24\"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_14sdp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/shareIcon\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                    android:layout_toLeftOf=\"@+id/downloadIcon\"\r\n                    android:fontFamily=\"@font/inter_semibold\"\r\n                    android:src=\"@drawable/ic_baseline_share_24\"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_14sdp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/fabroutIcon\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                    android:layout_toLeftOf=\"@+id/shareIcon\"\r\n                    android:fontFamily=\"@font/inter_semibold\"\r\n                    android:src=\"@drawable/ic_baseline_favorite_border_24\"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_14sdp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/addfabroutIcon\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                    android:layout_toLeftOf=\"@+id/shareIcon\"\r\n                    android:fontFamily=\"@font/inter_semibold\"\r\n                    android:src=\"@drawable/ic_baseline_favorite_24\"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_14sdp\"\r\n                    android:textStyle=\"bold\"\r\n                    android:visibility=\"gone\" />\r\n\r\n            </RelativeLayout>\r\n        </androidx.appcompat.widget.Toolbar>\r\n\r\n        <ImageView\r\n            android:layout_width=\"@dimen/_300sdp\"\r\n            android:layout_height=\"@dimen/_300sdp\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_marginStart=\"-100dp\"\r\n            android:src=\"@drawable/bottom\">\r\n\r\n        </ImageView>\r\n\r\n        <RelativeLayout\r\n\r\n            android:id=\"@+id/recommendation\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_below=\"@+id/my_toolbar\"\r\n            android:visibility=\"visible\">\r\n\r\n            <androidx.cardview.widget.CardView\r\n                android:id=\"@+id/recoImgeRelative\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"@dimen/_300sdp\"\r\n                android:background=\"@color/colorNavText\"\r\n                android:elevation=\"@dimen/_5sdp\"\r\n                app:cardElevation=\"@dimen/_15sdp\">\r\n\r\n                <RelativeLayout\r\n                    android:id=\"@+id/relative\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"@dimen/_300sdp\">\r\n\r\n\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/backgrounImageDuplicate\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"@dimen/_300sdp\"\r\n                        android:scaleType=\"fitXY\"\r\n                        android:visibility=\"invisible\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/recoImage\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:scaleType=\"fitXY\" />\r\n                    <ProgressBar\r\n                        android:id=\"@+id/simpleProgressBar\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        android:layout_centerVertical=\"true\"\r\n                        android:visibility=\"visible\" />\r\n                    <ImageView\r\n                        android:id=\"@+id/FrameImageDuplicate\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:background=\"@android:color/transparent\"\r\n                        android:scaleType=\"fitXY\"\r\n                        android:visibility=\"gone\" />\r\n\r\n                    <RelativeLayout\r\n                        android:id=\"@+id/elementCustomFrame\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\">\r\n\r\n\r\n                        <LinearLayout\r\n                            android:background=\"@android:color/transparent\"\r\n                            android:id=\"@+id/logoEmptyState\"\r\n                            android:layout_width=\"@dimen/_50sdp\"\r\n                            android:layout_height=\"@dimen/_50sdp\"\r\n                            android:gravity=\"center_vertical\"\r\n                            android:orientation=\"vertical\">\r\n\r\n                            <ImageView\r\n                                android:layout_width=\"@dimen/_20sdp\"\r\n                                android:layout_height=\"@dimen/_20sdp\"\r\n                                android:layout_gravity=\"center_horizontal\"\r\n                                android:src=\"@drawable/ic_gallry\" />\r\n\r\n                            <TextView\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_gravity=\"center_horizontal\"\r\n                                android:fontFamily=\"@font/inter_regular\"\r\n                                android:text=\"Select Logo\"\r\n                                android:textAlignment=\"center\"\r\n                                android:textColor=\"@color/colorPrimary\"\r\n                                android:textSize=\"@dimen/_6sdp\" />\r\n                        </LinearLayout>\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/logoCustom\"\r\n                            android:layout_width=\"@dimen/_50sdp\"\r\n                            android:layout_height=\"@dimen/_50sdp\"\r\n                            android:scaleType=\"centerCrop\"\r\n                            android:src=\"@drawable/placeholder\"\r\n                            android:visibility=\"gone\" />\r\n\r\n\r\n                            <RelativeLayout\r\n                                android:id=\"@+id/elementFooter\"\r\n                                android:layout_alignParentBottom=\"true\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\">\r\n\r\n                            </RelativeLayout>\r\n\r\n                    </RelativeLayout>\r\n\r\n                    <ImageView\r\n                        android:visibility=\"gone\"\r\n                        android:id=\"@+id/backendFrame\"\r\n                        android:scaleType=\"fitXY\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"/>\r\n\r\n\r\n\r\n                </RelativeLayout>\r\n            </androidx.cardview.widget.CardView>\r\n\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/SliderDots\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/recoImgeRelative\"\r\n                android:layout_marginTop=\"@dimen/_5sdp\"\r\n                android:gravity=\"center_vertical|center_horizontal\"\r\n                android:orientation=\"horizontal\"\r\n                android:visibility=\"visible\" />\r\n\r\n\r\n            <LinearLayout\r\n                    android:id=\"@+id/clorframeLayout\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_below=\"@+id/recoImgeRelative\"\r\n                    android:orientation=\"vertical\"\r\n                    android:visibility=\"visible\">\r\n\r\n                    <RelativeLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\">\r\n\r\n                        <com.google.android.material.tabs.TabLayout\r\n                            android:id=\"@+id/tabLayout\"\r\n                            style=\"@style/MyTabLayout\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_below=\"@+id/appbarLayout\"\r\n                            android:layout_marginTop=\"-3dp\"\r\n\r\n                            android:background=\"@android:color/transparent\"\r\n                            app:tabGravity=\"fill\"\r\n                            app:tabIndicatorHeight=\"0dp\"\r\n                            app:tabMinWidth=\"@dimen/_60sdp\"\r\n                            app:tabMode=\"scrollable\" />\r\n\r\n                        <!--android:layout_marginRight=\"@dimen/_60sdp\"-->\r\n                    </RelativeLayout>\r\n\r\n                    <androidx.viewpager.widget.ViewPager\r\n                        android:id=\"@+id/viewPager\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        tools:layout_editor_absoluteX=\"8dp\" />\r\n                </LinearLayout>\r\n\r\n                <RelativeLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_marginTop=\"@dimen/_10sdp\"\r\n                    android:paddingLeft=\"@dimen/_5sdp\"\r\n\r\n                    android:paddingRight=\"@dimen/_5sdp\"\r\n                    android:visibility=\"gone\">\r\n\r\n                    <androidx.recyclerview.widget.RecyclerView\r\n                        android:id=\"@+id/viewRecoRecycler\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:visibility=\"visible\" />\r\n\r\n\r\n                    <com.facebook.shimmer.ShimmerFrameLayout\r\n                        android:id=\"@+id/shimmer_view_container\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center\"\r\n                        android:orientation=\"vertical\"\r\n                        shimmer:shimmer_duration=\"800\">\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:orientation=\"vertical\">\r\n\r\n                            <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                            <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                            <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                            <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                            <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n                        </LinearLayout>\r\n\r\n                    </com.facebook.shimmer.ShimmerFrameLayout>\r\n\r\n                    <LinearLayout\r\n                        android:id=\"@+id/emptyStateLayout\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:gravity=\"center\"\r\n                        android:visibility=\"gone\">\r\n                        <ImageView\r\n                            android:layout_gravity=\"center\"\r\n\r\n                            android:src=\"@drawable/notification\"\r\n                            android:layout_width=\"@dimen/_200sdp\"\r\n                            android:layout_height=\"@dimen/_200sdp\">\r\n\r\n                        </ImageView>\r\n                        <TextView\r\n                            android:id=\"@+id/emptyStateMsg\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"center_horizontal|center_vertical\"\r\n                            android:fontFamily=\"@font/poppins_regular\"\r\n                            android:text=\"No Image Found\"\r\n                            android:textSize=\"@dimen/_12sdp\" />\r\n                    </LinearLayout>\r\n\r\n                    <ImageView\r\n\r\n                        android:id=\"@+id/allSetImage\"\r\n                        android:layout_width=\"@dimen/_100sdp\"\r\n                        android:layout_height=\"@dimen/_100sdp\"\r\n                        android:layout_below=\"@+id/viewRecoRecycler\"\r\n                        android:scaleType=\"fitXY\"\r\n                        android:visibility=\"gone\" />\r\n\r\n\r\n                </RelativeLayout>\r\n           <!-- </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>-->\r\n        </RelativeLayout>\r\n\r\n\r\n    </RelativeLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_view_all_image.xml	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/res/layout/activity_view_all_image.xml	(date 1609240746745)
@@ -160,6 +160,8 @@
                         android:layout_width="match_parent"
                         android:layout_height="match_parent"
                         android:scaleType="fitXY" />
+
+
                     <ProgressBar
                         android:id="@+id/simpleProgressBar"
                         android:layout_width="wrap_content"
@@ -176,10 +178,17 @@
                         android:visibility="gone" />
 
                     <RelativeLayout
+                        android:background="@drawable/element_background"
                         android:id="@+id/elementCustomFrame"
                         android:layout_width="match_parent"
                         android:layout_height="match_parent">
 
+                        <ImageView
+                            android:id="@+id/borderLayoutElement"
+                            android:layout_width="match_parent"
+                            android:layout_height="match_parent"
+                            android:scaleType="fitXY" />
+
 
                         <LinearLayout
                             android:background="@android:color/transparent"
@@ -262,6 +271,16 @@
                         android:layout_height="wrap_content">
 
                         <com.google.android.material.tabs.TabLayout
+                            app:tabTextAppearance="@style/CustomViewAllTab"
+                            android:id="@+id/tabLayout"
+                            android:layout_width="match_parent"
+                            app:tabMode="scrollable"
+                            android:layout_height="wrap_content"
+                            android:layout_below="@+id/appbarLayout"
+                            android:layout_marginTop="-3dp"
+                            android:background="@color/colorNavText"
+                            app:tabIndicatorColor="@color/colorPrimary" />
+                      <!--  <com.google.android.material.tabs.TabLayout
                             android:id="@+id/tabLayout"
                             style="@style/MyTabLayout"
                             android:layout_width="match_parent"
@@ -271,9 +290,11 @@
 
                             android:background="@android:color/transparent"
                             app:tabGravity="fill"
+                            app:tabIndicatorColor="@color/colorPrimary"
                             app:tabIndicatorHeight="0dp"
                             app:tabMinWidth="@dimen/_60sdp"
-                            app:tabMode="scrollable" />
+                            app:tabMode="scrollable" />-->
+
 
                         <!--android:layout_marginRight="@dimen/_60sdp"-->
                     </RelativeLayout>
Index: app/src/main/java/com/app/brandmania/Activity/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.IntentSender;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.graphics.drawable.GradientDrawable;\r\nimport android.graphics.drawable.LayerDrawable;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.text.Html;\r\nimport android.util.DisplayMetrics;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.webkit.WebView;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Common.MakeMyBrandApp;\r\nimport com.app.brandmania.Common.ObserverActionID;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Model.VersionListIItem;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Fragment.bottom.CustomFragment;\r\nimport com.app.brandmania.Fragment.bottom.DownloadsFragment;\r\nimport com.app.brandmania.Fragment.bottom.HomeFragment;\r\nimport com.app.brandmania.Fragment.bottom.ProfileFragment;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.google.android.play.core.appupdate.AppUpdateInfo;\r\nimport com.google.android.play.core.appupdate.AppUpdateManager;\r\nimport com.google.android.play.core.appupdate.AppUpdateManagerFactory;\r\nimport com.google.android.play.core.install.model.UpdateAvailability;\r\nimport com.google.android.play.core.tasks.OnSuccessListener;\r\nimport com.google.android.play.core.tasks.Task;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Observable;\r\nimport java.util.Timer;\r\n\r\nimport static com.google.android.play.core.install.model.AppUpdateType.IMMEDIATE;\r\n\r\npublic class HomeActivity extends BaseActivity implements BottomNavigationView.OnNavigationItemSelectedListener {\r\n    VersionListIItem versionListIItem;\r\n    PreafManager preafManager;\r\n    private AppUpdateManager appUpdateManager;\r\n    private Task<AppUpdateInfo> appUpdateInfoTask;\r\n    private Activity act;\r\n\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home);\r\n        //getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        preafManager=new PreafManager(this);\r\n        act=this;\r\n        getUpadte();\r\n        checkForUpdates();\r\n        loadFragment(new HomeFragment());\r\n        BottomNavigationView navigation = findViewById(R.id.navigation);\r\n        navigation.setOnNavigationItemSelectedListener(this);\r\n        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);\r\n\r\n    }\r\n\r\n\r\n    @SuppressLint(\"NonConstantResourceId\")\r\n    @Override public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        Fragment fragment = null;\r\n        switch (menuItem.getItemId()) {\r\n            case R.id.navigation_home:\r\n                fragment = new HomeFragment();\r\n\r\n                overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                break;\r\n\r\n            case R.id.navigation_custom:\r\n                fragment = new CustomFragment();\r\n                overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                break;\r\n\r\n\r\n            case R.id.navigation_download:\r\n                fragment = new DownloadsFragment();\r\n                overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                break;\r\n\r\n            case R.id.navigation_profile:\r\n                fragment = new ProfileFragment();\r\n                overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                break;\r\n        }\r\n        return loadFragment(fragment);\r\n    }\r\n    private boolean loadFragment(Fragment fragment) {\r\n        //switching fragment\r\n        if (fragment != null) {\r\n            getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container, fragment).commit();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    //app updates\r\n    private void checkForUpdates() {\r\n        appUpdateManager = AppUpdateManagerFactory.create(act);\r\n        appUpdateInfoTask = appUpdateManager.getAppUpdateInfo();\r\n\r\n        // Checks that the platform will allow the specified type of update.\r\n        appUpdateInfoTask.addOnSuccessListener(new OnSuccessListener<AppUpdateInfo>() {\r\n            @Override\r\n            public void onSuccess(AppUpdateInfo appUpdateInfo) {\r\n                if (appUpdateInfo.updateAvailability() == UpdateAvailability.UPDATE_AVAILABLE\r\n                        // For a flexible update, use AppUpdateType.FLEXIBLE\r\n                        && appUpdateInfo.isUpdateTypeAllowed(IMMEDIATE)) {\r\n                    startAppUpdates(appUpdateInfo);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private void startAppUpdates(AppUpdateInfo appUpdateInfo) {\r\n        try {\r\n            appUpdateManager.startUpdateFlowForResult(\r\n                    appUpdateInfo,\r\n                    IMMEDIATE,\r\n                    act,\r\n                    Constant.APP_UPDATES);\r\n        } catch (IntentSender.SendIntentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == Constant.APP_UPDATES) {\r\n            if (resultCode == RESULT_CANCELED) {\r\n                checkForUpdates();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (appUpdateManager != null) {\r\n            appUpdateManager\r\n                    .getAppUpdateInfo()\r\n                    .addOnSuccessListener(\r\n                            new OnSuccessListener<AppUpdateInfo>() {\r\n                                @Override\r\n                                public void onSuccess(AppUpdateInfo appUpdateInfo) {\r\n                                    if (appUpdateInfo.updateAvailability()\r\n                                            == UpdateAvailability.DEVELOPER_TRIGGERED_UPDATE_IN_PROGRESS) {\r\n                                        // If an in-app update is already running, resume the update.\r\n                                        try {\r\n                                            appUpdateManager.startUpdateFlowForResult(\r\n                                                    appUpdateInfo,\r\n                                                    IMMEDIATE,\r\n                                                    act,\r\n                                                    Constant.APP_UPDATES);\r\n                                        } catch (IntentSender.SendIntentException e) {\r\n                                            e.printStackTrace();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            });\r\n        }\r\n\r\n    }\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    public void setWhiteNavigationBar( Activity act) {\r\n        Window window = getWindow();\r\n        if (window != null) {\r\n            DisplayMetrics metrics = new DisplayMetrics();\r\n            window.getWindowManager().getDefaultDisplay().getMetrics(metrics);\r\n            GradientDrawable dimDrawable = new GradientDrawable();\r\n            // ...customize your dim effect here\r\n            GradientDrawable navigationBarDrawable = new GradientDrawable();\r\n            navigationBarDrawable.setShape(GradientDrawable.RECTANGLE);\r\n            navigationBarDrawable.setColor(act.getColor(R.color.Graycolor));\r\n            // navigationBarDrawable.setTint(act.getColor(R.color.WhiteColor));\r\n            Drawable[] layers = {dimDrawable, navigationBarDrawable};\r\n            LayerDrawable windowBackground = new LayerDrawable(layers);\r\n            windowBackground.setLayerInsetTop(1, metrics.heightPixels);\r\n            window.setBackgroundDrawable(windowBackground);\r\n        }\r\n    }\r\n    public void onBackPressed() {\r\n        CodeReUse.activityBackPress(this);\r\n    }\r\n    public void captureScreenShort() {\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n    }\r\n    private void getUpadte() {\r\n\r\n        Utility.Log(\"API : \", APIs.GET_UPDATE);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, APIs.GET_UPDATE,new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.Log(\"GET_UPDATE : \", response);\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    JSONObject jsonArray1 = jsonObject.getJSONObject(\"data\");\r\n                    versionListIItem=new VersionListIItem();\r\n                    versionListIItem.setId(jsonArray1.getString(\"id\"));\r\n                    versionListIItem.setAppliactionVersion(jsonArray1.getString(\"application_version\"));\r\n                    versionListIItem.setMessage(jsonArray1.getString(\"message\"));\r\n                    versionListIItem.setForcefullyUpdate(jsonArray1.getString(\"forcefully_update\"));\r\n                    versionListIItem.setIsNew(jsonArray1.getString(\"is_new\"));\r\n                    versionListIItem.setCreatedAt(jsonArray1.getString(\"created_at\"));\r\n                    versionListIItem.setUpdatedAt(jsonArray1.getString(\"updated_at\"));\r\n                    versionListIItem.setDeletedAt(jsonArray1.getString(\"deleted_at\"));\r\n\r\n\r\n//                    int apiVERSION=Integer.parseInt(versionListIItem.getAppliactionVersion().replace(\".\",\"\"));\r\n//                    int currentVERSION=Integer.parseInt(String.valueOf(Constant.F_VERSION).replace(\".\",\"\"));\r\n//\r\n//                    if (apiVERSION>currentVERSION)\r\n//                    {\r\n//                        // Create an alert builder\r\n//                        AlertDialog.Builder builder = new AlertDialog.Builder(act);\r\n//                        // set the custom layout\r\n//                        final View customLayout = getLayoutInflater().inflate(R.layout.frame_alert_box, null);\r\n//                        TextView Message=customLayout.findViewById(R.id.messageMaessage);\r\n//                        ImageView CloseImg=customLayout.findViewById(R.id.CloseImg);\r\n//                        Message.setText(jsonArray1.getString(\"message\"));\r\n//\r\n//                        builder.setView(customLayout);\r\n//\r\n//\r\n//                        // create and show\r\n//                        // the alert dialog\r\n//                        AlertDialog dialog\r\n//                                = builder.create();\r\n//                        dialog.getWindow().setBackgroundDrawableResource(R.color.colorNavText);\r\n//                        dialog.setCancelable(false);\r\n//                        dialog.show();\r\n//                        CloseImg.setOnClickListener(new View.OnClickListener() {\r\n//                            @Override\r\n//                            public void onClick(View view) {\r\n//                                dialog.dismiss();\r\n//                            }\r\n//                        });\r\n//\r\n//                        Button pbutton = dialog.getButton(DialogInterface.BUTTON_POSITIVE);\r\n//                        pbutton.setBackgroundColor(Color.WHITE);\r\n//                    }\r\n\r\n                    int apiVERSION=Integer.parseInt(versionListIItem.getAppliactionVersion().replace(\".\",\"\"));\r\n                    int currentVERSION=Integer.parseInt(String.valueOf(Constant.F_VERSION).replace(\".\",\"\"));\r\n\r\n                    if (apiVERSION>currentVERSION)\r\n                    {\r\n                        // Create an alert builder\r\n                        AlertDialog.Builder builder = new AlertDialog.Builder(act);\r\n                        // set the custom layout\r\n                        final View customLayout = getLayoutInflater().inflate(R.layout.frame_alert_box, null);\r\n                        ImageView cloasedBox=customLayout.findViewById(R.id.CloseImg);\r\n                        WebView webView=customLayout.findViewById(R.id.webView);\r\n                        TextView updateTitle=customLayout.findViewById(R.id.updateTitle);\r\n                        Button updateBtn=customLayout.findViewById(R.id.updateBtn);\r\n                        webView.loadData(jsonArray1.getString(\"message\"), \"text/html; charset=utf-8\", \"utf-8\");\r\n                        webView.setBackgroundColor(Color.TRANSPARENT);\r\n                        String htmlString=\"<u>App Update</u>\";\r\n                        updateTitle.setText(Html.fromHtml(htmlString));\r\n                        builder.setView(customLayout);\r\n\r\n                        if (versionListIItem.getForcefullyUpdate().equalsIgnoreCase(\"1\")){\r\n                            cloasedBox.setVisibility(View.GONE);\r\n                        }\r\n\r\n                        // create and show\r\n                        // the alert dialog\r\n                        AlertDialog dialog\r\n                                = builder.create();\r\n                        dialog.getWindow().setBackgroundDrawableResource(R.color.colorNavText);\r\n                        dialog.setCancelable(false);\r\n                        dialog.show();\r\n                        cloasedBox.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                dialog.dismiss();\r\n                            }\r\n                        });\r\n\r\n                        updateBtn.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                Uri uri=Uri.parse(\"https://play.google.com/store/apps/details?id=com.make.mybrand\");\r\n                                Intent intent=new Intent(Intent.ACTION_VIEW,uri);\r\n                                try {\r\n\r\n                                    startActivity(intent);\r\n                                }\r\n                                catch (Exception e)\r\n                                {\r\n\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                        Button pbutton = dialog.getButton(DialogInterface.BUTTON_POSITIVE);\r\n                        pbutton.setBackgroundColor(Color.WHITE);\r\n                  }\r\n\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n//                        String body;\r\n//                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n//                        Log.e(\"Load-Get_Exam \", body);\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/HomeActivity.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Activity/HomeActivity.java	(date 1609248749237)
@@ -69,6 +69,11 @@
 import org.json.JSONException;
 import org.json.JSONObject;
 
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.GregorianCalendar;
 import java.util.HashMap;
 import java.util.Map;
 import java.util.Observable;
@@ -99,6 +104,26 @@
         navigation.setOnNavigationItemSelectedListener(this);
         this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);
 
+
+       /* Date c = Calendar.getInstance().getTime();
+        @SuppressLint("SimpleDateFormat") SimpleDateFormat fmt = new SimpleDateFormat("dd-MM-yyyy");
+        String currDateStr = fmt.format(c);
+        try {
+            Date subscriptionDate = fmt.parse("28-10-2020");
+            Date currentDate = fmt.parse(currDateStr);
+
+            Calendar startCalendar = new GregorianCalendar();
+            startCalendar.setTime(subscriptionDate);
+            Calendar endCalendar = new GregorianCalendar();
+            endCalendar.setTime(currentDate);
+            int diffYear = endCalendar.get(Calendar.YEAR) - startCalendar.get(Calendar.YEAR);
+            int diffMonth = diffYear * 12 + endCalendar.get(Calendar.MONTH) - startCalendar.get(Calendar.MONTH);
+            Log.e("Diffrenere",diffMonth+" "+diffYear);
+
+        } catch (ParseException e) {
+            e.printStackTrace();
+        }*/
+
     }
 
 
Index: app/src/main/res/drawable/element_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/element_background.xml	(date 1609237932789)
+++ app/src/main/res/drawable/element_background.xml	(date 1609237932789)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<shape
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <stroke
+        android:width="0.1dp"
+        android:color="@color/colorPrimary" />
+</shape>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/colorNavText\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:visibility=\"visible\"\r\n            android:id=\"@+id/my_toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"@dimen/_70sdp\"\r\n            android:background=\"@drawable/toolbar_background_second\"\r\n            android:elevation=\"4dp\"\r\n            android:theme=\"@style/ThemeOverlay.AppCompat.ActionBar\"\r\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\">\r\n\r\n                <RelativeLayout\r\n                    android:layout_marginTop=\"@dimen/_10sdp\"\r\n                    android:layout_marginRight=\"@dimen/_7sdp\"\r\n                    android:id=\"@+id/main_linearlayout_title\"\r\n                    android:elevation=\"0dp\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"@dimen/_70sdp\">\r\n                          <TextView\r\n                            android:id=\"@+id/firsttitle\"\r\n                            android:text=\"@string/yourbusiness_text\"\r\n                            android:textColor=\"@color/colorNavText\"\r\n                            android:textSize=\"@dimen/_6sdp\"\r\n                            android:fontFamily=\"@font/montserrat_regular\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:textStyle=\"bold\"\r\n                            android:layout_height=\"wrap_content\">\r\n\r\n                        </TextView>\r\n\r\n                        <TextView\r\n                            android:layout_below=\"@+id/firsttitle\"\r\n                            android:id=\"@+id/businessName\"\r\n                            android:text=\"\"\r\n                            android:textColor=\"@color/colorNavText\"\r\n                            android:textSize=\"@dimen/_11sdp\"\r\n\r\n                            android:fontFamily=\"@font/montserrat_semibold\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\">\r\n                        </TextView>\r\n                     <!--   <TextView\r\n                            android:layout_toEndOf=\"@+id/backIcon\"\r\n                            android:layout_marginTop=\"@dimen/_15sdp\"\r\n                            android:id=\"@+id/firsttitle\"\r\n                            android:text=\"@string/yourbusiness_text\"\r\n                            android:textColor=\"@color/colorNavText\"\r\n                            android:textSize=\"@dimen/_8sdp\"\r\n                            android:fontFamily=\"@font/inter_regular\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:textStyle=\"bold\"\r\n                            android:layout_marginLeft=\"@dimen/_12sdp\"\r\n                            android:layout_height=\"wrap_content\">\r\n\r\n                        </TextView>\r\n                        <TextView\r\n                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                            android:layout_toEndOf=\"@+id/backIcon\"\r\n                            android:id=\"@+id/businessName\"\r\n                            android:text=\"QueryFinderSolution\"\r\n                            android:textColor=\"@color/colorNavText\"\r\n                            android:textSize=\"@dimen/_13sdp\"\r\n\r\n                            android:fontFamily=\"@font/inter_extrabold\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\">\r\n                        </TextView>-->\r\n                        <ImageView\r\n                            android:visibility=\"gone\"\r\n                            android:id=\"@+id/backIcon\"\r\n                            android:layout_width=\"@dimen/_20sdp\"\r\n                            android:layout_alignParentStart=\"true\"\r\n                            android:src=\"@drawable/ic_left_arrow\"\r\n                            android:layout_height=\"@dimen/_20sdp\">\r\n\r\n                        </ImageView>\r\n\r\n                </RelativeLayout>\r\n        </androidx.appcompat.widget.Toolbar>\r\n\r\n        <ImageView\r\n            android:layout_marginStart=\"-100dp\"\r\n            android:layout_alignParentBottom=\"true\"\r\n\r\n            android:src=\"@drawable/bottom\"\r\n            android:layout_width=\"@dimen/_300sdp\"\r\n            android:layout_height=\"@dimen/_300sdp\">\r\n\r\n        </ImageView>\r\n\r\n        <ScrollView\r\n            android:layout_below=\"@+id/my_toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:scrollbars=\"none\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_below=\"@+id/my_toolbar\"\r\n                            android:orientation=\"vertical\">\r\n\r\n                                <RelativeLayout\r\n                                    android:id=\"@+id/mybusinessRelative\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"@dimen/_15sdp\"\r\n                                    android:layout_marginTop=\"@dimen/_20sdp\"\r\n                                    android:layout_marginEnd=\"@dimen/_15sdp\"\r\n                                    android:paddingTop=\"@dimen/_7sdp\"\r\n                                    android:paddingBottom=\"@dimen/_7sdp\">\r\n\r\n                                        <ImageView\r\n                                            android:id=\"@+id/myBusinessImage\"\r\n                                            android:layout_width=\"@dimen/_20sdp\"\r\n                                            android:layout_height=\"@dimen/_20sdp\"\r\n                                            android:src=\"@drawable/ic_portfolio_outline\"></ImageView>\r\n\r\n                                        <ImageView\r\n                                            android:layout_width=\"@dimen/_15sdp\"\r\n                                            android:layout_height=\"@dimen/_15sdp\"\r\n                                            android:layout_alignParentEnd=\"true\"\r\n                                            android:padding=\"@dimen/_2sdp\"\r\n                                            android:src=\"@drawable/ic_next\"></ImageView>\r\n\r\n                                        <TextView\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"wrap_content\"\r\n                                            android:layout_centerVertical=\"true\"\r\n                                            android:layout_marginStart=\"@dimen/_10sdp\"\r\n                                            android:layout_toEndOf=\"@+id/myBusinessImage\"\r\n                                            android:fontFamily=\"@font/montserrat_medium\"\r\n                                            android:text=\"@string/mybusinesse_text\"\r\n                                            android:textColor=\"@android:color/black\"\r\n                                            android:textSize=\"@dimen/_12sdp\" />\r\n\r\n                                </RelativeLayout>\r\n\r\n                                <View\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"1dp\"\r\n                                    android:background=\"@color/Graycolor\" />\r\n\r\n                                <RelativeLayout\r\n                                    android:id=\"@+id/myFaqRelative\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"@dimen/_15sdp\"\r\n                                    android:layout_marginTop=\"@dimen/_4sdp\"\r\n                                    android:layout_marginEnd=\"@dimen/_15sdp\"\r\n                                    android:paddingTop=\"@dimen/_7sdp\"\r\n                                    android:paddingBottom=\"@dimen/_7sdp\">\r\n\r\n                                        <ImageView\r\n                                            android:id=\"@+id/myFaqImage\"\r\n                                            android:layout_width=\"@dimen/_20sdp\"\r\n                                            android:layout_height=\"@dimen/_20sdp\"\r\n                                            android:src=\"@drawable/ic_about\"></ImageView>\r\n\r\n                                        <ImageView\r\n                                            android:layout_width=\"@dimen/_15sdp\"\r\n                                            android:layout_height=\"@dimen/_15sdp\"\r\n                                            android:layout_alignParentEnd=\"true\"\r\n\r\n                                            android:padding=\"@dimen/_2sdp\"\r\n                                            android:src=\"@drawable/ic_next\"></ImageView>\r\n\r\n                                        <TextView\r\n                                            android:id=\"@+id/faqactivity\"\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"wrap_content\"\r\n                                            android:layout_centerVertical=\"true\"\r\n                                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                                            android:layout_toEndOf=\"@+id/myFaqImage\"\r\n                                            android:fontFamily=\"@font/montserrat_medium\"\r\n                                            android:text=\"@string/faq_text\"\r\n                                            android:textColor=\"@android:color/black\"\r\n                                            android:textSize=\"@dimen/_12sdp\" />\r\n\r\n                                </RelativeLayout>\r\n\r\n                                <View\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"1dp\"\r\n                                    android:background=\"@color/Graycolor\" />\r\n\r\n                                <RelativeLayout\r\n                                    android:id=\"@+id/partnerProgRelative\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginTop=\"@dimen/_4sdp\"\r\n                                    android:paddingTop=\"@dimen/_7sdp\"\r\n                                    android:paddingBottom=\"@dimen/_7sdp\"\r\n                                    android:visibility=\"gone\">\r\n\r\n                                        <ImageView\r\n                                            android:layout_width=\"@dimen/_15sdp\"\r\n                                            android:layout_height=\"@dimen/_15sdp\"\r\n                                            android:layout_alignParentEnd=\"true\"\r\n                                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                                            android:layout_marginRight=\"@dimen/_10sdp\"\r\n                                            android:src=\"@drawable/ic_next\"></ImageView>\r\n\r\n                                        <ImageView\r\n                                            android:id=\"@+id/partnerProgImage\"\r\n                                            android:layout_width=\"@dimen/_20sdp\"\r\n                                            android:layout_height=\"@dimen/_20sdp\"\r\n\r\n                                            android:layout_marginStart=\"@dimen/_10sdp\"\r\n                                            android:padding=\"@dimen/_2sdp\"\r\n                                            android:src=\"@drawable/ic_hand_shake\"></ImageView>\r\n\r\n                                        <TextView\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"wrap_content\"\r\n                                            android:layout_centerVertical=\"true\"\r\n                                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                                            android:layout_toEndOf=\"@+id/partnerProgImage\"\r\n                                            android:fontFamily=\"@font/inter_regular\"\r\n                                            android:text=\"@string/partnerprogram_text\"\r\n                                            android:textColor=\"@android:color/black\"\r\n                                            android:textSize=\"@dimen/_12sdp\"></TextView>\r\n\r\n                                </RelativeLayout>\r\n\r\n                                <View\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"1dp\"\r\n                                    android:background=\"@color/Graycolor\"\r\n                                    android:visibility=\"gone\" />\r\n\r\n                                <RelativeLayout\r\n                                    android:id=\"@+id/helpandsupportLayout\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginTop=\"@dimen/_4sdp\"\r\n                                    android:paddingTop=\"@dimen/_7sdp\"\r\n                                    android:paddingBottom=\"@dimen/_7sdp\"\r\n                                    android:visibility=\"gone\">\r\n\r\n                                        <ImageView\r\n                                            android:layout_width=\"@dimen/_15sdp\"\r\n                                            android:layout_height=\"@dimen/_15sdp\"\r\n                                            android:layout_alignParentEnd=\"true\"\r\n                                            android:layout_marginRight=\"@dimen/_10sdp\"\r\n                                            android:src=\"@drawable/ic_next\"></ImageView>\r\n\r\n                                        <ImageView\r\n                                            android:id=\"@+id/helpandsupportImage\"\r\n                                            android:layout_width=\"@dimen/_20sdp\"\r\n                                            android:layout_height=\"@dimen/_20sdp\"\r\n                                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                                            android:padding=\"@dimen/_2sdp\"\r\n\r\n                                            android:src=\"@drawable/ic_supporttt\"></ImageView>\r\n\r\n                                        <TextView\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"wrap_content\"\r\n                                            android:layout_centerVertical=\"true\"\r\n                                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                                            android:layout_toEndOf=\"@+id/helpandsupportImage\"\r\n                                            android:fontFamily=\"@font/inter_regular\"\r\n                                            android:text=\"@string/helpandsupport_text\"\r\n                                            android:textColor=\"@android:color/black\"\r\n                                            android:textSize=\"@dimen/_12sdp\" />\r\n\r\n                                </RelativeLayout>\r\n\r\n                                <View\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"1dp\"\r\n                                    android:background=\"@color/Graycolor\"\r\n                                    android:visibility=\"gone\" />\r\n\r\n                                <RelativeLayout\r\n                                    android:id=\"@+id/shareText\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"@dimen/_15sdp\"\r\n                                    android:layout_marginTop=\"@dimen/_4sdp\"\r\n                                    android:layout_marginEnd=\"@dimen/_15sdp\"\r\n                                    android:paddingTop=\"@dimen/_7sdp\"\r\n                                    android:paddingBottom=\"@dimen/_7sdp\">\r\n\r\n                                        <ImageView\r\n                                            android:layout_width=\"@dimen/_15sdp\"\r\n                                            android:layout_height=\"@dimen/_15sdp\"\r\n                                            android:layout_alignParentEnd=\"true\"\r\n                                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n\r\n                                            android:padding=\"@dimen/_2sdp\"\r\n                                            android:src=\"@drawable/ic_next\"></ImageView>\r\n\r\n                                        <ImageView\r\n                                            android:id=\"@+id/shareImage\"\r\n                                            android:layout_width=\"@dimen/_20sdp\"\r\n                                            android:layout_height=\"@dimen/_20sdp\"\r\n                                            android:src=\"@drawable/ic_share\"></ImageView>\r\n\r\n                                        <TextView\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"wrap_content\"\r\n                                            android:layout_centerVertical=\"true\"\r\n                                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                                            android:layout_toEndOf=\"@+id/shareImage\"\r\n                                            android:fontFamily=\"@font/montserrat_medium\"\r\n                                            android:text=\"@string/shareapp_text\"\r\n                                            android:textColor=\"@android:color/black\"\r\n                                            android:textSize=\"@dimen/_12sdp\" />\r\n\r\n                                </RelativeLayout>\r\n\r\n                                <View\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"1dp\"\r\n                                    android:background=\"@color/Graycolor\" />\r\n\r\n                                <RelativeLayout\r\n                                    android:id=\"@+id/rateUsLayout\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"@dimen/_15sdp\"\r\n                                    android:layout_marginTop=\"@dimen/_4sdp\"\r\n                                    android:layout_marginEnd=\"@dimen/_15sdp\"\r\n                                    android:paddingTop=\"@dimen/_7sdp\"\r\n                                    android:paddingBottom=\"@dimen/_7sdp\"\r\n                                    android:visibility=\"visible\">\r\n\r\n                                        <ImageView\r\n                                            android:layout_width=\"@dimen/_15sdp\"\r\n                                            android:layout_height=\"@dimen/_15sdp\"\r\n                                            android:layout_alignParentEnd=\"true\"\r\n\r\n                                            android:padding=\"@dimen/_2sdp\"\r\n                                            android:src=\"@drawable/ic_next\"></ImageView>\r\n\r\n                                        <ImageView\r\n                                            android:id=\"@+id/rateusImage\"\r\n                                            android:layout_width=\"@dimen/_20sdp\"\r\n                                            android:layout_height=\"@dimen/_20sdp\"\r\n                                            android:src=\"@drawable/ic_report\"></ImageView>\r\n\r\n                                        <TextView\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"wrap_content\"\r\n                                            android:layout_centerVertical=\"true\"\r\n                                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                                            android:layout_toEndOf=\"@+id/rateusImage\"\r\n                                            android:fontFamily=\"@font/montserrat_medium\"\r\n                                            android:text=\"Rate Us\"\r\n                                            android:textColor=\"@android:color/black\"\r\n                                            android:textSize=\"@dimen/_12sdp\"></TextView>\r\n\r\n                                </RelativeLayout>\r\n\r\n                                <View\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"1dp\"\r\n                                    android:background=\"@color/Graycolor\"\r\n                                    android:visibility=\"visible\" />\r\n\r\n                                <RelativeLayout\r\n                                    android:id=\"@+id/aboutUsRelative\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"@dimen/_15sdp\"\r\n                                    android:layout_marginTop=\"@dimen/_4sdp\"\r\n                                    android:layout_marginEnd=\"@dimen/_15sdp\"\r\n                                    android:paddingTop=\"@dimen/_7sdp\"\r\n                                    android:paddingBottom=\"@dimen/_7sdp\">\r\n\r\n                                        <ImageView\r\n                                            android:layout_width=\"@dimen/_15sdp\"\r\n                                            android:layout_height=\"@dimen/_15sdp\"\r\n\r\n                                            android:layout_alignParentEnd=\"true\"\r\n                                            android:padding=\"@dimen/_2sdp\"\r\n                                            android:src=\"@drawable/ic_next\"></ImageView>\r\n\r\n                                        <ImageView\r\n                                            android:id=\"@+id/aboutUsImage\"\r\n                                            android:layout_width=\"@dimen/_20sdp\"\r\n                                            android:layout_height=\"@dimen/_20sdp\"\r\n                                            android:src=\"@drawable/ic_hand_shake\"></ImageView>\r\n\r\n                                        <TextView\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"wrap_content\"\r\n                                            android:layout_centerVertical=\"true\"\r\n                                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                                            android:layout_toEndOf=\"@+id/aboutUsImage\"\r\n                                            android:fontFamily=\"@font/montserrat_medium\"\r\n                                            android:text=\"About Us\"\r\n                                            android:textColor=\"@android:color/black\"\r\n                                            android:textSize=\"@dimen/_12sdp\" />\r\n\r\n                                </RelativeLayout>\r\n\r\n                                <View\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"1dp\"\r\n                                    android:background=\"@color/Graycolor\" />\r\n\r\n\r\n                                <RelativeLayout\r\n                                    android:id=\"@+id/reportbugsLayout\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"@dimen/_15sdp\"\r\n                                    android:layout_marginTop=\"@dimen/_4sdp\"\r\n                                    android:layout_marginEnd=\"@dimen/_15sdp\"\r\n                                    android:paddingTop=\"@dimen/_7sdp\"\r\n                                    android:paddingBottom=\"@dimen/_7sdp\">\r\n\r\n                                        <ImageView\r\n                                            android:id=\"@+id/subscriptionImage\"\r\n                                            android:layout_width=\"@dimen/_20sdp\"\r\n                                            android:layout_height=\"@dimen/_20sdp\"\r\n                                            android:src=\"@drawable/ic_bug\" />\r\n\r\n                                        <ImageView\r\n                                            android:layout_width=\"@dimen/_15sdp\"\r\n                                            android:layout_height=\"@dimen/_15sdp\"\r\n                                            android:layout_alignParentEnd=\"true\"\r\n                                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n\r\n                                            android:padding=\"@dimen/_2sdp\"\r\n                                            android:src=\"@drawable/ic_next\"></ImageView>\r\n\r\n                                        <TextView\r\n                                            android:id=\"@+id/reportAndBug\"\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"wrap_content\"\r\n                                            android:layout_centerVertical=\"true\"\r\n                                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                                            android:layout_toEndOf=\"@+id/subscriptionImage\"\r\n                                            android:fontFamily=\"@font/montserrat_medium\"\r\n                                            android:text=\"Report Bug\"\r\n                                            android:textColor=\"@android:color/black\"\r\n                                            android:textSize=\"@dimen/_12sdp\" />\r\n\r\n                                </RelativeLayout>\r\n\r\n                                <View\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"1dp\"\r\n                                    android:background=\"@color/Graycolor\" />\r\n\r\n                                <RelativeLayout\r\n                                    android:id=\"@+id/packageRelative\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"@dimen/_15sdp\"\r\n                                    android:layout_marginTop=\"@dimen/_4sdp\"\r\n                                    android:layout_marginEnd=\"@dimen/_15sdp\"\r\n                                    android:paddingTop=\"@dimen/_7sdp\"\r\n                                    android:paddingBottom=\"@dimen/_7sdp\">\r\n\r\n                                        <ImageView\r\n                                            android:layout_width=\"@dimen/_15sdp\"\r\n                                            android:layout_height=\"@dimen/_15sdp\"\r\n                                            android:layout_alignParentEnd=\"true\"\r\n\r\n                                            android:padding=\"@dimen/_2sdp\"\r\n                                            android:src=\"@drawable/ic_next\"></ImageView>\r\n\r\n                                        <ImageView\r\n                                            android:id=\"@+id/primeImage\"\r\n                                            android:layout_width=\"@dimen/_20sdp\"\r\n                                            android:layout_height=\"@dimen/_20sdp\"\r\n                                            android:src=\"@drawable/ic_premiumnew\"></ImageView>\r\n\r\n                                        <TextView\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"wrap_content\"\r\n                                            android:layout_centerVertical=\"true\"\r\n                                            android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                                            android:layout_toEndOf=\"@+id/primeImage\"\r\n                                            android:fontFamily=\"@font/montserrat_medium\"\r\n                                            android:text=\"Package\"\r\n                                            android:textColor=\"@android:color/black\"\r\n                                            android:textSize=\"@dimen/_12sdp\" />\r\n\r\n                                </RelativeLayout>\r\n\r\n                                <View\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"1dp\"\r\n                                    android:background=\"@color/Graycolor\" />\r\n\r\n                                <RelativeLayout\r\n                                    android:id=\"@+id/logoutRelative\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_marginStart=\"@dimen/_15sdp\"\r\n                                    android:layout_marginTop=\"@dimen/_4sdp\"\r\n                                    android:layout_marginEnd=\"@dimen/_15sdp\"\r\n                                    android:paddingTop=\"@dimen/_7sdp\"\r\n                                    android:paddingBottom=\"@dimen/_7sdp\">\r\n\r\n                                        <ImageView\r\n                                            android:layout_width=\"@dimen/_15sdp\"\r\n                                            android:layout_height=\"@dimen/_15sdp\"\r\n                                            android:layout_alignParentEnd=\"true\"\r\n\r\n                                            android:padding=\"@dimen/_2sdp\"\r\n                                            android:src=\"@drawable/ic_next\"></ImageView>\r\n\r\n                                        <ImageView\r\n                                            android:id=\"@+id/logoutImage\"\r\n                                            android:layout_width=\"@dimen/_20sdp\"\r\n                                            android:layout_height=\"@dimen/_20sdp\"\r\n                                            android:src=\"@drawable/ic_logout\"></ImageView>\r\n\r\n                                        <TextView\r\n                                            android:layout_width=\"match_parent\"\r\n                                            android:layout_height=\"wrap_content\"\r\n                                            android:layout_centerVertical=\"true\"\r\n                                            android:layout_marginStart=\"@dimen/_10sdp\"\r\n                                            android:layout_toEndOf=\"@+id/logoutImage\"\r\n                                            android:fontFamily=\"@font/montserrat_medium\"\r\n                                            android:text=\"@string/logout\"\r\n                                            android:textColor=\"@android:color/black\"\r\n                                            android:textSize=\"@dimen/_12sdp\" />\r\n\r\n                                </RelativeLayout>\r\n\r\n                                <View\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"1dp\"\r\n                                    android:background=\"@color/Graycolor\" />\r\n\r\n                        </LinearLayout>\r\n                        <LinearLayout\r\n                            android:layout_marginTop=\"@dimen/_80sdp\"\r\n                            android:id=\"@+id/contactTxtLayout\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_above=\"@+id/appVersionTxt\"\r\n                            android:gravity=\"center_horizontal\"\r\n                            android:orientation=\"vertical\"\r\n                            android:paddingTop=\"@dimen/_7sdp\">\r\n\r\n                                <ImageView\r\n\r\n                                    android:id=\"@+id/whatsappImage\"\r\n                                    android:layout_width=\"@dimen/_25sdp\"\r\n                                    android:layout_height=\"@dimen/_25sdp\"\r\n                                    android:layout_gravity=\"center_horizontal\"\r\n                                    android:src=\"@drawable/ic_whatsapp\"\r\n                                    android:visibility=\"visible\" />\r\n\r\n                                <TextView\r\n                                    android:id=\"@+id/reachUrTxt\"\r\n                                    android:layout_width=\"wrap_content\"\r\n                                    android:layout_height=\"wrap_content\"\r\n                                    android:layout_gravity=\"center_horizontal\"\r\n                                    android:layout_marginTop=\"@dimen/_3sdp\"\r\n                                    android:fontFamily=\"@font/montserrat_regular\"\r\n                                    android:text=\"Reach Us\"\r\n\r\n                                    android:textColor=\"@color/black\"\r\n                                    android:textSize=\"@dimen/_13sdp\"\r\n                                    android:textStyle=\"bold\" />\r\n\r\n                                <View\r\n                                    android:layout_width=\"@dimen/_100sdp\"\r\n                                    android:layout_height=\"1dp\"\r\n                                    android:background=\"#B1B1B1\"\r\n                                    android:backgroundTint=\"@color/colorthird\" />\r\n                        </LinearLayout>\r\n                        <TextView\r\n                            android:id=\"@+id/appVersionTxt\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_alignParentBottom=\"true\"\r\n                            android:layout_centerHorizontal=\"true\"\r\n                            android:layout_gravity=\"center\"\r\n                            android:layout_marginTop=\"@dimen/_20sdp\"\r\n                            android:layout_marginBottom=\"@dimen/_60sdp\"\r\n                            android:fontFamily=\"@font/montserrat_regular\"\r\n                            android:text=\"App VErsion\"\r\n                            android:textSize=\"@dimen/_10sdp\" />\r\n                </LinearLayout>\r\n        </ScrollView>\r\n\r\n</RelativeLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_profile.xml	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/res/layout/fragment_profile.xml	(date 1609247771281)
@@ -1,7 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
-<layout>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:layout_width="match_parent"
+<layout xmlns:android="http://schemas.android.com/apk/res/android">
+<RelativeLayout android:layout_width="match_parent"
     android:layout_height="match_parent"
     android:background="@color/colorNavText"
     xmlns:app="http://schemas.android.com/apk/res-auto">
@@ -414,6 +413,52 @@
                                     android:background="@color/Graycolor" />
 
 
+
+                                <RelativeLayout
+                                    android:id="@+id/privacyPolicy"
+                                    android:layout_width="match_parent"
+                                    android:layout_height="wrap_content"
+                                    android:layout_marginStart="@dimen/_15sdp"
+                                    android:layout_marginTop="@dimen/_4sdp"
+                                    android:layout_marginEnd="@dimen/_15sdp"
+                                    android:paddingTop="@dimen/_7sdp"
+                                    android:paddingBottom="@dimen/_7sdp">
+
+                                        <ImageView
+                                            android:layout_width="@dimen/_15sdp"
+                                            android:layout_height="@dimen/_15sdp"
+
+                                            android:layout_alignParentEnd="true"
+                                            android:padding="@dimen/_2sdp"
+                                            android:src="@drawable/ic_next" />
+
+                                        <ImageView
+                                            android:id="@+id/fdg"
+                                            android:layout_width="@dimen/_20sdp"
+                                            android:layout_height="@dimen/_20sdp"
+                                            android:src="@drawable/ic_insurance"
+                                            android:contentDescription="TODO" />
+
+                                        <TextView
+                                            android:layout_width="match_parent"
+                                            android:layout_height="wrap_content"
+                                            android:layout_centerVertical="true"
+                                            android:layout_marginLeft="@dimen/_10sdp"
+                                            android:layout_toEndOf="@+id/fdg"
+                                            android:fontFamily="@font/montserrat_medium"
+                                            android:text="Terms &amp; Condition"
+                                            android:textColor="@android:color/black"
+                                            android:textSize="@dimen/_12sdp" />
+
+                                </RelativeLayout>
+
+                                <View
+                                    android:layout_width="match_parent"
+                                    android:layout_height="1dp"
+                                    android:background="@color/Graycolor" />
+
+
+
                                 <RelativeLayout
                                     android:id="@+id/reportbugsLayout"
                                     android:layout_width="match_parent"
Index: app/src/main/java/com/app/brandmania/Activity/PackageActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.viewpager.widget.PagerAdapter;\r\nimport androidx.viewpager2.widget.CompositePageTransformer;\r\nimport androidx.viewpager2.widget.MarginPageTransformer;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.transition.Slide;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.WindowManager;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Adapter.BrandAdapter;\r\nimport com.app.brandmania.Adapter.SliderAdapter;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.SliderItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityPackageBinding;\r\nimport com.google.gson.Gson;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class PackageActivity extends AppCompatActivity {\r\n    private Activity act;\r\n    private ActivityPackageBinding  binding;\r\n    private int[] layouts;\r\n    PreafManager preafManager;\r\n    private boolean isLoading = false;\r\n    ArrayList<SliderItem>sliderItems=new ArrayList<>();\r\n    String selectedBrand;\r\n    Gson gson;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n        gson=new Gson();\r\n        preafManager=new PreafManager(act);\r\n        if (getIntent().hasExtra(\"fromBrandList\")){\r\n            selectedBrand=gson.fromJson(getIntent().getStringExtra(\"detailsObj\"),BrandListItem.class).getId();\r\n        }else{\r\n            selectedBrand=preafManager.getActiveBrand().getId();\r\n        }\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_package);\r\n        binding.BackButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n        GetPackageList();\r\n\r\n    }\r\n    private void GetPackage() {\r\n\r\n        binding.viewPagerImageSlider.setAdapter(new SliderAdapter(sliderItems,act,selectedBrand));\r\n        binding.viewPagerImageSlider.setClipToPadding(false);\r\n        binding.viewPagerImageSlider.setClipChildren(false);\r\n        binding.viewPagerImageSlider.setOffscreenPageLimit(2);\r\n        binding.viewPagerImageSlider.getChildAt(0).setOverScrollMode(RecyclerView.OVER_SCROLL_NEVER);\r\n\r\n        CompositePageTransformer compositePageTransformer=new CompositePageTransformer();\r\n        compositePageTransformer.addTransformer(new MarginPageTransformer(40));\r\n        compositePageTransformer.addTransformer(new ViewPager2.PageTransformer() {\r\n            @Override\r\n            public void transformPage(@NonNull View page, float position) {\r\n                float r=1 - Math.abs(position);\r\n                page.setScaleY(0.85f + r * 0.15f);\r\n            }\r\n        });\r\n        binding.viewPagerImageSlider.setPageTransformer(compositePageTransformer);\r\n\r\n    }\r\n\r\n\r\n    private void GetPackageList() {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Utility.Log(\"API : \", APIs.GET_PACKAGE);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, APIs.GET_PACKAGE, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                isLoading = false;\r\n                Utility.dismissProgress();\r\n                Utility.Log(\"GET_PACKAGE : \", response);\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    sliderItems = ResponseHandler.HandleGetPackageList(jsonObject);\r\n                    if (sliderItems != null && sliderItems.size() != 0) {\r\n                        GetPackage();\r\n                    }\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        error.printStackTrace();\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n    @Override public void onBackPressed() {\r\n        CodeReUse.activityBackPress(act);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/PackageActivity.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Activity/PackageActivity.java	(date 1609305672045)
@@ -31,6 +31,7 @@
 import com.app.brandmania.Adapter.SliderAdapter;
 import com.app.brandmania.Common.PreafManager;
 import com.app.brandmania.Common.ResponseHandler;
+import com.app.brandmania.Connection.BaseActivity;
 import com.app.brandmania.Model.BrandListItem;
 import com.app.brandmania.Model.SliderItem;
 import com.app.brandmania.R;
@@ -48,7 +49,7 @@
 import java.util.List;
 import java.util.Map;
 
-public class PackageActivity extends AppCompatActivity {
+public class PackageActivity extends BaseActivity {
     private Activity act;
     private ActivityPackageBinding  binding;
     private int[] layouts;
@@ -58,7 +59,7 @@
     String selectedBrand;
     Gson gson;
     @Override
-    protected void onCreate(Bundle savedInstanceState) {
+    public void onCreate(Bundle savedInstanceState) {
         setTheme(R.style.AppTheme_material_theme);
         super.onCreate(savedInstanceState);
         act = this;
@@ -69,7 +70,7 @@
         }else{
             selectedBrand=preafManager.getActiveBrand().getId();
         }
-        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);
+      //  getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);
         binding = DataBindingUtil.setContentView(act, R.layout.activity_package);
         binding.BackButton.setOnClickListener(new View.OnClickListener() {
             @Override
Index: app/src/main/java/com/app/brandmania/Model/SliderItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Model;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class SliderItem {\r\n\r\n   private String priceForPay;\r\n   private String packageTitle;\r\n   private String templateTitle;\r\n   private String imageTitle;\r\n   private String payTitle;\r\n   private String packageid;\r\n   private String brandId;\r\n\r\n   private String duration;\r\n\r\n    public String getDuration() {\r\n        return duration;\r\n    }\r\n\r\n    public SliderItem setDuration(String duration) {\r\n        this.duration = duration;\r\n        return this;\r\n    }\r\n\r\n    public String getBrandId() {\r\n        return brandId;\r\n    }\r\n\r\n    public void setBrandId(String brandId) {\r\n        this.brandId = brandId;\r\n    }\r\n\r\n    ArrayList<SlideSubItem> slideSubItems;\r\n\r\n    public SliderItem() {\r\n    }\r\n\r\n    public String getPriceForPay() {\r\n        return priceForPay;\r\n    }\r\n\r\n    public void setPriceForPay(String priceForPay) {\r\n        this.priceForPay = priceForPay;\r\n    }\r\n\r\n    public String getPackageTitle() {\r\n        return packageTitle;\r\n    }\r\n\r\n    public void setPackageTitle(String packageTitle) {\r\n        this.packageTitle = packageTitle;\r\n    }\r\n\r\n    public String getTemplateTitle() {\r\n        return templateTitle;\r\n    }\r\n\r\n    public void setTemplateTitle(String templateTitle) {\r\n        this.templateTitle = templateTitle;\r\n    }\r\n\r\n    public String getImageTitle() {\r\n        return imageTitle;\r\n    }\r\n\r\n    public void setImageTitle(String imageTitle) {\r\n        this.imageTitle = imageTitle;\r\n    }\r\n\r\n    public String getPayTitle() {\r\n        return payTitle;\r\n    }\r\n\r\n    public void setPayTitle(String payTitle) {\r\n        this.payTitle = payTitle;\r\n    }\r\n\r\n    public ArrayList<SlideSubItem> getSlideSubItems() {\r\n        return slideSubItems;\r\n    }\r\n\r\n    public void setSlideSubItems(ArrayList<SlideSubItem> slideSubItems) {\r\n        this.slideSubItems = slideSubItems;\r\n    }\r\n\r\n    public String getPackageid() {\r\n        return packageid;\r\n    }\r\n\r\n    public void setPackageid(String packageid) {\r\n        this.packageid = packageid;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Model/SliderItem.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Model/SliderItem.java	(date 1609248749209)
@@ -11,6 +11,7 @@
    private String payTitle;
    private String packageid;
    private String brandId;
+   private String subscriptionDate;
 
    private String duration;
 
@@ -36,6 +37,15 @@
     public SliderItem() {
     }
 
+    public String getSubscriptionDate() {
+        return subscriptionDate;
+    }
+
+    public SliderItem setSubscriptionDate(String subscriptionDate) {
+        this.subscriptionDate = subscriptionDate;
+        return this;
+    }
+
     public String getPriceForPay() {
         return priceForPay;
     }
Index: app/src/main/java/com/app/brandmania/Common/ResponseHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Common;\r\n\r\nimport android.content.Context;\r\nimport android.util.Log;\r\n\r\n\r\nimport com.app.brandmania.Model.Links;\r\nimport com.app.brandmania.Model.SlideSubItem;\r\nimport com.app.brandmania.Model.SliderItem;\r\nimport com.google.gson.Gson;\r\nimport com.app.brandmania.Adapter.MultiListItem;\r\nimport com.app.brandmania.Model.DashBoardItem;\r\nimport com.app.brandmania.Model.DownloadFavoriteItemList;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.Model.ImageList;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.ViewPagerItem;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ResponseHandler {\r\n    Context context;\r\n\r\n\r\n    public ResponseHandler(Context context) {\r\n        this.context = context;\r\n    }\r\n\r\n    public static ArrayList<String> getListFromJSon(JSONArray food_types) {\r\n        ArrayList<String> strings = new ArrayList<>();\r\n\r\n        if (food_types != null) {\r\n            for (int i = 0; i < food_types.length(); i++) {\r\n                try {\r\n                    strings.add(food_types.getString(i));\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            return strings;\r\n        } else {\r\n\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    public static boolean isSuccess(String strResponse, JSONObject jsonResponse) {\r\n        if (strResponse != null) {\r\n            JSONObject jsonObject = createJsonObject(strResponse);\r\n            if (jsonObject != null) {\r\n                return getBool(jsonObject, \"status\");\r\n            }\r\n        } else if (jsonResponse != null) {\r\n            return getBool(jsonResponse, \"status\");\r\n        }\r\n        return false;\r\n    }\r\n    public static JSONObject createJsonObject(String response) {\r\n        JSONObject jsonObject;\r\n        try {\r\n            jsonObject = new JSONObject(response);\r\n            return jsonObject;\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return null;\r\n    }\r\n    public static String getString(JSONObject jObj, String strKey) {\r\n        try {\r\n            return (jObj.has(strKey) && !jObj.isNull(strKey)) ? jObj.getString(strKey) : \"\";\r\n        } catch (JSONException e) {\r\n            return \"\";\r\n        }\r\n    }\r\n    public static int getInt(JSONObject jObj, String strKey) {\r\n        try {\r\n            return (jObj.has(strKey) && !jObj.isNull(strKey)) ? jObj.getInt(strKey) : 0;\r\n        } catch (JSONException e) {\r\n            return 0;\r\n        }\r\n    }\r\n    public static float getFloat(JSONObject jObj, String strKey) {\r\n        try {\r\n            return (jObj.has(strKey) && !jObj.isNull(strKey)) ? (float) jObj.getDouble(strKey) : 0;\r\n        } catch (JSONException e) {\r\n            return 0;\r\n        }\r\n    }\r\n    public static boolean getBool(JSONObject jObj, String strKey) {\r\n        try {\r\n            return (jObj.has(strKey) && !jObj.isNull(strKey)) && jObj.getBoolean(strKey);\r\n        } catch (JSONException e) {\r\n            return false;\r\n        }\r\n    }\r\n    public static JSONObject getJSONObject(JSONObject jObj, String strKey) {\r\n        try {\r\n            return (jObj.has(strKey) && !jObj.isNull(strKey)) ? jObj.getJSONObject(strKey) : new JSONObject();\r\n        } catch (JSONException e) {\r\n            return new JSONObject();\r\n        }\r\n    }\r\n    public static JSONArray getJSONArray(JSONObject jObj, String strKey) {\r\n        try {\r\n            return (jObj.has(strKey) && !jObj.isNull(strKey)) ? jObj.getJSONArray(strKey) : new JSONArray();\r\n        } catch (JSONException e) {\r\n            return new JSONArray();\r\n        }\r\n    }\r\n    public static ArrayList<BrandListItem> HandleGetBrandList(JSONObject jsonObject) {\r\n        ArrayList<BrandListItem> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        BrandListItem examModel = new BrandListItem();\r\n                        examModel.setLayoutType(BrandListItem.LAYOUT_BRANDLIST);\r\n                        examModel.setId(getString(dataJsonObject,\"id\"));\r\n                        examModel.setCategoryId(getString(dataJsonObject, \"br_category_id\"));\r\n                        examModel.setCategoryName(getString(dataJsonObject, \"br_category_name\"));\r\n                        examModel.setName(getString(dataJsonObject, \"br_name\"));\r\n                        examModel.setPhonenumber(getString(dataJsonObject, \"br_phone\"));\r\n                        examModel.setWebsite(getString(dataJsonObject, \"br_website\"));\r\n                        examModel.setEmail(getString(dataJsonObject, \"br_email\"));\r\n                        examModel.setAddress(getString(dataJsonObject, \"br_address\"));\r\n                        examModel.setLogo(getString(dataJsonObject,\"br_logo\"));\r\n                        examModel.setIs_frame(getString(dataJsonObject, \"is_frame\"));\r\n                        examModel.setFrame_message(getString(dataJsonObject, \"frame_message\"));\r\n                        examModel.setFrambaseyrl(getString(dataJsonObject, \"fream_base_url\"));\r\n                        examModel.setIs_payment_pending(getString(dataJsonObject, \"is_payment_pending\"));\r\n                        examModel.setPayment_message(getString(dataJsonObject, \"payment_message\"));\r\n                        examModel.setPackagename(getString(dataJsonObject, \"package\"));\r\n                        examModel.setPackage_id(getString(dataJsonObject, \"package_id\"));\r\n                        examModel.setPackagemessage(getString(dataJsonObject, \"package_message\"));\r\n                        examModel.setNo_of_total_image(getString(dataJsonObject, \"no_of_img\"));\r\n                        examModel.setNo_of_used_image(getString(dataJsonObject, \"no_of_used_img\"));\r\n                        examModel.setNo_of_frame(getString(dataJsonObject, \"no_of_frame\"));\r\n                        examModel.setNo_of_remaining(getString(dataJsonObject, \"remaining_img\"));\r\n                        examModel.setRate(getString(dataJsonObject, \"rate\"));\r\n\r\n                        examModel.setExpiery_date(getString(dataJsonObject, \"expire_date\"));\r\n                        JSONArray jsonArray = dataJsonObject.getJSONArray(\"br_frame\");\r\n\r\n                        ArrayList<FrameItem>frameItems=null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n                        Gson gson=new Gson();\r\n                        Log.e(\"Viewww\",gson.toJson(frameItems));\r\n                        examModel.setFrame(frameItems);\r\n                        strings.add(examModel);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n    public static ArrayList<ViewPagerItem> HandleGetBanneList(JSONObject jsonObject) {\r\n        ArrayList<ViewPagerItem> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        ViewPagerItem examModel = new ViewPagerItem();\r\n\r\n                        examModel.setId(getString(dataJsonObject, \"id\"));\r\n                        examModel.setSliderImageUrl(getString(dataJsonObject, \"banner_photo\"));\r\n                        examModel.setRedirection(getString(dataJsonObject, \"redirection\"));\r\n                        examModel.setBannerstatus(getString(dataJsonObject, \"banner_status\"));\r\n                        examModel.setPosition(getString(dataJsonObject, \"position\"));\r\n                        strings.add(examModel);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n    public static DashBoardItem HandleGetImageCategory(JSONObject jsonObject) throws JSONException {\r\n        DashBoardItem dashBoardItem=new DashBoardItem();\r\n        ArrayList<DashBoardItem> string = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            JSONArray datajsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!datajsonArray.isNull(0) && datajsonArray.length() != 0) {\r\n                string = new ArrayList<>();\r\n                for (int i = 0; i < datajsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject datajsonObject = datajsonArray.getJSONObject(i);\r\n                        DashBoardItem model = new DashBoardItem();\r\n\r\n                        model.setId(getString(datajsonObject, \"id\"));\r\n                        model.setName(getString(datajsonObject, \"img_cat_name\"));\r\n                        model.setDescription(getString(datajsonObject, \"img_cat_desc\"));\r\n                        model.setTag(getString(datajsonObject, \"img_cat_tagd\"));\r\n\r\n                        model.setImageFree(getString(datajsonObject, \"is_cat_free\").equalsIgnoreCase(\"1\"));\r\n\r\n                        JSONArray detailjsonArray = getJSONArray(datajsonObject, \"images\");\r\n                        ArrayList<ImageList> stringg = null;\r\n                        if (!detailjsonArray.isNull(0) && detailjsonArray.length() != 0) {\r\n                            stringg = new ArrayList<>();\r\n                            for (int j = 0; j < detailjsonArray.length(); j++) {\r\n                                try {\r\n                                    JSONObject detailjsonobject = detailjsonArray.getJSONObject(j);\r\n                                    ImageList data = new ImageList();\r\n                                    data.setLayoutType(ImageList.LAYOUT_IMAGE_CATEGORY);\r\n                                    data.setId(getString(detailjsonobject, \"id\"));\r\n                                    data.setImagecatid(getString(detailjsonobject, \"img_cat_id\"));\r\n                                    data.setImageid(getString(detailjsonobject, \"img_id\"));\r\n                                    data.setLogo(getString(detailjsonobject, \"img_thumb_path\"));\r\n                                    data.setFrame(getString(detailjsonobject, \"img_path\"));\r\n                                    data.setImageFree(getString(detailjsonobject, \"is_img_free\").equalsIgnoreCase(\"1\"));\r\n                                    stringg.add(data);\r\n                                } catch (JSONException e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        model.setImageLists(stringg);\r\n\r\n                        if (stringg!=null &&  stringg.size()!=0)\r\n                        string.add(model);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }\r\n            }\r\n            dashBoardItem.setDashBoardItems(string);\r\n\r\n            JSONObject linkObj=getJSONObject(jsonObject,\"link\");\r\n            Links links=new Links();\r\n            links.setFirstPage(getString(linkObj,\"first_page_url\"));\r\n            links.setLastPageUrl(getString(linkObj,\"last_page_url\"));\r\n            links.setNextPageUrl(getString(linkObj,\"next_page_url\"));\r\n            links.setPrevPageUrl(getString(linkObj,\"prev_page_url\"));\r\n            links.setTotalStr(getString(linkObj,\"total\"));\r\n            dashBoardItem.setLinks(links);\r\n\r\n\r\n\r\n        }\r\n\r\n        return dashBoardItem;\r\n    }\r\n    public static ImageList HandleGetImageByIdCategory(JSONObject jsonObject) {\r\n        ImageList imageList=new ImageList();\r\n        ArrayList<ImageList> string = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            JSONArray datajsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!datajsonArray.isNull(0) && datajsonArray.length() != 0) {\r\n                string = new ArrayList<>();\r\n                for (int i = 0; i < datajsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject datajsonObject = datajsonArray.getJSONObject(i);\r\n                        ImageList model = new ImageList();\r\n                        model.setLayoutType(ImageList.LAYOUT_IMAGE_CATEGORY_BY_ID);\r\n                        model.setName(getString(datajsonObject, \"title\"));\r\n                        model.setId(getString(datajsonObject,\"img_cat_map_id\"));\r\n                        model.setImagecatid(getString(datajsonObject, \"img_cat_id\"));\r\n                        model.setImageid(getString(datajsonObject, \"image_id\"));\r\n                        model.setLogo(getString(datajsonObject, \"img_thumb_path\"));\r\n                        model.setFrame(getString(datajsonObject, \"img_path\"));\r\n                        model.setImageFree(getString(datajsonObject, \"is_img_free\").equalsIgnoreCase(\"1\"));\r\n                        string.add(model);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }\r\n\r\n\r\n            }\r\n            imageList.setCatogaryImagesList(string);\r\n            JSONObject linkObj=getJSONObject(jsonObject,\"link\");\r\n            Links links=new Links();\r\n            links.setFirstPage(getString(linkObj,\"first_page_url\"));\r\n            links.setLastPageUrl(getString(linkObj,\"last_page_url\"));\r\n            links.setNextPageUrl(getString(linkObj,\"next_page_url\"));\r\n            links.setPrevPageUrl(getString(linkObj,\"prev_page_url\"));\r\n            links.setTotalStr(getString(linkObj,\"total\"));\r\n            imageList.setLinks(links);\r\n        }\r\n        return imageList;\r\n    }\r\n    public static ArrayList<MultiListItem> HandleFaqResponse(JSONObject jsonObject) {\r\n        ArrayList<MultiListItem> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        MultiListItem faqModel = new MultiListItem();\r\n                        faqModel.setLayoutType(MultiListItem.LAYOUT_FAQ);\r\n                        faqModel.setQuestion(getString(dataJsonObject, \"question\"));\r\n                        faqModel.setAnswer(getString(dataJsonObject, \"answer\"));\r\n                        strings.add(faqModel);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n    public static ArrayList<DownloadFavoriteItemList> HandleGetIDownloadFavoritList(JSONObject jsonObject) {\r\n        ArrayList<DownloadFavoriteItemList> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        DownloadFavoriteItemList downloadFavoriteItemList = new DownloadFavoriteItemList();\r\n                        downloadFavoriteItemList.setLayoutType(DownloadFavoriteItemList.LAYOUT_DOWNLOAD);\r\n                        downloadFavoriteItemList.setName(getString(dataJsonObject, \"image_title\"));\r\n                        downloadFavoriteItemList.setImage(getString(dataJsonObject, \"img_path\"));\r\n\r\n                        downloadFavoriteItemList.setCustom(getString(dataJsonObject, \"is_custom\").equalsIgnoreCase(\"1\"));\r\n\r\n                        downloadFavoriteItemList.setFrame(getString(dataJsonObject, \"frame_path\"));\r\n                        strings.add(downloadFavoriteItemList);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n//    public static ArrayList<FrameItem> HandleGetFrame(JSONObject jsonObject) {\r\n//        ArrayList<FrameItem> strings = null;\r\n//        if (isSuccess(null, jsonObject)) {\r\n//            //list fetch\r\n//            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n//            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n//                strings = new ArrayList<>();\r\n//                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n//                    try {\r\n//                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n//                        FrameItem frameItem = new FrameItem();\r\n//                        frameItem.setFrame1(jsonObject.getString(\"message\")+\"/\"+ResponseHandler.getString(dataJsonObject, \"frame_path\"));\r\n//                        frameItem.setFrameId(ResponseHandler.getString(dataJsonObject, \"id\"));\r\n//\r\n//                        strings.add(frameItem);\r\n//                    } catch (JSONException e) {\r\n//                        e.printStackTrace();\r\n//                    }\r\n//                }\r\n//            }\r\n//\r\n//        }\r\n//\r\n//        return strings;\r\n//    }\r\npublic static ArrayList<FrameItem> HandleGetFrame(JSONObject jsonObject) {\r\n    ArrayList<FrameItem> strings = null;\r\n    if (isSuccess(null, jsonObject)) {\r\n        //list fetch\r\n        JSONObject datajsonobject = getJSONObject(jsonObject, \"data\");\r\n        JSONArray dataJsonArray = getJSONArray(datajsonobject, \"frames\");\r\n        if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n            strings = new ArrayList<>();\r\n            for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                try {\r\n                    JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                    FrameItem frameItem = new FrameItem();\r\n                    frameItem.setFrame1(ResponseHandler.getString(dataJsonObject, \"frame_path\"));\r\n                    frameItem.setFrameId(ResponseHandler.getString(dataJsonObject, \"id\"));\r\n\r\n                    strings.add(frameItem);\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return strings;\r\n}\r\n\r\n    public static ArrayList<DownloadFavoriteItemList> HandleGetIDownloadFavoritGrid(JSONObject jsonObject) {\r\n        ArrayList<DownloadFavoriteItemList> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        DownloadFavoriteItemList downloadFavoriteItemList = new DownloadFavoriteItemList();\r\n                        downloadFavoriteItemList.setLayoutType(downloadFavoriteItemList.LAYOUT_DOWNLOADGRID);\r\n                        downloadFavoriteItemList.setName(getString(dataJsonObject, \"image_title\"));\r\n                        downloadFavoriteItemList.setImage(getString(dataJsonObject, \"img_path\"));\r\n                        downloadFavoriteItemList.setFrame(getString(dataJsonObject, \"frame_path\"));\r\n                        strings.add(downloadFavoriteItemList);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n    public static ArrayList<DownloadFavoriteItemList> HandleGetIFavoritList(JSONObject jsonObject) {\r\n        ArrayList<DownloadFavoriteItemList> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        DownloadFavoriteItemList downloadFavoriteItemList = new DownloadFavoriteItemList();\r\n                        downloadFavoriteItemList.setLayoutType(downloadFavoriteItemList.LAYOUT_FAVOURIT);\r\n                        downloadFavoriteItemList.setName(getString(dataJsonObject, \"image_title\"));\r\n                        downloadFavoriteItemList.setImage(getString(dataJsonObject, \"img_path\"));\r\n                        downloadFavoriteItemList.setFrame(getString(dataJsonObject, \"frame_path\"));\r\n                        strings.add(downloadFavoriteItemList);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n    public static ArrayList<DownloadFavoriteItemList> HandleGetIFavoritListGrid(JSONObject jsonObject) {\r\n        ArrayList<DownloadFavoriteItemList> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        DownloadFavoriteItemList downloadFavoriteItemList = new DownloadFavoriteItemList();\r\n                        downloadFavoriteItemList.setLayoutType(downloadFavoriteItemList.LAYOUT_FAVOURITGRID);\r\n                        downloadFavoriteItemList.setName(getString(dataJsonObject, \"image_title\"));\r\n                        downloadFavoriteItemList.setImage(getString(dataJsonObject, \"img_path\"));\r\n                        downloadFavoriteItemList.setFrame(getString(dataJsonObject, \"frame_path\"));\r\n                        strings.add(downloadFavoriteItemList);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n    public static ArrayList<BrandListItem> HandleGetNotificationList(JSONObject jsonObject) {\r\n        ArrayList<BrandListItem> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        BrandListItem brandListItem = new BrandListItem();\r\n                        brandListItem.setLayoutType(brandListItem.LAYOUT_NOTIFICATIONlIST);\r\n                        brandListItem.setMessage(getString(dataJsonObject, \"message\"));\r\n                        brandListItem.setDate(getString(dataJsonObject, \"date\"));\r\n                        brandListItem.setTime(getString(dataJsonObject, \"time\"));\r\n                        strings.add(brandListItem);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n    public static ArrayList<SliderItem> HandleGetPackageList(JSONObject jsonObject) {\r\n        ArrayList<SliderItem> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        SliderItem sliderItem = new SliderItem();\r\n                        sliderItem.setPackageid(getString(dataJsonObject,\"id\"));\r\n                        sliderItem.setPriceForPay(getString(dataJsonObject, \"rate\"));\r\n                        sliderItem.setPackageTitle(getString(dataJsonObject, \"name\"));\r\n                        sliderItem.setTemplateTitle(getString(dataJsonObject, \"frame_counter\"));\r\n                        sliderItem.setDuration(getString(dataJsonObject,\"duration_id\"));\r\n                        sliderItem.setImageTitle(getString(dataJsonObject, \"img_counter\"));\r\n                        sliderItem.setPayTitle(getString(dataJsonObject, \"rate\"));\r\n                        JSONArray subPackagejsonArray = getJSONArray(dataJsonObject, \"service\");\r\n                        ArrayList<SlideSubItem> stringg = null;\r\n                        if (!subPackagejsonArray.isNull(0) && subPackagejsonArray.length() != 0) {\r\n                            stringg = new ArrayList<>();\r\n                            for (int j = 0; j < subPackagejsonArray.length(); j++) {\r\n                                try {\r\n                                    JSONObject detailjsonobject = subPackagejsonArray.getJSONObject(j);\r\n                                    SlideSubItem slideSubItem = new SlideSubItem();\r\n                                    slideSubItem.setId(getString(detailjsonobject, \"id\"));\r\n                                    slideSubItem.setName(getString(detailjsonobject, \"name\"));\r\n                                    slideSubItem.setDescription(getString(detailjsonobject, \"description\"));\r\n\r\n                                    stringg.add(slideSubItem);\r\n                                } catch (JSONException e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        sliderItem.setSlideSubItems(stringg);\r\n                        if (stringg!=null &&  stringg.size()!=0)\r\n                        strings.add(sliderItem);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n    public static ArrayList<BrandListItem> HandleGetBrandById(JSONObject jsonObject) {\r\n        ArrayList<BrandListItem> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        BrandListItem examModel = new BrandListItem();\r\n                        examModel.setLayoutType(BrandListItem.LAYOUT_BRANDLIST);\r\n                        examModel.setId(getString(dataJsonObject,\"id\"));\r\n                        examModel.setCategoryId(getString(dataJsonObject, \"br_category_id\"));\r\n                        examModel.setCategoryName(getString(dataJsonObject, \"br_category_name\"));\r\n                        examModel.setName(getString(dataJsonObject, \"br_name\"));\r\n                        examModel.setPhonenumber(getString(dataJsonObject, \"br_phone\"));\r\n                        examModel.setWebsite(getString(dataJsonObject, \"br_website\"));\r\n                        examModel.setEmail(getString(dataJsonObject, \"br_email\"));\r\n                        examModel.setAddress(getString(dataJsonObject, \"br_address\"));\r\n                        examModel.setLogo(getString(dataJsonObject,\"br_logo\"));\r\n                        examModel.setIs_frame(getString(dataJsonObject, \"is_frame\"));\r\n                        examModel.setFrame_message(getString(dataJsonObject, \"frame_message\"));\r\n                        examModel.setFrambaseyrl(getString(dataJsonObject, \"fream_base_url\"));\r\n                        examModel.setIs_payment_pending(getString(dataJsonObject, \"is_payment_pending\"));\r\n                        examModel.setPayment_message(getString(dataJsonObject, \"payment_message\"));\r\n                        examModel.setPackagename(getString(dataJsonObject, \"package\"));\r\n                        examModel.setPackagemessage(getString(dataJsonObject, \"package_message\"));\r\n                        examModel.setNo_of_total_image(getString(dataJsonObject, \"img_counter\"));\r\n                        examModel.setNo_of_used_image(getString(dataJsonObject, \"no_of_used_img\"));\r\n                        examModel.setNo_of_frame(getString(dataJsonObject, \"frame_counter\"));\r\n                        examModel.setNo_of_remaining(getString(dataJsonObject, \"remaining_img\"));\r\n                        examModel.setExpiery_date(getString(dataJsonObject, \"expire_date\"));\r\n                        examModel.setPackage_id(getString(dataJsonObject, \"package_id\"));\r\n                        examModel.setRate(getString(dataJsonObject, \"rate\"));\r\n                        examModel.setDuration(getString(dataJsonObject, \"duration\"));\r\n                        JSONArray jsonArray = dataJsonObject.getJSONArray(\"br_frame\");\r\n                        ArrayList<FrameItem>frameItems=null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n                        Gson gson=new Gson();\r\n                        Log.e(\"Viewww\",gson.toJson(frameItems));\r\n                        examModel.setFrame(frameItems);\r\n                        strings.add(examModel);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n    public static ArrayList<ImageList> HandleGetFrameList(JSONObject jsonObject) {\r\n        ArrayList<ImageList> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            JSONObject datajsonobject = getJSONObject(jsonObject, \"data\");\r\n            JSONArray dataJsonArray = getJSONArray(datajsonobject, \"frames\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        ImageList imageItemItem = new ImageList();\r\n                        imageItemItem.setLayoutType(ImageList.LAYOUT_FRAME);\r\n                        imageItemItem.setFrame1(ResponseHandler.getString(dataJsonObject, \"frame_path\"));\r\n                        imageItemItem.setFrame1Id(ResponseHandler.getString(dataJsonObject, \"id\"));\r\n                        strings.add(imageItemItem);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Common/ResponseHandler.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Common/ResponseHandler.java	(date 1609249079233)
@@ -148,8 +148,10 @@
                         examModel.setNo_of_used_image(getString(dataJsonObject, "no_of_used_img"));
                         examModel.setNo_of_frame(getString(dataJsonObject, "no_of_frame"));
                         examModel.setNo_of_remaining(getString(dataJsonObject, "remaining_img"));
+                        examModel.setSubscriptionDate(getString(dataJsonObject,"subscription_date"));
                         examModel.setRate(getString(dataJsonObject, "rate"));
 
+
                         examModel.setExpiery_date(getString(dataJsonObject, "expire_date"));
                         JSONArray jsonArray = dataJsonObject.getJSONArray("br_frame");
 
Index: app/src/main/java/com/app/brandmania/Fragment/bottom/ProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Fragment.bottom;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Activity.AboutUsActivity;\r\nimport com.app.brandmania.Activity.AddReportAndBug;\r\nimport com.app.brandmania.Activity.FaqActivity;\r\nimport com.app.brandmania.Activity.LoginActivity;\r\nimport com.app.brandmania.Activity.PackageActivity;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Common.MakeMyBrandApp;\r\nimport com.app.brandmania.Common.ObserverActionID;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Activity.HelpAndSupport;\r\nimport com.app.brandmania.Activity.PartnerProgramActivity;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Fragment.BaseFragment;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Activity.ViewBrandActivity;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.FragmentProfileBinding;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.net.URI;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Observable;\r\n\r\npublic class ProfileFragment extends BaseFragment {\r\n    Activity act;\r\n    private FragmentProfileBinding binding;\r\n    PreafManager preafManager;\r\n\r\n\r\n    @Override\r\n    public View provideFragmentView(LayoutInflater inflater, ViewGroup parent, Bundle savedInstanceState) {\r\n        act = getActivity();\r\n        binding= DataBindingUtil.inflate(inflater, R.layout.fragment_profile,parent,false);\r\n        preafManager=new PreafManager(act);\r\n        binding.businessName.setText(preafManager.getActiveBrand().getName());\r\n        binding.mybusinessRelative.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(act, ViewBrandActivity.class);\r\n\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n\r\n            }\r\n        });\r\n        binding.logoutRelative.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n            }\r\n        });\r\n        binding.helpandsupportLayout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(act, HelpAndSupport.class);\r\n\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n\r\n            }\r\n        });\r\n        binding.partnerProgRelative.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Intent i = new Intent(act, PartnerProgramActivity.class);\r\n\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n\r\n            }\r\n        });\r\n        binding.myFaqRelative.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(act, FaqActivity.class);\r\n                 startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n\r\n            }\r\n        });\r\n        binding.aboutUsRelative.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(act, AboutUsActivity.class);\r\n\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n\r\n            }\r\n        });\r\n        binding.shareText.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent shareIntent =   new Intent(android.content.Intent.ACTION_SEND);\r\n                shareIntent.setType(\"text/plain\");\r\n                // shareIntent.putExtra(Intent.EXTRA_SUBJECT,\"Insert Subject here\");\r\n                String app_url = \"https://play.google.com/store/apps/details?id=com.make.mybrand\";\r\n                shareIntent.putExtra(android.content.Intent.EXTRA_TEXT,app_url);\r\n                startActivity(Intent.createChooser(shareIntent, \"Share via\"));\r\n            }\r\n        });\r\n        binding.packageRelative.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent=new Intent(act, PackageActivity.class);\r\n                intent.putExtra(\"Profile\",\"1\");\r\n                startActivity(intent);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n            }\r\n        });\r\n        binding.rateUsLayout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Uri uri=Uri.parse(\"https://play.google.com/store/apps/details?id=com.make.mybrand\");\r\n                Intent intent=new Intent(Intent.ACTION_VIEW,uri);\r\n                try {\r\n\r\n                    startActivity(intent);\r\n                }\r\n                catch (Exception e)\r\n                {\r\n\r\n                }\r\n\r\n            }\r\n        });\r\n        binding.reportbugsLayout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent=new Intent(act, AddReportAndBug.class);\r\n                startActivity(intent);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n            }\r\n        });\r\n        binding.appVersionTxt.setText(\"App Version \"+Constant.F_VERSION);\r\n\r\n        binding.contactTxtLayout.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                try {\r\n                    String number = Constant.ADMIN_CONTACT_NUMBER;\r\n                    String BrandContact=\"\\nRegistered Number: \";\r\n                    String text = \"Hello *BrandMania* , \\n\" + \"this is request to add *Frame* For BrandName:\"+ preafManager.getActiveBrand().getName() +BrandContact+preafManager.getMobileNumber();\r\n                    String toNumber =\"91\"+number;\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                    intent.setData(Uri.parse(\"http://api.whatsapp.com/send?phone=\" + toNumber + \"&text=\" + text));\r\n                    startActivity(intent);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n        return binding.getRoot();\r\n    }\r\n\r\n    ArrayList<BrandListItem> multiListItems=new ArrayList<>();\r\n    private void getBrandList() {\r\n\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.Log(\"GET_BRAND : \", response);\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    multiListItems = ResponseHandler.HandleGetBrandList(jsonObject);\r\n                    preafManager.setAddBrandList(multiListItems);\r\n                    for (int i=0;i<multiListItems.size();i++){\r\n                        if (multiListItems.get(i).getId().equalsIgnoreCase(preafManager.getActiveBrand().getId())){\r\n                            preafManager.setActiveBrand(multiListItems.get(i));\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    //FirstLogin\r\n                    if (act.getIntent().hasExtra(\"FirstLogin\")){\r\n                        preafManager.setIS_Brand(true);\r\n\r\n                        if (multiListItems.size() != 0) {\r\n                            preafManager.setActiveBrand(multiListItems.get(0));\r\n                        }\r\n\r\n                    }\r\n                    preafManager=new PreafManager(act);\r\n                    binding.businessName.setText(preafManager.getActiveBrand().getName());\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                         error.printStackTrace();\r\n\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    @Override\r\n    public void update(Observable observable, Object data) {\r\n\r\n        if (MakeMyBrandApp.getInstance().getObserver().getValue() == ObserverActionID.REFRESH_BRAND_NAME) {\r\n\r\n\r\n            getBrandList();\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Fragment/bottom/ProfileFragment.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Fragment/bottom/ProfileFragment.java	(date 1609247275293)
@@ -117,7 +117,7 @@
             @Override
             public void onClick(View v) {
                 Intent i = new Intent(act, AboutUsActivity.class);
-
+                i.putExtra("aboutUs","aboutUs");
                 startActivity(i);
                 act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);
 
@@ -185,6 +185,17 @@
                 }
             }
         });
+
+        binding.privacyPolicy.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent i = new Intent(act, AboutUsActivity.class);
+                i.putExtra("termsNCondition","aboutUs");
+                startActivity(i);
+                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);
+            }
+        });
+
         return binding.getRoot();
     }
 
Index: app/src/main/java/com/app/brandmania/Activity/RazorPayActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.SliderItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityRazorPayBinding;\r\nimport com.app.brandmania.databinding.ItemServiceLayoutBinding;\r\nimport com.google.gson.Gson;\r\nimport com.razorpay.Checkout;\r\nimport com.razorpay.PaymentData;\r\nimport com.razorpay.PaymentResultWithDataListener;\r\n\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RazorPayActivity extends BaseActivity implements PaymentResultWithDataListener,alertListenerCallback {\r\n    Activity act;\r\n    Button pay;\r\n    private ActivityRazorPayBinding binding;\r\n    String sliderItem;\r\n    SliderItem sliderItemList;\r\n    BrandListItem brandListItem;\r\n    private String amountToPay;\r\n    Gson gson;\r\n    private boolean isLoading=false;\r\n    private String orderIdStr;\r\n    private String paymentIdStr;\r\n    private String signatureStr;\r\n    private String generatedOrderId;\r\n    private String currency=\"INR\";\r\n    PreafManager preafManager;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act=this;\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_razor_pay);\r\n        Checkout.preload(getApplicationContext());\r\n        preafManager=new PreafManager(this);\r\n        gson=new Gson();\r\n\r\n        sliderItemList=gson.fromJson(getIntent().getStringExtra(\"detailsObj\"), SliderItem.class);\r\n        Gson gson =new Gson();\r\n        Log.e(\"EEEE\",gson.toJson(sliderItemList));\r\n\r\n\r\n        binding.BackButtonMember.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n        sliderItem = sliderItemList.getPriceForPay();\r\n\r\n        binding.proceedToPayment.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                generateOrderID();\r\n            }\r\n        });\r\n\r\n\r\n        if (sliderItemList != null) {\r\n            binding.actualPriceTxt.setText(act.getString(R.string.Rs) + sliderItemList.getPriceForPay());\r\n            binding.packageNameTxt.setText(sliderItemList.getPackageTitle());\r\n            binding.durationTxt.setText(sliderItemList.getDuration());\r\n\r\n            for (int i=0;i<sliderItemList.getSlideSubItems().size();i++){\r\n                addDynamicServices(sliderItemList.getSlideSubItems().get(i).getName());\r\n            }\r\n\r\n            //show for one month count\r\n\r\n\r\n            binding.finalAmountTxt.setText(act.getString(R.string.Rs) +sliderItemList.getPriceForPay());\r\n\r\n        }\r\n    }\r\n\r\n    private void addDynamicServices(String featuresTxt) {\r\n        ItemServiceLayoutBinding serviceLayoutBinding;\r\n        serviceLayoutBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.item_service_layout, null, false);\r\n        serviceLayoutBinding.servicesTxt.setText(\"- \"+featuresTxt);\r\n        binding.servicesContainer.addView(serviceLayoutBinding.getRoot());\r\n\r\n    }\r\n\r\n\r\n    public void generateOrderID() {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showLoadingTran(act);\r\n        Utility.Log(\"APi\", APIs.GENERATE_ORDER_ID);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GENERATE_ORDER_ID, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                isLoading = false;\r\n                Utility.dismissLoadingTran();\r\n\r\n                Utility.Log(\"OrderID ; \", response);\r\n\r\n                if (ResponseHandler.isSuccess(response, null)) {\r\n                    JSONObject jsonObject = ResponseHandler.getJSONObject(ResponseHandler.createJsonObject(response), \"data\");\r\n                    generatedOrderId = ResponseHandler.getString(jsonObject, \"orderId\");\r\n                    Log.e(\"RoserPay Order Id\",generatedOrderId);\r\n                    sliderItem = ResponseHandler.getString(jsonObject, \"orderAmount\");\r\n                    currency = ResponseHandler.getString(jsonObject, \"currency\");\r\n                    setUpPaymentMethod();\r\n                } else {\r\n                    Toast.makeText(act,\"\"+ResponseHandler.getString(ResponseHandler.createJsonObject(response), \"message\"),Toast.LENGTH_LONG).show();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                isLoading = false;\r\n                Utility.dismissLoadingTran();\r\n\r\n                Utility.showSnackBar(binding.rootBackground, act, \"There is something internal problem\");\r\n\r\n                error.printStackTrace();\r\n         //       String body;\r\n                //get status code here\r\n//                body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                //   Log.e(\"Error \", body);\r\n\r\n\r\n\r\n            }\r\n        }) {\r\n            /** Passing some request headers* */\r\n            @Override\r\n            public Map<String, String> getHeaders() {\r\n                Utility.Log(\"Header\", getHeader(CodeReUse.GET_JSON_HEADER).toString());\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n\r\n                hashMap.put(\"Authorization\",\"Bearer\"+preafManager.getUserToken());\r\n\r\n                return hashMap;\r\n\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"amount\", sliderItemList.getPriceForPay());\r\n                //hashMap.put(\"amount\", \"1\");\r\n                hashMap.put(\"currency\", \"INR\");\r\n\r\n                Utility.Log(\"Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(10000, DefaultRetryPolicy.DEFAULT_MAX_RETRIES, DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        stringRequest.setShouldCache(false);\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.getCache().clear();\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    private void setUpPaymentMethod() {\r\n\r\n        Checkout checkout = new Checkout();\r\n        checkout.setImage(R.drawable.ic_launcher_icon);\r\n        final Activity activity = this;\r\n\r\n\r\n        try {\r\n            JSONObject options = new JSONObject();\r\n            options.put(\"name\", \"Brand Mania\");\r\n            //options.put(\"description\", \"Reference No. #123456\");\r\n            options.put(\"image\", \"https://s3.amazonaws.com/rzp-mobile/images/rzp.png\");\r\n            options.put(\"orderId\", generatedOrderId);\r\n            options.put(\"theme.color\", \"#ad2753\");\r\n            options.put(\"currency\", \"INR\");\r\n            //int amountInPaisa = Integer.parseInt(sliderItem) * 100;\r\n            options.put(\"amount\", String.valueOf(sliderItem));\r\n            options.put(\"prefill.email\", preafManager.getActiveBrand().getEmail());\r\n            options.put(\"prefill.contact\",\"Enter Mobile Number\");\r\n            Log.e(\"Param : \", options.toString());\r\n            checkout.open(activity, options);\r\n        } catch(Exception e) {\r\n            e.printStackTrace();\r\n            Log.e(\"TAG\", \"Error in starting Razorpay Checkout\", e);\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onPaymentSuccess(String s, PaymentData paymentData) {\r\n        try {\r\n            Log.e(\"Payment Succcessful\", gson.toJson(paymentData));\r\n            orderIdStr = paymentData.getOrderId();\r\n\r\n            paymentIdStr = paymentData.getPaymentId();\r\n\r\n            signatureStr = paymentData.getSignature();\r\n\r\n            makeSubscription(\"0\");\r\n        }\r\n        catch (Exception e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onPaymentError(int i, String s, PaymentData paymentData) {\r\n        Log.e(\"Payment Fail\",s);\r\n        makeSubscription(\"1\");\r\n    }\r\n\r\n    private void paymentSuccessDiaog() {\r\n        ViewGroup viewGroup = findViewById(android.R.id.content);\r\n        View dialogView = LayoutInflater.from(this).inflate(R.layout.payment_success, viewGroup, false);\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this, R.style.DialogTheme);\r\n        builder.setView(dialogView);\r\n        final AlertDialog alertDialog = builder.create();\r\n        TextView element3=dialogView.findViewById(R.id.element3);\r\n        TextView closeBtn=dialogView.findViewById(R.id.closeBtn);\r\n        element3.setText(\"Your current package is \"+sliderItemList.getPackageTitle());\r\n        closeBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(act, HomeActivity.class);\r\n                i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                startActivity(i);\r\n                overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n                finish();\r\n            }\r\n        });\r\n\r\n        alertDialog.setCancelable(false);\r\n        alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        alertDialog.show();\r\n\r\n    }\r\n\r\n    public void makeSubscription(String subscription) {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showLoadingTran(act);\r\n        Utility.Log(\"APi\", APIs.MAKE_PAYMENT);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.MAKE_PAYMENT, response -> {\r\n            isLoading = false;\r\n            Utility.dismissLoadingTran();\r\n            Utility.Log(\"Make-subscription\", response);\r\n\r\n            //{\"status\":true,\"data\":\"\",\"message\":\"Subscription Added Successfully.\"}\r\n            if (ResponseHandler.isSuccess(response, null)) {\r\n                paymentSuccessDiaog();\r\n            } else {\r\n                JSONObject jsonObject=ResponseHandler.createJsonObject(response);\r\n                Utility.showAlert(act, ResponseHandler.getString(jsonObject, \"message\"), \"Error\");\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                isLoading = false;\r\n                Utility.dismissLoadingTran();\r\n\r\n                Utility.showSnackBar(binding.rootBackground, act, \"There is something internal problem\");\r\n\r\n                error.printStackTrace();\r\n             /*   String body;\r\n                //get status code here\r\n                body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                Log.e(\"Error \", body);*/\r\n\r\n\r\n            }\r\n        }) {\r\n            /** Passing some request headers* */\r\n            @Override\r\n            public Map<String, String> getHeaders() {\r\n                Utility.Log(\"Header\", getHeader(CodeReUse.GET_JSON_HEADER).toString());\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n\r\n                hashMap.put(\"Authorization\",\"Bearer\"+preafManager.getUserToken());\r\n\r\n                return hashMap;\r\n            }\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"brand\",sliderItemList.getBrandId());\r\n                hashMap.put(\"package\",sliderItemList.getPackageid());\r\n                hashMap.put(\"amount\",sliderItemList.getPriceForPay());\r\n                hashMap.put(\"total_amount\",sliderItemList.getPriceForPay());\r\n                hashMap.put(\"img_counter\",sliderItemList.getImageTitle());\r\n                hashMap.put(\"frame_counter\",sliderItemList.getTemplateTitle());\r\n                hashMap.put(\"is_pending\",subscription);\r\n                if (subscription.equals(\"0\")){\r\n                    hashMap.put(\"razorpay_payment_id\",paymentIdStr);\r\n                    Log.e(\"razorpay_payment_id\",paymentIdStr);\r\n\r\n\r\n                    if (signatureStr!=null) {\r\n                        hashMap.put(\"razorpay_signature\", signatureStr);\r\n                    }\r\n\r\n                }\r\n                hashMap.put(\"razorpay_order_id\",generatedOrderId);\r\n//\r\n              //  razorpay_payment_id, razorpay_order_id, razorpay_signature\r\n                Utility.Log(\"Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(\r\n                10000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        stringRequest.setShouldCache(false);\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.getCache().clear();\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    @Override\r\n    public void alertListenerClick() {\r\n        Intent i = new Intent(act, HomeActivity.class);\r\n        i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n        startActivity(i);\r\n        overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n        finish();\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {CodeReUse.activityBackPress(act);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/RazorPayActivity.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Activity/RazorPayActivity.java	(date 1609306188493)
@@ -4,16 +4,20 @@
 import android.content.Intent;
 import android.graphics.Color;
 import android.graphics.drawable.ColorDrawable;
+import android.os.Build;
 import android.os.Bundle;
+import android.text.Html;
 import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.Button;
+import android.widget.CompoundButton;
 import android.widget.TextView;
 import android.widget.Toast;
 
 import androidx.appcompat.app.AlertDialog;
+import androidx.core.text.HtmlCompat;
 import androidx.databinding.DataBindingUtil;
 
 import com.android.volley.DefaultRetryPolicy;
@@ -83,6 +87,11 @@
         });
         sliderItem = sliderItemList.getPriceForPay();
 
+
+
+
+
+
         binding.proceedToPayment.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -95,15 +104,33 @@
             binding.actualPriceTxt.setText(act.getString(R.string.Rs) + sliderItemList.getPriceForPay());
             binding.packageNameTxt.setText(sliderItemList.getPackageTitle());
             binding.durationTxt.setText(sliderItemList.getDuration());
-
+            Log.e("Services",new Gson().toJson(sliderItemList.getSlideSubItems()));
             for (int i=0;i<sliderItemList.getSlideSubItems().size();i++){
                 addDynamicServices(sliderItemList.getSlideSubItems().get(i).getName());
             }
+            addDynamicServices(sliderItemList.getImageTitle()+" Images Download / Year");
+            addDynamicServices(sliderItemList.getPayTitle()+" / "+sliderItemList.getDuration());
 
             //show for one month count
 
 
-            binding.finalAmountTxt.setText(act.getString(R.string.Rs) +sliderItemList.getPriceForPay());
+            if (Utility.monthsBetweenDates("28-12-2021")<1){
+                int actualPrice=Integer.parseInt(sliderItemList.getPriceForPay());
+                int previousPackagePrice=Integer.parseInt(preafManager.getActiveBrand().getRate());
+                int countedPrice=actualPrice-previousPackagePrice;
+                sliderItem=String.valueOf(countedPrice);
+                Log.e("Price",preafManager.getActiveBrand().getRate() +" - "+sliderItemList.getPriceForPay());
+                binding.discountedAmountLayout.setVisibility(View.GONE);
+                binding.prevAmount.setText(preafManager.getActiveBrand().getPackagename());
+                binding.prevAmount.setText(act.getString(R.string.Rs)+preafManager.getActiveBrand().getRate());
+                binding.previousLayout.setVisibility(View.VISIBLE);
+                binding.noticeTxt.setVisibility(View.VISIBLE);
+                //- and rs icon with red colpr
+                binding.noticeTxt.setText("Your currently active package is \""+preafManager.getActiveBrand().getPackagename()+"\". so your previous paid amount is deducted.");
+
+
+            }
+            binding.finalAmountTxt.setText(act.getString(R.string.Rs) +sliderItem);
 
         }
     }
Index: app/src/main/res/drawable/ic_sign.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_sign.xml	(date 1609305049126)
+++ app/src/main/res/drawable/ic_sign.xml	(date 1609305049126)
@@ -0,0 +1,4 @@
+<vector android:height="24dp" android:viewportHeight="22.354"
+    android:viewportWidth="22.354" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="#FF000000" android:pathData="M0,8.61h22.354v5.133h-22.354z"/>
+</vector>
Index: app/src/main/java/com/app/brandmania/Fragment/top/ColorTab.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Fragment.top;\r\n\r\nimport android.app.Activity;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\n\r\nimport com.app.brandmania.Adapter.ColorPickerAdapter;\r\nimport com.app.brandmania.Adapter.OnlyTextColorPickerAddaptor;\r\nimport com.app.brandmania.Interface.IColorChange;\r\nimport com.app.brandmania.Interface.ITextColorChangeEvent;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.databinding.ColorTabBinding;\r\nimport com.app.brandmania.databinding.FragmentCustomBinding;\r\nimport com.jaredrummler.android.colorpicker.ColorPickerDialog;\r\nimport com.jaredrummler.android.colorpicker.ColorPickerView;\r\n\r\nimport java.util.Objects;\r\n\r\npublic class ColorTab extends Fragment implements ColorPickerView.OnColorChangedListener {\r\n    Activity act;\r\n    private ColorTabBinding binding;\r\n    private int mColorCode;\r\n    private ColorTab context;\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        act = getActivity();\r\n        context=this;\r\n        binding= DataBindingUtil.inflate(inflater,R.layout.color_tab,container,false);\r\n        binding.colorRecycler.setLayoutManager(new GridLayoutManager(getActivity(),6));\r\n        binding.colorRecycler.setHasFixedSize(true);\r\n        OnlyTextColorPickerAddaptor colorPickerAdapter = new OnlyTextColorPickerAddaptor(getActivity());\r\n        colorPickerAdapter.setColorTab(context);\r\n        colorPickerAdapter.setOnColorPickerClickListener(colorCode -> mColorCode = colorCode);\r\n        binding.colorRecycler.setAdapter(colorPickerAdapter);\r\n\r\n        binding.chooseColorTxt.setOnClickListener(v -> ColorPickerDialog.newBuilder().setColor(ContextCompat.getColor(act,R.color.black)).show(Objects.requireNonNull(getActivity())));\r\n\r\n        binding.colorPickerView.setOnColorChangedListener(this);\r\n        binding.colorPickerView.setOnColorChangedListener(this);\r\n       // binding.colorPickerView.setColor(ContextCompat.getColor(act,R.color.black), true);\r\n\r\n        return binding.getRoot();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onColorChanged(int newColor) {\r\n        Log.e(\"OnColorChoose\",String.valueOf(newColor));\r\n        ((IColorChange)act).onChooseColor(newColor);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Fragment/top/ColorTab.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Fragment/top/ColorTab.java	(date 1609237932655)
@@ -6,6 +6,8 @@
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.CompoundButton;
+import android.widget.SeekBar;
 
 import androidx.core.content.ContextCompat;
 import androidx.databinding.DataBindingUtil;
@@ -16,6 +18,7 @@
 import com.app.brandmania.Adapter.OnlyTextColorPickerAddaptor;
 import com.app.brandmania.Interface.IColorChange;
 import com.app.brandmania.Interface.ITextColorChangeEvent;
+import com.app.brandmania.Interface.ITextSizeEvent;
 import com.app.brandmania.R;
 import com.app.brandmania.databinding.ColorTabBinding;
 import com.app.brandmania.databinding.FragmentCustomBinding;
@@ -29,6 +32,9 @@
     private ColorTabBinding binding;
     private int mColorCode;
     private ColorTab context;
+
+    int textSize = 5;
+    int saveProgress;
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
@@ -48,6 +54,43 @@
         binding.colorPickerView.setOnColorChangedListener(this);
        // binding.colorPickerView.setColor(ContextCompat.getColor(act,R.color.black), true);
 
+
+        binding.seekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
+            @Override
+            public void onStopTrackingTouch(SeekBar seekBar) {
+
+            }
+
+            @Override
+            public void onStartTrackingTouch(SeekBar seekBar) {
+
+            }
+
+            @Override
+            public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
+                textSize = textSize + (progress - saveProgress);
+                saveProgress = progress;
+                //  binding.seekBar.getProgressDrawable().setColorFilter(getResources().getColor(R.color.colorPrimary), PorterDuff.Mode.SRC_ATOP);
+                ((IColorChange)act).onBorderSizeChange(textSize);
+
+
+            }
+        });
+        binding.seekBar.setEnabled(false);
+
+        binding.checkbox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
+            @Override
+            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
+                if (isChecked){
+                    binding.seekBar.setEnabled(true);
+                }else {
+                    binding.seekBar.setProgress(0);
+                    ((IColorChange)act).onBorderSizeChange(0);
+                    binding.seekBar.setEnabled(false);
+                }
+            }
+        });
+
         return binding.getRoot();
     }
 
Index: app/src/main/java/com/app/brandmania/Utils/Utility.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Utils;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.Dialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Paint;\r\nimport android.graphics.Typeface;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport com.app.brandmania.Activity.PackageActivity;\r\nimport com.app.brandmania.Activity.RazorPayActivity;\r\nimport com.app.brandmania.Activity.ViewBrandActivity;\r\nimport com.app.brandmania.Interface.IPaymentFlow;\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.app.brandmania.Activity.alertListenerCallback;\r\nimport com.app.brandmania.BuildConfig;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.databinding.DetailImageviewBinding;\r\nimport com.app.brandmania.databinding.DialogImageViewLayoutBinding;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\n\r\npublic class Utility {\r\n    public static Dialog dialog;\r\n    private static Dialog progressDialog;\r\n    public static void Log(String act, Object msg) {\r\n        Log.e(act, msg + \"\");\r\n    }\r\n    public static void showLoadingTran(Activity act) {\r\n\r\n        if (dialog != null && dialog.isShowing())\r\n            return;\r\n\r\n        dialog = new Dialog(act);\r\n        dialog.getWindow().setBackgroundDrawableResource(\r\n                R.color.colorProgressBackground);\r\n        dialog.setContentView(R.layout.progress_bar_layout);\r\n        dialog.setCancelable(false);\r\n        act.runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                // Showing Alert Message\r\n                try {\r\n                    if (dialog != null && !dialog.isShowing())\r\n                        dialog.show();\r\n                } catch (WindowManager.BadTokenException e) {\r\n                    e.printStackTrace();\r\n                } catch (RuntimeException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void dismissLoadingTran() {\r\n        try {\r\n            if (dialog != null && dialog.isShowing())\r\n                dialog.dismiss();\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n    public static void setItalicText(TextView textView,boolean italic){\r\n        if (italic){\r\n            textView.setTypeface(textView.getTypeface(), Typeface.ITALIC);\r\n        }else {\r\n            textView.setTypeface(null, Typeface.NORMAL);\r\n        }\r\n    }\r\n    public static void setUnderlineText(TextView textView,boolean underline){\r\n        if (underline){\r\n            textView.setPaintFlags(textView.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n        }else {\r\n            textView.setPaintFlags(0);\r\n        }\r\n    }\r\n    public static void setBold(TextView textView,boolean bold){\r\n        if (bold){\r\n            textView.setTypeface(textView.getTypeface(), Typeface.BOLD);\r\n        }else {\r\n            textView.setTypeface(null, Typeface.NORMAL);\r\n        }\r\n    }\r\n    public static void RemoveError(EditText editText) {\r\n        editText.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void onTextChanged(CharSequence cs, int arg1, int arg2, int arg3) {\r\n                editText.setError(null);\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable editable) {\r\n            }\r\n\r\n            @Override\r\n            public void beforeTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {\r\n            }\r\n        });\r\n    }\r\n    public static void loadImageOnURI(Activity act, ImageView imageView, Uri uri) {\r\n        Glide.with(act)\r\n                .load(uri)\r\n                .placeholder(R.drawable.placeholder)\r\n                .error(R.drawable.placeholder)\r\n                .diskCacheStrategy(DiskCacheStrategy.ALL)\r\n                .override(1200, 1000)\r\n                .into(imageView);\r\n    }\r\n    public static void dismissProgress() {\r\n        try {\r\n            if (progressDialog != null && progressDialog.isShowing())\r\n                progressDialog.dismiss();\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static void sendMail(Activity act, String emailId, String contactNumber) {\r\n        Intent emailIntent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts(\r\n                \"mailto\", \"lakharasachin.qf@gmail.com\", null));\r\n        emailIntent.putExtra(Intent.EXTRA_SUBJECT, \"iSmart Homes Android app support\");\r\n\r\n        emailIntent.putExtra(Intent.EXTRA_TEXT, \"\" +\r\n                \"===========================\\n\" +\r\n                \"App Details\\n\" +\r\n                \"\\n\" +\r\n                \"App Version : \" + BuildConfig.VERSION_NAME + \"\\n\" +\r\n                \"Android Version : \" + Build.VERSION.SDK_INT + \"\\n\" +\r\n                \"Android Device : \" + Build.BRAND + \"\\n\" +\r\n                \"Android Device Model : \" + Build.MODEL + \"\\n\" +\r\n                \"Email : \" + emailId + \"\\n\" +\r\n                \"Mobile : \" + contactNumber + \"\\n\" +\r\n                \"===========================\\n\"\r\n        );\r\n           /*  emailIntent.putExtra(Intent.EXTRA_TEXT, \"\" +\r\n                    \"===========================\\n\" +\r\n                    \"App Details\\n\" +\r\n                    \"\\n\" +\r\n                    \"App Version : \" + BuildConfig.VERSION_NAME + \"\\n\" +\r\n                    \"Android Version : \" + Build.VERSION.SDK_INT + \"\\n\" +\r\n                    \"Android Device : \" + Build.BRAND + \"\\n\" +\r\n                    \"Android Device Model : \" + Build.MODEL + \"\\n\" +\r\n                    \"===========================\\n\"\r\n            );*/\r\n\r\n        act.startActivity(Intent.createChooser(emailIntent, \"Send email...\"));\r\n    }\r\n\r\n\r\n    public static void showProgress(Activity act) {\r\n\r\n        if (progressDialog != null && progressDialog.isShowing())\r\n            return;\r\n\r\n        progressDialog = new Dialog(act);\r\n        progressDialog.setContentView(R.layout.progress_bar_layout);\r\n        progressDialog.setCancelable(false);\r\n        act.runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                // Showing Alert Message\r\n                try {\r\n                    if (progressDialog != null && !progressDialog.isShowing())\r\n                        progressDialog.show();\r\n                } catch (RuntimeException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void showAlert(Activity act, String msg) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        ((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public static void showAlertForPackage(Activity act, String msg) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        Intent intent=new Intent(act, PackageActivity.class);\r\n                        intent.addCategory(Intent.CATEGORY_HOME);\r\n                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                        act.startActivity(intent);\r\n                        act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                        //((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public static void showAlertForPayment(Activity act, String msg) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        Intent intent=new Intent(act, PackageActivity.class);\r\n                        intent.addCategory(Intent.CATEGORY_HOME);\r\n                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                        act.startActivity(intent);\r\n                        act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                        //((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n\r\n\r\n    public static void showAlert(Activity act, String msg, String flag) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        act.onBackPressed();\r\n                        ((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n\r\n\r\n\r\n    public static void fullScreenImageViewer(Activity act, String imageUrl) {\r\n        Log(\"Image url\", imageUrl + \"s\");\r\n        DetailImageviewBinding binding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.detail_imageview, null, false);\r\n        androidx.appcompat.app.AlertDialog alertDialog;\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(act, R.style.MyAlertDialogStyle);\r\n        builder.setView(binding.getRoot());\r\n        alertDialog = builder.create();\r\n        alertDialog.setContentView(binding.getRoot());\r\n        binding.CloseImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n\r\n        Glide.with(act).load(imageUrl).error(R.drawable.placeholder)\r\n                .placeholder(R.drawable.placeholder).into(binding.fullImageViewer);\r\n        alertDialog.show();\r\n\r\n    }\r\n\r\n    public static void showAlertNew(Activity act, String msg) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        act.onBackPressed();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public static boolean isNetworkAvailable(Context context) {\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();\r\n        return activeNetworkInfo != null && activeNetworkInfo.isConnected();\r\n    }\r\n\r\n    public static void showLoading(Activity act) {\r\n\r\n        if (dialog != null && dialog.isShowing())\r\n            return;\r\n\r\n        dialog = new Dialog(act);\r\n        dialog.getWindow().setBackgroundDrawableResource(\r\n                R.color.colorProgressOverlay);\r\n        dialog.setContentView(R.layout.dialog_loader);\r\n        dialog.setCancelable(false);\r\n        act.runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                // Showing Alert Message\r\n                try {\r\n                    if (dialog != null && !dialog.isShowing())\r\n                        dialog.show();\r\n                } catch (WindowManager.BadTokenException e) {\r\n                    e.printStackTrace();\r\n                } catch (RuntimeException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public static void dismissLoading() {\r\n        try {\r\n            if (dialog != null && dialog.isShowing())\r\n                dialog.dismiss();\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static boolean compareDate(String endDate) {\r\n        Date c = Calendar.getInstance().getTime();\r\n\r\n        SimpleDateFormat fmt = new SimpleDateFormat(\"dd-mm-yyyy\");\r\n        String currtDate = fmt.format(c);\r\n        try {\r\n\r\n            Date currentDate = fmt.parse(currtDate);\r\n            Date meetingDate = fmt.parse(endDate);\r\n            if (currentDate.compareTo(meetingDate) > 0) {\r\n                return true;\r\n            }\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static void rateApp(Activity act) {\r\n        Uri uri = Uri.parse(\"market://details?id=com.app.bespoke\");// + act.getPackageName());\r\n        Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);\r\n\r\n        goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |\r\n                Intent.FLAG_ACTIVITY_NEW_DOCUMENT |\r\n                Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\r\n        try {\r\n            act.startActivity(goToMarket);\r\n        } catch (ActivityNotFoundException e) {\r\n            act.startActivity(new Intent(Intent.ACTION_VIEW,\r\n                    Uri.parse(\"http://play.google.com/store/apps/details?id=com.app.bespoke\")));//+ act.getPackageName())));\r\n        }\r\n    }\r\n    private static OnImageViewDismiss viewDismiss;\r\n    public static void fullScreenImageViewerBitmap(Activity act, Bitmap imageUrl, OnImageViewDismiss viewDi) {\r\n        viewDismiss = viewDi;\r\n        DialogImageViewLayoutBinding binding = DataBindingUtil.inflate(LayoutInflater.from(act),\r\n                R.layout.dialog_image_view_layout, null, false);\r\n        androidx.appcompat.app.AlertDialog alertDialog;\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(act, R.style.MyAlertDialogStyle);\r\n        builder.setView(binding.getRoot());\r\n        alertDialog = builder.create();\r\n        alertDialog.setContentView(binding.getRoot());\r\n\r\n        binding.CloseImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n\r\n//        binding.fullImageViewer3.setImageBitmap(imageUrl);\r\n//        binding.fullImageViewer3.setVisibility(View.VISIBLE);\r\n//        binding.fullImageViewer.setVisibility(View.GONE);\r\n//\r\n//        binding.fullImageViewer3.setVisibility(View.VISIBLE);\r\n//        binding.fullImageViewer.setVisibility(View.GONE);\r\n\r\n\r\n        alertDialog.show();\r\n        alertDialog.setOnDismissListener(new DialogInterface.OnDismissListener() {\r\n            @Override\r\n            public void onDismiss(DialogInterface dialog) {\r\n                viewDismiss.onPhotoDialogDismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    public interface OnImageViewDismiss {\r\n        void onPhotoDialogDismiss();\r\n    }\r\n    public static void showSnackBar(View view, Activity act, String message) {\r\n        Snackbar snackbar = Snackbar\r\n                .make(view, message, Snackbar.LENGTH_LONG)\r\n                .setAction(\"OK\", new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n\r\n                    }\r\n                });\r\n        snackbar.setActionTextColor(ContextCompat.getColor(act, R.color.colorNavText));\r\n        snackbar.show();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Utils/Utility.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Utils/Utility.java	(date 1609306260622)
@@ -1,5 +1,6 @@
 package com.app.brandmania.Utils;
 
+import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.app.Dialog;
@@ -28,22 +29,21 @@
 import androidx.databinding.DataBindingUtil;
 
 import com.app.brandmania.Activity.PackageActivity;
-import com.app.brandmania.Activity.RazorPayActivity;
-import com.app.brandmania.Activity.ViewBrandActivity;
-import com.app.brandmania.Interface.IPaymentFlow;
-import com.bumptech.glide.Glide;
-import com.bumptech.glide.load.engine.DiskCacheStrategy;
-import com.google.android.material.snackbar.Snackbar;
 import com.app.brandmania.Activity.alertListenerCallback;
 import com.app.brandmania.BuildConfig;
+import com.app.brandmania.Model.BrandListItem;
 import com.app.brandmania.R;
 import com.app.brandmania.databinding.DetailImageviewBinding;
 import com.app.brandmania.databinding.DialogImageViewLayoutBinding;
+import com.bumptech.glide.Glide;
+import com.bumptech.glide.load.engine.DiskCacheStrategy;
+import com.google.android.material.snackbar.Snackbar;
 
 import java.text.ParseException;
 import java.text.SimpleDateFormat;
 import java.util.Calendar;
 import java.util.Date;
+import java.util.GregorianCalendar;
 
 
 public class Utility {
@@ -76,7 +76,43 @@
                 }
             }
         });
+    }
+
+    public static int monthsBetweenDates(String subscriptionDateStr){
+        Date c = Calendar.getInstance().getTime();
+        @SuppressLint("SimpleDateFormat") SimpleDateFormat fmt = new SimpleDateFormat("dd-MM-yyyy");
+        String currDateStr = fmt.format(c);
+        try {
+            Date subscriptionDate = fmt.parse(subscriptionDateStr);
+            Date currentDate = fmt.parse(currDateStr);
+
+            Calendar startCalendar = new GregorianCalendar();
+            startCalendar.setTime(subscriptionDate);
+            Calendar endCalendar = new GregorianCalendar();
+            endCalendar.setTime(currentDate);
+            int diffYear = endCalendar.get(Calendar.YEAR) - startCalendar.get(Calendar.YEAR);
+            int diffMonth = diffYear * 12 + endCalendar.get(Calendar.MONTH) - startCalendar.get(Calendar.MONTH);
+            Log.e("Diffrenere",diffMonth+" "+diffYear);
+            if ((diffYear == 0) && (diffMonth == 0)){
+                return diffMonth;
+            }else {
+                return 1;
+            }
+
+        } catch (ParseException e) {
+            e.printStackTrace();
+        }
+        return 1;
+    }
+
+
+    public static boolean isUserPaid(BrandListItem activeBrand) {
+        if (activeBrand.getPackagename().isEmpty() && activeBrand.getIs_payment_pending().equalsIgnoreCase("0"))
+            return true;
+        else
+            return false;
     }
+
 
     public static void dismissLoadingTran() {
         try {
@@ -86,8 +122,9 @@
             e.printStackTrace();
         }
     }
-    public static void setItalicText(TextView textView,boolean italic){
-        if (italic){
+
+    public static void setItalicText(TextView textView, boolean italic) {
+        if (italic) {
             textView.setTypeface(textView.getTypeface(), Typeface.ITALIC);
         }else {
             textView.setTypeface(null, Typeface.NORMAL);
Index: app/src/main/res/layout/activity_about_us.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n\r\n    <RelativeLayout xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n        xmlns:tools=\"http://schemas.android.com/tools\"\r\n        android:layout_width=\"match_parent\"\r\n        android:id=\"@+id/rootBackground\"\r\n        android:layout_height=\"match_parent\"\r\n        tools:context=\".activity.AboutUsActivity\">\r\n\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:visibility=\"visible\"\r\n            android:id=\"@+id/my_toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"@dimen/_70sdp\"\r\n            android:background=\"@drawable/toolbar_background_second\"\r\n            android:elevation=\"4dp\"\r\n            android:theme=\"@style/ThemeOverlay.AppCompat.ActionBar\"\r\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\">\r\n\r\n            <RelativeLayout\r\n                android:layout_marginTop=\"@dimen/_10sdp\"\r\n                android:layout_marginRight=\"@dimen/_7sdp\"\r\n                android:id=\"@+id/main_linearlayout_title\"\r\n                android:elevation=\"0dp\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"@dimen/_70sdp\">\r\n                <ImageView\r\n                    android:layout_width=\"23dp\"\r\n                    android:layout_height=\"23dp\"\r\n                    android:layout_alignParentLeft=\"true\"\r\n                    android:id=\"@+id/BackButton\"\r\n                    android:layout_marginLeft=\"6dp\"\r\n                    android:layout_marginRight=\"10dp\"\r\n                    android:background=\"@drawable/ic_left_arrow\"></ImageView>\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_toEndOf=\"@+id/BackButton\"\r\n                    android:fontFamily=\"@font/montserrat_semibold\"\r\n                    android:text=\"@string/about_us_activity\"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_13sdp\"\r\n                    android:textStyle=\"bold\"></TextView>\r\n\r\n            </RelativeLayout>\r\n        </androidx.appcompat.widget.Toolbar>\r\n\r\n        <RelativeLayout\r\n\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_below=\"@+id/my_toolbar\"\r\n            android:padding=\"16dp\"\r\n            android:layout_height=\"match_parent\">\r\n\r\n\r\n            <WebView\r\n                android:id=\"@+id/webView\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n            </WebView>\r\n\r\n        </RelativeLayout>\r\n\r\n    </RelativeLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_about_us.xml	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/res/layout/activity_about_us.xml	(date 1609247275449)
@@ -34,6 +34,7 @@
                     android:layout_marginRight="10dp"
                     android:background="@drawable/ic_left_arrow"></ImageView>
                 <TextView
+                    android:id="@+id/toolbar_title"
                     android:layout_width="wrap_content"
                     android:layout_height="wrap_content"
                     android:layout_toEndOf="@+id/BackButton"
Index: app/src/main/java/com/app/brandmania/Interface/IColorChange.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Interface;\r\n\r\npublic interface IColorChange {\r\n    void onChooseColor(int colorCode);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Interface/IColorChange.java	(revision 88600ffc4f0cec8297d873b73e83e4a6106e9222)
+++ app/src/main/java/com/app/brandmania/Interface/IColorChange.java	(date 1609237932906)
@@ -2,4 +2,5 @@
 
 public interface IColorChange {
     void onChooseColor(int colorCode);
+    void onBorderSizeChange(int size);
 }
