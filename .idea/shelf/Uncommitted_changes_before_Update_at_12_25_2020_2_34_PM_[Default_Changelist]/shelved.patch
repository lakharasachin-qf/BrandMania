Index: app/src/main/java/com/app/brandmania/Utils/APIs.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Utils;\r\n\r\npublic class APIs {\r\n\r\n    public static final String URL = \"http://queryfinders.com/brandmania_uat/public/api/\";\r\n    //public static final String URL = \"http://queryfinders.com/Brand360/public/api/\";\r\n\r\n // public static final String URL= \"http://192.168.1.131/brand365/public/api/\";\r\n    public static final String USER_REGISTRATION =URL+\"userRegistration\";\r\n    public static final String ADD_BRAND = URL+\"addBrand\";\r\n    public static final String GET_BRAND_CATEGORY = URL + \"getBrandCategory\";\r\n    public static final String GET_BANNER = URL + \"getBanner\";\r\n    public static final String GET_IMAGE_CATEGORY = URL + \"getImageCategory\";\r\n    public static final String GET_IMAGEBUID_CATEGORY = URL + \"getImageCategoryImage\";\r\n    public static final String UPDATE_TOKEN = URL+\"updateToken\";\r\n    public static final String EDIT_BRAND = URL + \"editBrand\";\r\n    public static final String ADD_USERACTIVITY = URL + \"addUserActivity\";\r\n    public static final String FAQ = URL+\"getFaq\";\r\n    public static final String REPORT_BUG =URL+\"addReportBugs\";\r\n    public static final String ABOUT_ISMART_HOMES = URL + \"\";\r\n    public static final String DOWNLOAD_SHARE = URL + \"addImageActivity\";\r\n    public static final String GET_DOWNLOADLIST_ITEM = URL+\"getDownloadList\";\r\n    public static final String GET_FAVORITLIST_ITEM = URL + \"getFavoriteList\";\r\n    public static final String DELETE_BRAND = URL+\"deleteBrandById\";\r\n    public static final String REMOVE_FAVOURIT = URL + \"RemoveFromFav\";\r\n    public static final String IS_COMPLETE = URL +\"fetchFlowStatus\";\r\n    public static final String GET_FRAME = URL+\"getFrames\";\r\n    public static final String GET_BRAND = URL+\"getBrand\";\r\n    public static final String GET_NOTIFICATION = URL+\"getNotification\";\r\n    public static final String VERIFY_OTP = URL+\"otpVerify\";\r\n    public static final String SEND_OTP =URL+\"sendOtp\" ;\r\n    public static final String MAKE_PAYMENT = URL+\"makePayment\";\r\n    public static final String GENERATE_ORDER_ID =URL+\"createOrder\";\r\n    public static final String GET_PACKAGE = URL+\"getPackage\";\r\n    public static final String GET_UPDATE = URL+\"getApplicationVersion\";\r\n    public static final String ADD_CUSTOMFRAME = URL + \"addFrameToBrand\";\r\n    public static final String GET_BRAND_BY_ID = URL + \"getBrandById\";\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Utils/APIs.java	(revision b94e61c8e866103e27969f2bc5a3b7a5ef244fcd)
+++ app/src/main/java/com/app/brandmania/Utils/APIs.java	(date 1608880666779)
@@ -35,4 +35,6 @@
     public static final String GET_UPDATE = URL+"getApplicationVersion";
     public static final String ADD_CUSTOMFRAME = URL + "addFrameToBrand";
     public static final String GET_BRAND_BY_ID = URL + "getBrandById";
+
+    public static final String CUSTOM_FRAME_ACCESS=URL+"getCustomFrameAccess";
 }
Index: app/src/main/java/com/app/brandmania/Utils/Utility.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Utils;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.Dialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\n\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport com.app.brandmania.Activity.PackageActivity;\r\nimport com.app.brandmania.Activity.RazorPayActivity;\r\nimport com.app.brandmania.Activity.ViewBrandActivity;\r\nimport com.app.brandmania.Interface.IPaymentFlow;\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.app.brandmania.Activity.alertListenerCallback;\r\nimport com.app.brandmania.BuildConfig;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.databinding.DetailImageviewBinding;\r\nimport com.app.brandmania.databinding.DialogImageViewLayoutBinding;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\n\r\n\r\npublic class Utility {\r\n    public static Dialog dialog;\r\n    private static Dialog progressDialog;\r\n    public static void Log(String act, Object msg) {\r\n        Log.e(act, msg + \"\");\r\n    }\r\n\r\n    public static void RemoveError(EditText editText) {\r\n        editText.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void onTextChanged(CharSequence cs, int arg1, int arg2, int arg3) {\r\n                editText.setError(null);\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable editable) {\r\n            }\r\n\r\n            @Override\r\n            public void beforeTextChanged(CharSequence arg0, int arg1, int arg2, int arg3) {\r\n            }\r\n        });\r\n    }\r\n    public static void loadImageOnURI(Activity act, ImageView imageView, Uri uri) {\r\n        Glide.with(act)\r\n                .load(uri)\r\n                .placeholder(R.drawable.placeholder)\r\n                .error(R.drawable.placeholder)\r\n                .diskCacheStrategy(DiskCacheStrategy.ALL)\r\n                .override(1200, 1000)\r\n                .into(imageView);\r\n    }\r\n    public static void dismissProgress() {\r\n        try {\r\n            if (progressDialog != null && progressDialog.isShowing())\r\n                progressDialog.dismiss();\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static void sendMail(Activity act, String emailId, String contactNumber) {\r\n        Intent emailIntent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts(\r\n                \"mailto\", \"lakharasachin.qf@gmail.com\", null));\r\n        emailIntent.putExtra(Intent.EXTRA_SUBJECT, \"iSmart Homes Android app support\");\r\n\r\n        emailIntent.putExtra(Intent.EXTRA_TEXT, \"\" +\r\n                \"===========================\\n\" +\r\n                \"App Details\\n\" +\r\n                \"\\n\" +\r\n                \"App Version : \" + BuildConfig.VERSION_NAME + \"\\n\" +\r\n                \"Android Version : \" + Build.VERSION.SDK_INT + \"\\n\" +\r\n                \"Android Device : \" + Build.BRAND + \"\\n\" +\r\n                \"Android Device Model : \" + Build.MODEL + \"\\n\" +\r\n                \"Email : \" + emailId + \"\\n\" +\r\n                \"Mobile : \" + contactNumber + \"\\n\" +\r\n                \"===========================\\n\"\r\n        );\r\n           /*  emailIntent.putExtra(Intent.EXTRA_TEXT, \"\" +\r\n                    \"===========================\\n\" +\r\n                    \"App Details\\n\" +\r\n                    \"\\n\" +\r\n                    \"App Version : \" + BuildConfig.VERSION_NAME + \"\\n\" +\r\n                    \"Android Version : \" + Build.VERSION.SDK_INT + \"\\n\" +\r\n                    \"Android Device : \" + Build.BRAND + \"\\n\" +\r\n                    \"Android Device Model : \" + Build.MODEL + \"\\n\" +\r\n                    \"===========================\\n\"\r\n            );*/\r\n\r\n        act.startActivity(Intent.createChooser(emailIntent, \"Send email...\"));\r\n    }\r\n\r\n\r\n    public static void showProgress(Activity act) {\r\n\r\n        if (progressDialog != null && progressDialog.isShowing())\r\n            return;\r\n\r\n        progressDialog = new Dialog(act);\r\n        progressDialog.setContentView(R.layout.progress_bar_layout);\r\n        progressDialog.setCancelable(false);\r\n        act.runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                // Showing Alert Message\r\n                try {\r\n                    if (progressDialog != null && !progressDialog.isShowing())\r\n                        progressDialog.show();\r\n                } catch (RuntimeException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void showAlert(Activity act, String msg) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        ((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public static void showAlertForPackage(Activity act, String msg) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        Intent intent=new Intent(act, PackageActivity.class);\r\n                        intent.addCategory(Intent.CATEGORY_HOME);\r\n                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                        act.startActivity(intent);\r\n                        act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                        //((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public static void showAlertForPayment(Activity act, String msg) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        Intent intent=new Intent(act, PackageActivity.class);\r\n                        intent.addCategory(Intent.CATEGORY_HOME);\r\n                        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                        act.startActivity(intent);\r\n                        act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                        //((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n\r\n\r\n    public static void showAlert(Activity act, String msg, String flag) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        act.onBackPressed();\r\n                        ((alertListenerCallback) act).alertListenerClick();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n\r\n\r\n\r\n    public static void fullScreenImageViewer(Activity act, String imageUrl) {\r\n        Log(\"Image url\", imageUrl + \"s\");\r\n        DetailImageviewBinding binding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.detail_imageview, null, false);\r\n        androidx.appcompat.app.AlertDialog alertDialog;\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(act, R.style.MyAlertDialogStyle);\r\n        builder.setView(binding.getRoot());\r\n        alertDialog = builder.create();\r\n        alertDialog.setContentView(binding.getRoot());\r\n        binding.CloseImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n\r\n        Glide.with(act).load(imageUrl).error(R.drawable.placeholder)\r\n                .placeholder(R.drawable.placeholder).into(binding.fullImageViewer);\r\n        alertDialog.show();\r\n\r\n    }\r\n\r\n    public static void showAlertNew(Activity act, String msg) {\r\n        new AlertDialog.Builder(act)\r\n                .setMessage(msg)\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        dialogInterface.dismiss();\r\n                        act.onBackPressed();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public static boolean isNetworkAvailable(Context context) {\r\n        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();\r\n        return activeNetworkInfo != null && activeNetworkInfo.isConnected();\r\n    }\r\n\r\n    public static void showLoading(Activity act) {\r\n\r\n        if (dialog != null && dialog.isShowing())\r\n            return;\r\n\r\n        dialog = new Dialog(act);\r\n        dialog.getWindow().setBackgroundDrawableResource(\r\n                R.color.colorProgressOverlay);\r\n        dialog.setContentView(R.layout.dialog_loader);\r\n        dialog.setCancelable(false);\r\n        act.runOnUiThread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                // Showing Alert Message\r\n                try {\r\n                    if (dialog != null && !dialog.isShowing())\r\n                        dialog.show();\r\n                } catch (WindowManager.BadTokenException e) {\r\n                    e.printStackTrace();\r\n                } catch (RuntimeException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public static void dismissLoading() {\r\n        try {\r\n            if (dialog != null && dialog.isShowing())\r\n                dialog.dismiss();\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static boolean compareDate(String endDate) {\r\n        Date c = Calendar.getInstance().getTime();\r\n\r\n        SimpleDateFormat fmt = new SimpleDateFormat(\"dd-mm-yyyy\");\r\n        String currtDate = fmt.format(c);\r\n        try {\r\n\r\n            Date currentDate = fmt.parse(currtDate);\r\n            Date meetingDate = fmt.parse(endDate);\r\n            if (currentDate.compareTo(meetingDate) > 0) {\r\n                return true;\r\n            }\r\n        } catch (ParseException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static void rateApp(Activity act) {\r\n        Uri uri = Uri.parse(\"market://details?id=com.app.bespoke\");// + act.getPackageName());\r\n        Intent goToMarket = new Intent(Intent.ACTION_VIEW, uri);\r\n\r\n        goToMarket.addFlags(Intent.FLAG_ACTIVITY_NO_HISTORY |\r\n                Intent.FLAG_ACTIVITY_NEW_DOCUMENT |\r\n                Intent.FLAG_ACTIVITY_MULTIPLE_TASK);\r\n        try {\r\n            act.startActivity(goToMarket);\r\n        } catch (ActivityNotFoundException e) {\r\n            act.startActivity(new Intent(Intent.ACTION_VIEW,\r\n                    Uri.parse(\"http://play.google.com/store/apps/details?id=com.app.bespoke\")));//+ act.getPackageName())));\r\n        }\r\n    }\r\n    private static OnImageViewDismiss viewDismiss;\r\n    public static void fullScreenImageViewerBitmap(Activity act, Bitmap imageUrl, OnImageViewDismiss viewDi) {\r\n        viewDismiss = viewDi;\r\n        DialogImageViewLayoutBinding binding = DataBindingUtil.inflate(LayoutInflater.from(act),\r\n                R.layout.dialog_image_view_layout, null, false);\r\n        androidx.appcompat.app.AlertDialog alertDialog;\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(act, R.style.MyAlertDialogStyle);\r\n        builder.setView(binding.getRoot());\r\n        alertDialog = builder.create();\r\n        alertDialog.setContentView(binding.getRoot());\r\n\r\n        binding.CloseImg.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n\r\n//        binding.fullImageViewer3.setImageBitmap(imageUrl);\r\n//        binding.fullImageViewer3.setVisibility(View.VISIBLE);\r\n//        binding.fullImageViewer.setVisibility(View.GONE);\r\n//\r\n//        binding.fullImageViewer3.setVisibility(View.VISIBLE);\r\n//        binding.fullImageViewer.setVisibility(View.GONE);\r\n\r\n\r\n        alertDialog.show();\r\n        alertDialog.setOnDismissListener(new DialogInterface.OnDismissListener() {\r\n            @Override\r\n            public void onDismiss(DialogInterface dialog) {\r\n                viewDismiss.onPhotoDialogDismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    public interface OnImageViewDismiss {\r\n        void onPhotoDialogDismiss();\r\n    }\r\n    public static void showSnackBar(View view, Activity act, String message) {\r\n        Snackbar snackbar = Snackbar\r\n                .make(view, message, Snackbar.LENGTH_LONG)\r\n                .setAction(\"OK\", new View.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(View view) {\r\n\r\n                    }\r\n                });\r\n        snackbar.setActionTextColor(ContextCompat.getColor(act, R.color.colorNavText));\r\n        snackbar.show();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Utils/Utility.java	(revision b94e61c8e866103e27969f2bc5a3b7a5ef244fcd)
+++ app/src/main/java/com/app/brandmania/Utils/Utility.java	(date 1608883638609)
@@ -8,6 +8,8 @@
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.graphics.Bitmap;
+import android.graphics.Paint;
+import android.graphics.Typeface;
 import android.net.ConnectivityManager;
 import android.net.NetworkInfo;
 import android.net.Uri;
@@ -20,6 +22,7 @@
 import android.view.WindowManager;
 import android.widget.EditText;
 import android.widget.ImageView;
+import android.widget.TextView;
 
 import androidx.core.content.ContextCompat;
 import androidx.databinding.DataBindingUtil;
@@ -49,7 +52,61 @@
     public static void Log(String act, Object msg) {
         Log.e(act, msg + "");
     }
+    public static void showLoadingTran(Activity act) {
+
+        if (dialog != null && dialog.isShowing())
+            return;
 
+        dialog = new Dialog(act);
+        dialog.getWindow().setBackgroundDrawableResource(
+                R.color.colorProgressBackground);
+        dialog.setContentView(R.layout.progress_bar_layout);
+        dialog.setCancelable(false);
+        act.runOnUiThread(new Runnable() {
+            @Override
+            public void run() {
+                // Showing Alert Message
+                try {
+                    if (dialog != null && !dialog.isShowing())
+                        dialog.show();
+                } catch (WindowManager.BadTokenException e) {
+                    e.printStackTrace();
+                } catch (RuntimeException e) {
+                    e.printStackTrace();
+                }
+            }
+        });
+    }
+
+    public static void dismissLoadingTran() {
+        try {
+            if (dialog != null && dialog.isShowing())
+                dialog.dismiss();
+        } catch (IllegalArgumentException e) {
+            e.printStackTrace();
+        }
+    }
+    public static void setItalicText(TextView textView,boolean italic){
+        if (italic){
+            textView.setTypeface(textView.getTypeface(), Typeface.ITALIC);
+        }else {
+            textView.setTypeface(null, Typeface.NORMAL);
+        }
+    }
+    public static void setUnderlineText(TextView textView,boolean underline){
+        if (underline){
+            textView.setPaintFlags(textView.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
+        }else {
+            textView.setPaintFlags(0);
+        }
+    }
+    public static void setBold(TextView textView,boolean bold){
+        if (bold){
+            textView.setTypeface(textView.getTypeface(), Typeface.BOLD);
+        }else {
+            textView.setTypeface(null, Typeface.NORMAL);
+        }
+    }
     public static void RemoveError(EditText editText) {
         editText.addTextChangedListener(new TextWatcher() {
             @Override
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <color name=\"colorPrimary\">#ad2753</color>\r\n    <color name=\"colorsecond\">#ed2c66</color>\r\n    <color name=\"colorthird\">#faa81e</color>\r\n    <color name=\"colorPrimaryDark\">#3700B3</color>\r\n    <color name=\"colorAccent\">#ad2753</color>\r\n    <color name=\"startcolor\">#CE86ACC1</color>\r\n    <color name=\"centercolor\">#F74A91E6</color>\r\n    <color name=\"backgroundgray\">#fdfdfe</color>\r\n    <color name=\"endcolor1\">#F005074C</color>\r\n    <color name=\"colorNavIcon\">#dae9f6</color>\r\n    <color name=\"colorNavText\">#fff</color>\r\n    <color name=\"lightGraycolor\">#BE7C7A7A</color>\r\n    <color name=\"alltextcolor\">#0C0C0C</color>\r\n    <color name=\"Graycolor\">#b5b5b5</color>\r\n    <color name=\"colorRed\">#FF0000</color>\r\n    <color name=\"blackbottom\">#E6494848</color>\r\n    <color name=\"colorGreen\">#E61F6C1F</color>\r\n    <color name=\"black\">#000</color>\r\n    <color name=\"colorPrimaryTransperent\">#75AD2753</color>\r\n    <color name=\"blackcenter\">#F2838282</color>\r\n    <color name=\"colorProgressOverlay\">#00000000</color>\r\n    <color name=\"blacktop\">#FABFBDBD</color>\r\n    <color name=\"header\">#F1F1F1</color>\r\n    <color name=\"simmerColor\">#CDCDCD</color>\r\n    <color name=\"viewColor\">#DFD8D7D7</color>\r\n    <color name=\"trans\">#00000000</color>\r\n\r\n\r\n\r\n\r\n    <color name=\"blue_color_picker\">#0066FF</color>\r\n    <color name=\"brown_color_picker\">#AF593E</color>\r\n    <color name=\"green_color_picker\">#01A368</color>\r\n    <color name=\"orange_color_picker\">#FF861F</color>\r\n    <color name=\"red_color_picker\">#ED0A3F</color>\r\n    <color name=\"red_orange_color_picker\">#FF3F34</color>\r\n    <color name=\"sky_blue_color_picker\">#76D7EA</color>\r\n    <color name=\"violet_color_picker\">#8359A3</color>\r\n    <color name=\"yellow_color_picker\">#FBE870</color>\r\n    <color name=\"yellow_green_color_picker\">#C5E17A</color>\r\n    <color name=\"tool_bg\">#151414</color>\r\n    <color name=\"semi_black_transparent\">#99000000</color>\r\n    <color name=\"color_green\">#72BC1D</color>\r\n\r\n    <color name=\"white\">#FFFFFF</color>\r\n    <color name=\"ivory\">#FFFFF0</color>\r\n    <color name=\"light_yellow\">#FFFFE0</color>\r\n    <color name=\"yellow\">#FFFF00</color>\r\n    <color name=\"snow\">#FFFAFA</color>\r\n    <color name=\"floral_white\">#FFFAF0</color>\r\n    <color name=\"lemon_chiffon\">#FFFACD</color>\r\n    <color name=\"cornsilk\">#FFF8DC</color>\r\n    <color name=\"seashell\">#FFF5EE</color>\r\n    <color name=\"lavender_blush\">#FFF0F5</color>\r\n    <color name=\"papaya_whip\">#FFEFD5</color>\r\n    <color name=\"blanched_almond\">#FFEBCD</color>\r\n    <color name=\"misty_rose\">#FFE4E1</color>\r\n    <color name=\"bisque\">#FFE4C4</color>\r\n    <color name=\"moccasin\">#FFE4B5</color>\r\n    <color name=\"navajo_white\">#FFDEAD</color>\r\n    <color name=\"peach_puff\">#FFDAB9</color>\r\n    <color name=\"cold\">#FFD700</color>\r\n    <color name=\"pink\">#FFC0CB</color>\r\n    <color name=\"light_pink\">#FFB6C1</color>\r\n    <color name=\"orange\">#FFA500</color>\r\n    <color name=\"light_salmon\">#FFA07A</color>\r\n    <color name=\"dark_orange\">#FF8C00</color>\r\n    <color name=\"coral\">#FF7F50</color>\r\n    <color name=\"hot_pink\">#FF69B4</color>\r\n    <color name=\"tomato\">#FF6347</color>\r\n    <color name=\"orange_red\">#FF4500</color>\r\n    <color name=\"deep_pink\">#FF1493</color>\r\n    <color name=\"fuchsia\">#FF00FF</color>\r\n    <color name=\"magenta\">#FF00FF</color>\r\n    <color name=\"red\">#FF0000</color>\r\n    <color name=\"old_lace\">#FDF5E6</color>\r\n    <color name=\"light_goldenrod_yellow\">#FAFAD2</color>\r\n    <color name=\"linen\">#FAF0E6</color>\r\n    <color name=\"antique_white\">#FAEBD7</color>\r\n    <color name=\"salmon\">#FA8072</color>\r\n    <color name=\"ghost_white\">#F8F8FF</color>\r\n    <color name=\"mint_cream\">#F5FFFA</color>\r\n    <color name=\"white_smoke\">#F5F5F5</color>\r\n    <color name=\"beige\">#F5F5DC</color>\r\n    <color name=\"wheat\">#F5DEB3</color>\r\n    <color name=\"sandy_brown\">#F4A460</color>\r\n    <color name=\"azure\">#F0FFFF</color>\r\n    <color name=\"honeydew\">#F0FFF0</color>\r\n    <color name=\"alice_blue\">#F0F8FF</color>\r\n    <color name=\"khaki\">#F0E68C</color>\r\n    <color name=\"light_coral\">#F08080</color>\r\n    <color name=\"pale_goldenrod\">#EEE8AA</color>\r\n    <color name=\"violet\">#EE82EE</color>\r\n    <color name=\"dark_salmon\">#E9967A</color>\r\n    <color name=\"lavender\">#E6E6FA</color>\r\n    <color name=\"light_cyan\">#E0FFFF</color>\r\n    <color name=\"burlyWood\">#DEB887</color>\r\n    <color name=\"plum\">#DDA0DD</color>\r\n    <color name=\"gainsboro\">#DCDCDC</color>\r\n    <color name=\"crimson\">#DC143C</color>\r\n    <color name=\"pale_violet_red\">#DB7093</color>\r\n    <color name=\"goldenrod\">#DAA520</color>\r\n    <color name=\"orchid\">#DA70D6</color>\r\n    <color name=\"thistle\">#D8BFD8</color>\r\n    <color name=\"light_grey\">#D3D3D3</color>\r\n    <color name=\"tan\">#D2B48C</color>\r\n    <color name=\"chocolate\">#D2691E</color>\r\n    <color name=\"peru\">#CD853F</color>\r\n    <color name=\"indian_red\">#CD5C5C</color>\r\n    <color name=\"medium_violet_red\">#C71585</color>\r\n    <color name=\"silver\">#C0C0C0</color>\r\n    <color name=\"dark_khaki\">#BDB76B</color>\r\n    <color name=\"rosy_brown\">#BC8F8F</color>\r\n    <color name=\"medium_orchid\">#BA55D3</color>\r\n    <color name=\"dark_goldenrod\">#B8860B</color>\r\n    <color name=\"fire_brick\">#B22222</color>\r\n    <color name=\"powder_blue\">#B0E0E6</color>\r\n    <color name=\"light_steel_blue\">#B0C4DE</color>\r\n    <color name=\"pale_turquoise\">#AFEEEE</color>\r\n    <color name=\"greenYellow\">#ADFF2F</color>\r\n    <color name=\"light_blue\">#ADD8E6</color>\r\n    <color name=\"dark_gray\">#A9A9A9</color>\r\n    <color name=\"brown\">#A52A2A</color>\r\n    <color name=\"sienna\">#A0522D</color>\r\n    <color name=\"yellow_green\">#9ACD32</color>\r\n    <color name=\"dark_orchid\">#9932CC</color>\r\n    <color name=\"pale_green\">#98FB98</color>\r\n    <color name=\"dark_violet\">#9400D3</color>\r\n    <color name=\"mediumPurple\">#9370DB</color>\r\n    <color name=\"_light_green\">#90EE90</color>\r\n    <color name=\"dark_sea_green\">#8FBC8F</color>\r\n    <color name=\"saddle_brown\">#8B4513</color>\r\n    <color name=\"dark_magenta\">#8B008B</color>\r\n    <color name=\"dark_red\">#8B0000</color>\r\n    <color name=\"blue_violet\">#8A2BE2</color>\r\n    <color name=\"light_sky_blue\">#87CEFA</color>\r\n    <color name=\"sky_blue\">#87CEEB</color>\r\n    <color name=\"gray\">#808080</color>\r\n    <color name=\"olive\">#808000</color>\r\n    <color name=\"purple\">#800080</color>\r\n    <color name=\"maroon\">#800000</color>\r\n    <color name=\"aquamarine\">#7FFFD4</color>\r\n    <color name=\"chartreuse\">#7FFF00</color>\r\n    <color name=\"lawn_green\">#7CFC00</color>\r\n    <color name=\"medium_slate_blue\">#7B68EE</color>\r\n    <color name=\"light_slate_gray\">#778899</color>\r\n    <color name=\"slate_gray\">#708090</color>\r\n    <color name=\"olive_drab\">#6B8E23</color>\r\n    <color name=\"slate_blue\">#6A5ACD</color>\r\n    <color name=\"dim_gray\">#696969</color>\r\n    <color name=\"medium_aquamarine\">#66CDAA</color>\r\n    <color name=\"cornflower_blue\">#6495ED</color>\r\n    <color name=\"cadet_blue\">#5F9EA0</color>\r\n    <color name=\"dark_olive_green\">#556B2F</color>\r\n    <color name=\"indigo\">#4B0082</color>\r\n    <color name=\"medium_turquoise\">#48D1CC</color>\r\n    <color name=\"dark_slate_blue\">#483D8B</color>\r\n    <color name=\"steel_blue\">#4682B4</color>\r\n    <color name=\"royal_blue\">#4169E1</color>\r\n    <color name=\"turquoise\">#40E0D0</color>\r\n    <color name=\"medium_sea_green\">#3CB371</color>\r\n    <color name=\"lime_green\">#32CD32</color>\r\n    <color name=\"dark_slate_gray\">#2F4F4F</color>\r\n    <color name=\"sea_green\">#2E8B57</color>\r\n    <color name=\"forest_green\">#228B22</color>\r\n    <color name=\"light_sea_green\">#20B2AA</color>\r\n    <color name=\"dodger_blue\">#1E90FF</color>\r\n    <color name=\"midnight_blue\">#191970</color>\r\n    <color name=\"aqua\">#00FFFF</color>\r\n    <color name=\"cyan\">#00FFFF</color>\r\n    <color name=\"spring_green\">#00FF7F</color>\r\n    <color name=\"lime\">#00FF00</color>\r\n    <color name=\"medium_spring_green\">#00FA9A</color>\r\n    <color name=\"dark_turquoise\">#00CED1</color>\r\n    <color name=\"deep_sky_blue\">#00BFFF</color>\r\n    <color name=\"dark_cyan\">#008B8B</color>\r\n    <color name=\"teal\">#008080</color>\r\n    <color name=\"green\">#008000</color>\r\n    <color name=\"dark_green\">#006400</color>\r\n    <color name=\"blue\">#0000FF</color>\r\n    <color name=\"medium_blue\">#0000CD</color>\r\n    <color name=\"dark_blue\">#00008B</color>\r\n    <color name=\"navy\">#000080</color>\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision b94e61c8e866103e27969f2bc5a3b7a5ef244fcd)
+++ app/src/main/res/values/colors.xml	(date 1608883638605)
@@ -184,4 +184,7 @@
     <color name="dark_blue">#00008B</color>
     <color name="navy">#000080</color>
 
+
+
+    <color name="colorProgressBackground">#00000000</color>
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/activity_view_all_image.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:shimmer=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:theme=\"@style/AppTheme_material_theme\"\r\n        tools:context=\".Activity.ViewAllImage\">\r\n\r\n        <androidx.appcompat.widget.Toolbar\r\n            android:id=\"@+id/my_toolbar\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"@dimen/_70sdp\"\r\n            android:background=\"@drawable/toolbar_background_second\"\r\n            android:elevation=\"4dp\"\r\n            android:theme=\"@style/ThemeOverlay.AppCompat.ActionBar\"\r\n            android:visibility=\"visible\"\r\n            app:popupTheme=\"@style/ThemeOverlay.AppCompat.Light\">\r\n\r\n            <RelativeLayout\r\n                android:id=\"@+id/main_linearlayout_title\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"@dimen/_70sdp\"\r\n                android:layout_marginTop=\"@dimen/_10sdp\"\r\n                android:layout_marginRight=\"@dimen/_7sdp\"\r\n                android:elevation=\"0dp\">\r\n\r\n                <RelativeLayout\r\n\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"@dimen/_70sdp\"\r\n                    android:layout_marginRight=\"@dimen/_7sdp\"\r\n                    android:elevation=\"0dp\">\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/backIcon\"\r\n                        android:layout_width=\"23dp\"\r\n                        android:layout_height=\"23dp\"\r\n                        android:layout_alignParentLeft=\"true\"\r\n                        android:layout_marginLeft=\"6dp\"\r\n                        android:layout_marginRight=\"10dp\"\r\n                        android:background=\"@drawable/ic_left_arrow\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/titleName\"\r\n                        android:layout_width=\"@dimen/_120sdp\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_toEndOf=\"@+id/backIcon\"\r\n                        android:ellipsize=\"marquee\"\r\n                        android:focusable=\"true\"\r\n                        android:focusableInTouchMode=\"true\"\r\n                        android:fontFamily=\"@font/montserrat_semibold\"\r\n                        android:marqueeRepeatLimit=\"marquee_forever\"\r\n                        android:scrollHorizontally=\"true\"\r\n                        android:singleLine=\"true\"\r\n                        android:text=\"My Business\"\r\n                        android:textColor=\"@color/colorNavText\"\r\n                        android:textSize=\"@dimen/_13sdp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                </RelativeLayout>\r\n\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/downloadIcon\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                    android:fontFamily=\"@font/inter_semibold\"\r\n                    android:src=\"@drawable/ic_baseline_cloud_download_24\"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_14sdp\"\r\n                    android:textStyle=\"bold\"></ImageView>\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/shareIcon\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                    android:layout_toLeftOf=\"@+id/downloadIcon\"\r\n                    android:fontFamily=\"@font/inter_semibold\"\r\n                    android:src=\"@drawable/ic_baseline_share_24\"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_14sdp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/fabroutIcon\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                    android:layout_toLeftOf=\"@+id/shareIcon\"\r\n                    android:fontFamily=\"@font/inter_semibold\"\r\n                    android:src=\"@drawable/ic_baseline_favorite_border_24\"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_14sdp\"\r\n                    android:textStyle=\"bold\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/addfabroutIcon\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginLeft=\"@dimen/_10sdp\"\r\n                    android:layout_toLeftOf=\"@+id/shareIcon\"\r\n                    android:fontFamily=\"@font/inter_semibold\"\r\n                    android:src=\"@drawable/ic_baseline_favorite_24\"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_14sdp\"\r\n                    android:textStyle=\"bold\"\r\n                    android:visibility=\"gone\" />\r\n\r\n            </RelativeLayout>\r\n        </androidx.appcompat.widget.Toolbar>\r\n\r\n        <ImageView\r\n            android:layout_width=\"@dimen/_300sdp\"\r\n            android:layout_height=\"@dimen/_300sdp\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_marginStart=\"-100dp\"\r\n            android:src=\"@drawable/bottom\">\r\n\r\n        </ImageView>\r\n\r\n        <RelativeLayout\r\n            android:id=\"@+id/recommendation\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_below=\"@+id/my_toolbar\"\r\n            android:visibility=\"visible\">\r\n\r\n            <androidx.cardview.widget.CardView\r\n                android:id=\"@+id/recoImgeRelative\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"@dimen/_300sdp\"\r\n                android:background=\"@color/colorNavText\"\r\n                android:elevation=\"@dimen/_5sdp\"\r\n                app:cardElevation=\"@dimen/_15sdp\">\r\n\r\n                <RelativeLayout\r\n                    android:id=\"@+id/relative\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"@dimen/_320sdp\">\r\n\r\n                    <ProgressBar\r\n                        android:id=\"@+id/simpleProgressBar\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        android:layout_centerVertical=\"true\"\r\n                        android:visibility=\"visible\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/backgrounImageDuplicate\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"@dimen/_300sdp\"\r\n                        android:scaleType=\"fitXY\"\r\n                        android:visibility=\"invisible\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/recoImage\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"@dimen/_300sdp\"\r\n                        android:scaleType=\"fitXY\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/FrameImageDuplicate\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"@dimen/_300sdp\"\r\n                        android:background=\"@android:color/transparent\"\r\n                        android:scaleType=\"fitXY\"\r\n                        android:visibility=\"visible\" />\r\n\r\n\r\n                    <!--Custom Frame Start-->\r\n                    <!--<RelativeLayout\r\n\r\n                        android:id=\"@+id/customFrameRelative\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"@dimen/_300sdp\"\r\n                        android:visibility=\"visible\">\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:orientation=\"horizontal\"\r\n                            android:weightSum=\"2\">\r\n\r\n                            <View\r\n                                android:id=\"@+id/topBarView1\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"@dimen/_4sdp\"\r\n                                android:layout_weight=\"1\"\r\n                                android:background=\"@color/colorPrimary\" />\r\n\r\n                            <View\r\n                                android:id=\"@+id/topBarView2\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"@dimen/_4sdp\"\r\n                                android:layout_weight=\"1\"\r\n                                android:background=\"@color/colorthird\" />\r\n                        </LinearLayout>\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:orientation=\"vertical\"\r\n                            android:weightSum=\"2\">\r\n\r\n                            <View\r\n                                android:id=\"@+id/leftBarView1\"\r\n                                android:layout_width=\"@dimen/_4sdp\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_weight=\"1\"\r\n                                android:background=\"@color/colorPrimary\" />\r\n\r\n                            <View\r\n                                android:id=\"@+id/leftBarView2\"\r\n                                android:layout_width=\"@dimen/_4sdp\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_weight=\"1\"\r\n                                android:background=\"@color/colorthird\" />\r\n\r\n                        </LinearLayout>\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"match_parent\"\r\n                            android:layout_alignParentEnd=\"true\"\r\n                            android:orientation=\"vertical\"\r\n                            android:weightSum=\"2\">\r\n\r\n                            <View\r\n                                android:id=\"@+id/rightBarView1\"\r\n                                android:layout_width=\"@dimen/_4sdp\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_weight=\"1\"\r\n                                android:background=\"@color/colorthird\" />\r\n\r\n                            <View\r\n                                android:id=\"@+id/rightBarView2\"\r\n                                android:layout_width=\"@dimen/_4sdp\"\r\n                                android:layout_height=\"match_parent\"\r\n                                android:layout_weight=\"1\"\r\n                                android:background=\"@color/colorPrimary\" />\r\n\r\n                        </LinearLayout>\r\n\r\n\r\n\r\n\r\n\r\n                                <LinearLayout\r\n                                    android:id=\"@+id/imgEmptyStateFirst\"\r\n                                    android:layout_width=\"match_parent\"\r\n                                    android:layout_height=\"match_parent\"\r\n                                    android:gravity=\"center\"\r\n                                    android:orientation=\"vertical\">\r\n\r\n                                    <ImageView\r\n                                        android:layout_width=\"@dimen/_20sdp\"\r\n                                        android:layout_height=\"19dp\"\r\n                                        android:src=\"@drawable/ic_gallry\" />\r\n\r\n                                    <TextView\r\n                                        android:layout_width=\"match_parent\"\r\n                                        android:layout_height=\"wrap_content\"\r\n                                        android:fontFamily=\"@font/inter_regular\"\r\n                                        android:text=\"Select Logo\"\r\n                                        android:textAlignment=\"center\"\r\n                                        android:textColor=\"@color/colorPrimary\"\r\n                                        android:textSize=\"@dimen/_6sdp\" />\r\n                                </LinearLayout>\r\n\r\n                                <ImageView\r\n                                    android:id=\"@+id/logoCustom\"\r\n                                    android:layout_width=\"@dimen/_50sdp\"\r\n                                    android:layout_height=\"@dimen/_50sdp\"\r\n                                    android:layout_centerInParent=\"true\"\r\n                                    android:scaleType=\"centerCrop\"\r\n                                    android:src=\"@drawable/placeholder\"\r\n                                    android:visibility=\"visible\" />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        <EditText\r\n\r\n                            android:id=\"@+id/customFrameWebsite\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_alignParentEnd=\"true\"\r\n                            android:layout_marginTop=\"@dimen/_4sdp\"\r\n                            android:layout_marginRight=\"@dimen/_10sdp\"\r\n                            android:layout_toEndOf=\"@+id/logoCard\"\r\n                            android:background=\"@android:color/transparent\"\r\n                            android:fontFamily=\"@font/inter_bold\"\r\n                            android:gravity=\"center\"\r\n                            android:hint=\"Enter Your Website\"\r\n                            android:maxLines=\"1\"\r\n                            android:textColor=\"@color/colorPrimary\"\r\n                            android:textColorHint=\"@color/simmerColor\"\r\n                            android:textSize=\"@dimen/_12sdp\"\r\n                            android:visibility=\"gone\" />\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_alignParentBottom=\"true\"\r\n                            android:orientation=\"horizontal\"\r\n                            android:weightSum=\"2\">\r\n\r\n                            <View\r\n                                android:id=\"@+id/bottomBarView1\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"@dimen/_20sdp\"\r\n                                android:layout_weight=\"1\"\r\n                                android:background=\"@color/colorthird\" />\r\n\r\n                            <View\r\n                                android:id=\"@+id/bottomBarView2\"\r\n\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"@dimen/_20sdp\"\r\n                                android:layout_weight=\"1\"\r\n                                android:background=\"@color/colorPrimary\" />\r\n\r\n                        </LinearLayout>\r\n\r\n                        <View\r\n                            android:id=\"@+id/bottomBarView3\"\r\n                            android:layout_width=\"@dimen/_100sdp\"\r\n                            android:layout_height=\"@dimen/_24sdp\"\r\n                            android:layout_alignParentBottom=\"true\"\r\n                            android:layout_gravity=\"center_horizontal\"\r\n                            android:layout_marginStart=\"@dimen/_68sdp\"\r\n                            android:layout_marginBottom=\"-4.6dp\"\r\n                            android:background=\"@drawable/italic\"\r\n                            android:backgroundTint=\"@color/colorthird\" />\r\n\r\n\r\n                        <EditText\r\n                            android:id=\"@+id/customeContactEdit1\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"@dimen/_14sdp\"\r\n                            android:layout_marginEnd=\"@dimen/_3sdp\"\r\n                            android:layout_alignParentBottom=\"true\"\r\n                            android:layout_alignParentEnd=\"true\"\r\n                            android:background=\"@android:color/transparent\"\r\n                            android:fontFamily=\"@font/inter_semibold\"\r\n                            android:hint=\"Enter Contact no.\"\r\n                            android:maxLines=\"1\"\r\n                            android:textAlignment=\"center\"\r\n                            android:padding=\"0dp\"\r\n                            android:singleLine=\"true\"\r\n                            android:maxLength=\"10\"\r\n                            android:layout_marginBottom=\"@dimen/_3sdp\"\r\n                            android:textColor=\"@color/colorNavText\"\r\n                            android:textColorHint=\"@color/simmerColor\"\r\n                            android:textSize=\"@dimen/_10sdp\" />\r\n\r\n                        <EditText\r\n                            android:layout_alignParentStart=\"true\"\r\n                            android:id=\"@+id/customAddressEdit1\"\r\n                            android:layout_marginBottom=\"@dimen/_3sdp\"\r\n                            android:layout_marginStart=\"@dimen/_25sdp\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"@dimen/_14sdp\"\r\n                            android:layout_alignParentBottom=\"true\"\r\n                            android:layout_centerVertical=\"true\"\r\n                            android:background=\"@android:color/transparent\"\r\n                            android:fontFamily=\"@font/inter_semibold\"\r\n                            android:hint=\"Enter Email Id or Address\"\r\n                            android:maxLines=\"1\"\r\n                            android:padding=\"0dp\"\r\n                            android:singleLine=\"true\"\r\n                            android:textColor=\"@color/colorNavText\"\r\n                            android:maxWidth=\"@dimen/_140sdp\"\r\n                            android:textColorHint=\"@color/simmerColor\"\r\n                            android:textSize=\"@dimen/_9sdp\" />\r\n\r\n                    </RelativeLayout>-->\r\n                    <!--Custom Frame End-->\r\n                    <RelativeLayout\r\n                        android:id=\"@+id/elementCustomFrame\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"@dimen/_300sdp\">\r\n\r\n\r\n                        <LinearLayout\r\n                            android:background=\"@android:color/transparent\"\r\n                            android:id=\"@+id/logoEmptyState\"\r\n                            android:layout_width=\"@dimen/_50sdp\"\r\n                            android:layout_height=\"@dimen/_50sdp\"\r\n                            android:gravity=\"center_vertical\"\r\n                            android:orientation=\"vertical\">\r\n\r\n                            <ImageView\r\n                                android:layout_width=\"@dimen/_20sdp\"\r\n                                android:layout_height=\"@dimen/_20sdp\"\r\n                                android:layout_gravity=\"center_horizontal\"\r\n                                android:src=\"@drawable/ic_gallry\" />\r\n\r\n                            <TextView\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\"\r\n                                android:layout_gravity=\"center_horizontal\"\r\n                                android:fontFamily=\"@font/inter_regular\"\r\n                                android:text=\"Select Logo\"\r\n                                android:textAlignment=\"center\"\r\n                                android:textColor=\"@color/colorPrimary\"\r\n                                android:textSize=\"@dimen/_6sdp\" />\r\n                        </LinearLayout>\r\n\r\n                        <ImageView\r\n                            android:id=\"@+id/logoCustom\"\r\n                            android:layout_width=\"@dimen/_50sdp\"\r\n                            android:layout_height=\"@dimen/_50sdp\"\r\n                            android:scaleType=\"centerCrop\"\r\n                            android:src=\"@drawable/placeholder\"\r\n                            android:visibility=\"gone\" />\r\n\r\n\r\n                            <RelativeLayout\r\n                                android:id=\"@+id/elementFooter\"\r\n                                android:layout_alignParentBottom=\"true\"\r\n                                android:layout_width=\"match_parent\"\r\n                                android:layout_height=\"wrap_content\">\r\n\r\n                            </RelativeLayout>\r\n\r\n\r\n                    </RelativeLayout>\r\n\r\n\r\n                    <androidx.viewpager.widget.ViewPager\r\n                        android:id=\"@+id/recoframe\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"@dimen/_300sdp\"\r\n                        android:visibility=\"visible\" />\r\n\r\n\r\n                </RelativeLayout>\r\n            </androidx.cardview.widget.CardView>\r\n\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/SliderDots\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_below=\"@+id/recoImgeRelative\"\r\n                android:layout_marginTop=\"@dimen/_5sdp\"\r\n                android:gravity=\"center_vertical|center_horizontal\"\r\n                android:orientation=\"horizontal\"\r\n                android:visibility=\"visible\" />\r\n\r\n\r\n            <LinearLayout\r\n                    android:id=\"@+id/clorframeLayout\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_below=\"@+id/recoImgeRelative\"\r\n                    android:orientation=\"vertical\"\r\n                    android:visibility=\"visible\">\r\n\r\n                    <RelativeLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\">\r\n\r\n                        <com.google.android.material.tabs.TabLayout\r\n                            android:id=\"@+id/tabLayout\"\r\n                            style=\"@style/MyTabLayout\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_below=\"@+id/appbarLayout\"\r\n                            android:layout_marginTop=\"-3dp\"\r\n\r\n                            android:background=\"@android:color/transparent\"\r\n                            app:tabGravity=\"fill\"\r\n                            app:tabIndicatorHeight=\"0dp\"\r\n                            app:tabMinWidth=\"@dimen/_60sdp\"\r\n                            app:tabMode=\"scrollable\" />\r\n\r\n                        <!--android:layout_marginRight=\"@dimen/_60sdp\"-->\r\n                    </RelativeLayout>\r\n\r\n                    <androidx.viewpager.widget.ViewPager\r\n                        android:id=\"@+id/viewPager\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        tools:layout_editor_absoluteX=\"8dp\" />\r\n                </LinearLayout>\r\n\r\n                <RelativeLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_marginTop=\"@dimen/_10sdp\"\r\n                    android:paddingLeft=\"@dimen/_5sdp\"\r\n\r\n                    android:paddingRight=\"@dimen/_5sdp\"\r\n                    android:visibility=\"gone\">\r\n\r\n                    <androidx.recyclerview.widget.RecyclerView\r\n                        android:id=\"@+id/viewRecoRecycler\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:visibility=\"visible\" />\r\n\r\n\r\n                    <com.facebook.shimmer.ShimmerFrameLayout\r\n                        android:id=\"@+id/shimmer_view_container\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center\"\r\n                        android:orientation=\"vertical\"\r\n                        shimmer:shimmer_duration=\"800\">\r\n\r\n                        <LinearLayout\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:orientation=\"vertical\">\r\n\r\n                            <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                            <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                            <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                            <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n\r\n                            <include layout=\"@layout/item_simmer_visitors_layout\" />\r\n                        </LinearLayout>\r\n\r\n                    </com.facebook.shimmer.ShimmerFrameLayout>\r\n\r\n                    <LinearLayout\r\n                        android:id=\"@+id/emptyStateLayout\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"match_parent\"\r\n                        android:gravity=\"center\"\r\n                        android:visibility=\"gone\">\r\n                        <ImageView\r\n                            android:layout_gravity=\"center\"\r\n\r\n                            android:src=\"@drawable/notification\"\r\n                            android:layout_width=\"@dimen/_200sdp\"\r\n                            android:layout_height=\"@dimen/_200sdp\">\r\n\r\n                        </ImageView>\r\n                        <TextView\r\n                            android:id=\"@+id/emptyStateMsg\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"center_horizontal|center_vertical\"\r\n                            android:fontFamily=\"@font/poppins_regular\"\r\n                            android:text=\"No Image Found\"\r\n                            android:textSize=\"@dimen/_12sdp\" />\r\n                    </LinearLayout>\r\n\r\n                    <ImageView\r\n\r\n                        android:id=\"@+id/allSetImage\"\r\n                        android:layout_width=\"@dimen/_100sdp\"\r\n                        android:layout_height=\"@dimen/_100sdp\"\r\n                        android:layout_below=\"@+id/viewRecoRecycler\"\r\n                        android:scaleType=\"fitXY\"\r\n                        android:visibility=\"gone\" />\r\n\r\n\r\n                </RelativeLayout>\r\n           <!-- </androidx.swiperefreshlayout.widget.SwipeRefreshLayout>-->\r\n        </RelativeLayout>\r\n\r\n\r\n    </RelativeLayout>\r\n</layout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_view_all_image.xml	(revision b94e61c8e866103e27969f2bc5a3b7a5ef244fcd)
+++ app/src/main/res/layout/activity_view_all_image.xml	(date 1608883895227)
@@ -74,7 +74,7 @@
                     android:src="@drawable/ic_baseline_cloud_download_24"
                     android:textColor="@color/colorNavText"
                     android:textSize="@dimen/_14sdp"
-                    android:textStyle="bold"></ImageView>
+                    android:textStyle="bold" />
 
                 <ImageView
                     android:id="@+id/shareIcon"
Index: app/src/main/java/com/app/brandmania/Activity/ViewAllImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.viewpager.widget.ViewPager;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Color;\r\nimport android.graphics.Paint;\r\nimport android.graphics.PorterDuff;\r\nimport android.graphics.Typeface;\r\nimport android.graphics.drawable.BitmapDrawable;\r\nimport android.graphics.drawable.ColorDrawable;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.net.Uri;\r\nimport android.os.AsyncTask;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.GestureDetector;\r\nimport android.view.LayoutInflater;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.androidnetworking.AndroidNetworking;\r\nimport com.androidnetworking.common.ANRequest;\r\nimport com.androidnetworking.common.Priority;\r\nimport com.androidnetworking.error.ANError;\r\nimport com.androidnetworking.interfaces.JSONObjectRequestListener;\r\nimport com.androidnetworking.interfaces.UploadProgressListener;\r\nimport com.app.brandmania.Adapter.FooterAdapter;\r\nimport com.app.brandmania.Adapter.FooterModel;\r\nimport com.app.brandmania.Adapter.ViewAllTopTabAdapter;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Interface.IColorChange;\r\nimport com.app.brandmania.Interface.IItaliTextEvent;\r\nimport com.app.brandmania.Interface.ITextBoldEvent;\r\nimport com.app.brandmania.Interface.ITextColorChangeEvent;\r\nimport com.app.brandmania.Interface.ITextSizeEvent;\r\nimport com.app.brandmania.Interface.IUnderLineTextEvent;\r\nimport com.app.brandmania.Interface.onFooterSelectListener;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.SliderItem;\r\nimport com.app.brandmania.Utils.IFontChangeEvent;\r\nimport com.app.brandmania.databinding.DialogUpgradeLayoutBinding;\r\nimport com.app.brandmania.databinding.ItemFooterOneBinding;\r\nimport com.app.brandmania.databinding.LayoutForLoadFiveBinding;\r\nimport com.app.brandmania.databinding.LayoutForLoadFourBinding;\r\nimport com.app.brandmania.databinding.LayoutForLoadOneBinding;\r\nimport com.app.brandmania.databinding.LayoutForLoadSixBinding;\r\nimport com.app.brandmania.databinding.LayoutForLoadThreeBinding;\r\nimport com.app.brandmania.databinding.LayoutForLoadTwoBinding;\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.android.material.textfield.TextInputEditText;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\nimport com.google.gson.Gson;\r\nimport com.app.brandmania.Adapter.ImageCateItemeInterFace;\r\nimport com.app.brandmania.Adapter.ImageCategoryAddaptor;\r\nimport com.app.brandmania.Adapter.ViewPagerAdapterFrame;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Model.DashBoardItem;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.Model.ImageList;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityViewAllImageBinding;\r\nimport com.jaredrummler.android.colorpicker.ColorPickerDialogListener;\r\nimport com.jaredrummler.android.colorpicker.ColorPickerView;\r\nimport com.theartofdev.edmodo.cropper.CropImage;\r\nimport com.theartofdev.edmodo.cropper.CropImageView;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport smartdevelop.ir.eram.showcaseviewlib.GuideView;\r\nimport smartdevelop.ir.eram.showcaseviewlib.config.DismissType;\r\nimport smartdevelop.ir.eram.showcaseviewlib.config.Gravity;\r\nimport smartdevelop.ir.eram.showcaseviewlib.listener.GuideListener;\r\n\r\nimport static android.view.WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN;\r\nimport static com.app.brandmania.Adapter.ImageCategoryAddaptor.FROM_VIEWALL;\r\n\r\npublic class ViewAllImage extends BaseActivity implements ImageCateItemeInterFace,alertListenerCallback, ITextColorChangeEvent, IFontChangeEvent,ITextBoldEvent,\r\n        IItaliTextEvent, ColorPickerDialogListener, IUnderLineTextEvent, IColorChange, ColorPickerView.OnColorChangedListener,\r\n        ITextSizeEvent, onFooterSelectListener {\r\n    Activity act;\r\n    ViewPager viewPager;\r\n    private boolean isLoading = false;\r\n    ArrayList<ImageList> AddFavorite=new ArrayList<>();\r\n    private ActivityViewAllImageBinding binding;\r\n    ArrayList<BrandListItem> multiListItems=new ArrayList<>();\r\n    ArrayList<ImageList> menuModels = new ArrayList<>();\r\n    ArrayList<FrameItem> brandListItems = new ArrayList<>();\r\n    public static final int DOWLOAD = 1;\r\n    public static final int ADDFAV = 3;\r\n    private static final int REQUEST_CALL = 1;\r\n    public static final int REMOVEFAV = 3;\r\n    private String is_frame=\"\";\r\n    private String is_payment_pending=\"\";\r\n    private String packagee=\"\";\r\n    ArrayList<FrameItem> viewPagerItems = new ArrayList<>();\r\n    PreafManager preafManager;\r\n    Gson gson;\r\n    String Website;\r\n    private DashBoardItem imageList;\r\n    private ImageList selectedObject;\r\n    LinearLayout sliderDotspanel;\r\n    private int dotscount;\r\n    private ImageView[] dots;\r\n\r\n    FrameItem selectedModelFromView;\r\n    AlertDialog.Builder alertDialogBuilder;\r\n    File new_file;\r\n    private Uri mCropImageUri;\r\n\r\n    int editorFragment;\r\n    private int xDelta;\r\n    private int yDelta;\r\n    private ViewGroup mainLayout;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n        //triggerUpgradePackage();\r\n        act.getWindow().setSoftInputMode(SOFT_INPUT_ADJUST_PAN);\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_view_all_image);\r\n        preafManager = new PreafManager(this);\r\n        binding.titleName.setSelected(true);\r\n        gson = new Gson();\r\n        selectedObject = gson.fromJson(getIntent().getStringExtra(\"selectedimage\"), ImageList.class);\r\n        getFrame();\r\n        getBrandList();\r\n        Website=preafManager.getActiveBrand().getWebsite();\r\n        imageList = gson.fromJson(getIntent().getStringExtra(\"detailsObj\"), DashBoardItem.class);\r\n        binding.titleName.setText(imageList.getName());\r\n        getImageCtegory();\r\n\r\n\r\n        mainLayout = (RelativeLayout) findViewById(R.id.elementCustomFrame);\r\n\r\n\r\n        binding.logoEmptyState.setOnTouchListener(onTouchListener());\r\n        binding.logoCustom.setOnTouchListener(onTouchListener());\r\n        gestureDetector = new GestureDetector(this, new SingleTapConfirm());\r\n\r\n\r\n        binding.backIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n        binding.fabroutIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                selectedObject.setFrameId(selectedModelFromView.getFrameId());\r\n                preafManager.AddToMyFavorites(selectedObject);\r\n                if (binding.fabroutIcon.getVisibility()==View.VISIBLE)\r\n                {\r\n                    binding.fabroutIcon.setVisibility(View.GONE);\r\n                    binding.addfabroutIcon.setVisibility(View.VISIBLE);\r\n                }\r\n                dowloadAndShare(ADDFAV);\r\n            }\r\n        });\r\n        binding.addfabroutIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                selectedObject.setFrameId(selectedModelFromView.getFrameId());\r\n                preafManager.removeFromMyFavorites(selectedObject);\r\n                if (binding.addfabroutIcon.getVisibility()==View.VISIBLE)\r\n                {\r\n                    binding.addfabroutIcon.setVisibility(View.GONE);\r\n                    binding.fabroutIcon.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n                removeFavourit(REMOVEFAV);\r\n            }\r\n        });\r\n        binding.downloadIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialogBuilder = new AlertDialog.Builder(act);\r\n                alertDialogBuilder.setTitle(\"Save image\");\r\n                alertDialogBuilder.setMessage(\"You sure to save your image?\");\r\n                alertDialogBuilder.setPositiveButton(\"yes\",\r\n                        new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface arg0, int arg1) {\r\n                                requestAgain();\r\n                                Log.e(\"CSelectedImg\",gson.toJson(selectedModelFromView.getFrame1()));\r\n                                new DownloadImageTask(selectedModelFromView.getFrame1()).execute(selectedModelFromView.getFrame1());\r\n                                dowloadAndShare(DOWLOAD);\r\n                            }\r\n                        });\r\n                alertDialogBuilder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n\r\n                AlertDialog alertDialog = alertDialogBuilder.create();\r\n                alertDialog.setCancelable(false);\r\n                alertDialog.show();\r\n\r\n            }\r\n        });\r\n        binding.shareIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                requestAgain();\r\n                Log.e(\"CSelectedImg\",gson.toJson(selectedModelFromView.getFrame1()));\r\n                new ShareImageTask(selectedModelFromView.getFrame1()).execute(selectedModelFromView.getFrame1());\r\n                //checkPermisionForDontAskAgain();\r\n                dowloadAndShare(DOWLOAD);\r\n            }\r\n        });\r\n        binding.logoEmptyState.setVisibility(View.VISIBLE);\r\n        fetchAutomaticCustomeFrame();\r\n\r\n\r\n        if (preafManager.getActiveBrand().getLogo() != null && !preafManager.getActiveBrand().getLogo().isEmpty() ) {\r\n            binding.logoEmptyState.setVisibility(View.GONE);\r\n            binding.logoCustom.setVisibility(View.VISIBLE);\r\n            binding.logoCustom.setVisibility(View.VISIBLE);\r\n            Glide.with(act)\r\n                    .load(preafManager.getActiveBrand().getLogo())\r\n                    .into(binding.logoCustom);\r\n            binding.logoCustom.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    onSelectImageClick(view);\r\n                }\r\n            });\r\n        }\r\n        else\r\n        {\r\n            binding.logoEmptyState.setVisibility(View.VISIBLE);\r\n            binding.logoCustom.setVisibility(View.GONE);\r\n\r\n\r\n            binding.logoCustom.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    onSelectImageClick(view);\r\n                }\r\n            });\r\n            \r\n          /*  binding.logoCard.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    onSelectImageClick(view);\r\n                }\r\n            });*/\r\n        }\r\n\r\n\r\n//         RelativeLayout.LayoutParams mRparams = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n//        binding.logoEmptyState.setLayoutParams(mRparams);\r\n//        binding.logoEmptyState.setOnTouchListener((View.OnTouchListener) act);\r\n//        mRlayout.addView( binding.logoCard);\r\n    }\r\n\r\n\r\n    public void isPermissionGranted(boolean permission) {\r\n        if (!permission) {\r\n            startActivity(new Intent(android.provider.Settings.ACTION_APPLICATION_DETAILS_SETTINGS,\r\n                    Uri.fromParts(\"package\", act.getPackageName(), null)));\r\n        }\r\n    }\r\n    private int IntroCounter = 0;\r\n    public void startIntro(View view, String title, String desc) {\r\n\r\n        new GuideView.Builder(this)\r\n                .setTitle(title)\r\n                .setContentText(desc)\r\n                .setGravity(Gravity.center)\r\n                .setDismissType(DismissType.anywhere)\r\n                .setTargetView(view)\r\n                .setContentTextSize(12)\r\n                .setTitleTextSize(14)\r\n                .setGuideListener(new GuideListener() {\r\n                    @Override\r\n                    public void onDismiss(View view) {\r\n                        IntroCounter++;\r\n\r\n                            if (IntroCounter == 1) {\r\n                                startIntro(binding.shareIcon, \"Share\", \"Share Your Image Directly\");\r\n                            }\r\n                            if (IntroCounter == 2) {\r\n                                startIntro(binding.fabroutIcon, \"Save\", \"Save To Your Brand\");\r\n                            }\r\n                            if (IntroCounter == 3) {\r\n                                startIntro(binding.viewPager.getChildAt(0), \"Catogery\", \"List of images\");\r\n                            }\r\n/*\r\n                        if (!is_frame.equalsIgnoreCase(\"1\") && preafManager.getFrameIntro()) {\r\n                            preafManager.setFrameIntro(false);\r\n                            if (IntroCounter == 4) {\r\n                                startIntro(binding.logoCard, \"Logo\", \"Change Your Logo\");\r\n                            }\r\n                            if (IntroCounter == 5) {\r\n                                startIntro(binding.customAddressEdit1, \"AddressText\", \"Change Your Address Text color\");\r\n                            }\r\n                            if (IntroCounter == 6) {\r\n                                startIntro(binding.customeContactEdit1, \"ContactText\", \"Change Your Contact Text color\");\r\n                            }\r\n                            if (IntroCounter == 7) {\r\n                                startIntro(binding.bottomBarView1, \"Address Background\", \"Change Your Address Background color\");\r\n                            }\r\n                            if (IntroCounter == 8) {\r\n                                startIntro(binding.bottomBarView2, \"Contac Background\", \"Change Your Contact Background color\");\r\n                            }\r\n                        }*/\r\n                    }\r\n                })\r\n                .build()\r\n                .show();\r\n    }\r\n\r\n    public void startIntroForFrameOnly(View view, String title, String desc) {\r\n\r\n        new GuideView.Builder(this)\r\n                .setTitle(title)\r\n                .setContentText(desc)\r\n                .setGravity(Gravity.center)\r\n                .setDismissType(DismissType.anywhere)\r\n                .setTargetView(view)\r\n                .setContentTextSize(12)\r\n                .setTitleTextSize(14)\r\n                .setGuideListener(new GuideListener() {\r\n                    @Override\r\n                    public void onDismiss(View view) {\r\n                            IntroCounter++;\r\n/*\r\n                            if (IntroCounter == 1) {\r\n                                startIntroForFrameOnly(binding.customAddressEdit1, \"Add Text\", \"Add text like email-id or address\");\r\n                            }\r\n                            if (IntroCounter == 2) {\r\n                                startIntroForFrameOnly(binding.customeContactEdit1, \"Add Text\", \"Add your contact no. here\");\r\n                            }\r\n                            if (IntroCounter == 3) {\r\n                                startIntroForFrameOnly(binding.bottomBarView1, \"Background\", \"Change background color as you want\");\r\n                            }\r\n                            if (IntroCounter == 4) {\r\n                                startIntroForFrameOnly(binding.bottomBarView2, \"Background\", \"Change background color as you want\");\r\n                            }*/\r\n\r\n                    }\r\n                })\r\n                .build()\r\n                .show();\r\n    }\r\n    public void bottomFramgment(){\r\n        binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Category\")));\r\n\r\n        if (!is_frame.equalsIgnoreCase(\"1\")) {\r\n            binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Background\")));\r\n            binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Text\")));\r\n\r\n                IntroCounter=0;\r\n                preafManager.setFrameIntro(false);\r\n                startIntroForFrameOnly(binding.logoEmptyState, \"Logo\", \"you can upload logo here\");\r\n            binding.tabLayout.addTab(binding.tabLayout.newTab().setText(convertFirstUpper(\"Footer\")));\r\n            addDynamicFooter(1);\r\n\r\n        }else{\r\n            if (preafManager.getViewAllActivityIntro()) {\r\n                startIntro(binding.downloadIcon,\"Download\",\"Download Image From here\");\r\n                preafManager.setViewAllActivityIntro(false);\r\n            }\r\n        }\r\n\r\n\r\n        binding.tabLayout.setTabTextColors(Color.parseColor(\"#727272\"), Color.parseColor(\"#ad2753\"));\r\n        binding.tabLayout.setTabGravity(TabLayout.GRAVITY_FILL);\r\n        final ViewAllTopTabAdapter adapter = new ViewAllTopTabAdapter(act, getSupportFragmentManager(), binding.tabLayout.getTabCount());\r\n        binding.viewPager.setAdapter(adapter);\r\n        binding.viewPager.addOnPageChangeListener(new TabLayout.TabLayoutOnPageChangeListener(binding.tabLayout));\r\n        binding.tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {\r\n            @Override\r\n            public void onTabSelected(TabLayout.Tab tab) {\r\n                binding.viewPager.setCurrentItem(tab.getPosition());\r\n                editorFragment=tab.getPosition();\r\n\r\n              //  handler(editorFragment);\r\n            }\r\n\r\n            @Override\r\n            public void onTabUnselected(TabLayout.Tab tab) {\r\n            }\r\n\r\n            @Override\r\n            public void onTabReselected(TabLayout.Tab tab) {\r\n            }\r\n        });\r\n       /* binding.customAddressEdit1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                binding.viewPager.setCurrentItem(3);\r\n            }\r\n        });\r\n        binding.customeContactEdit1.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View view, boolean b) {\r\n                if (b==true)\r\n                {\r\n                    selectedForEdit=binding.customeContactEdit1;\r\n                    binding.viewPager.setCurrentItem(2);\r\n                    editorFragment=2;\r\n                }\r\n            }\r\n        });\r\n        binding.customAddressEdit1.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View view, boolean b) {\r\n                if (b==true)\r\n                {\r\n                    selectedForEdit=binding.customAddressEdit1;\r\n                    binding.viewPager.setCurrentItem(2);\r\n                    editorFragment=2;\r\n                }\r\n            }\r\n        });\r\n        binding.customFrameWebsite.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View view, boolean b) {\r\n                if (b==true)\r\n                {\r\n                    selectedForEdit=binding.customFrameWebsite;\r\n                    binding.viewPager.setCurrentItem(2);\r\n                    editorFragment=2;\r\n                }\r\n            }\r\n        });\r\n        binding.bottomBarView1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                FramePrimaryOrSecondary=0;\r\n                selectedForBackgroundChange=binding.bottomBarView1;\r\n                binding.customAddressEdit1.clearFocus();\r\n                binding.customeContactEdit1.clearFocus();\r\n                binding.customFrameWebsite.clearFocus();\r\n                binding.viewPager.setCurrentItem(1);\r\n            }\r\n        });\r\n        binding.bottomBarView2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                FramePrimaryOrSecondary=1;\r\n                selectedForBackgroundChange=binding.bottomBarView2;\r\n                binding.customAddressEdit1.clearFocus();\r\n                binding.customeContactEdit1.clearFocus();\r\n                binding.customFrameWebsite.clearFocus();\r\n                binding.viewPager.setCurrentItem(1);\r\n            }\r\n        });\r\n        binding.bottomBarView3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                FramePrimaryOrSecondary=0;\r\n                selectedForBackgroundChange=binding.bottomBarView1;\r\n                binding.customAddressEdit1.clearFocus();\r\n                binding.customeContactEdit1.clearFocus();\r\n                binding.customFrameWebsite.clearFocus();\r\n                binding.viewPager.setCurrentItem(1);\r\n            }\r\n        });\r\n*/\r\n\r\n    }\r\n    //For CustomFrame\r\n    public void onSelectImageClick(View view) {\r\n        CropImage.startPickImageActivity(this);\r\n    }\r\n    public void LoadDataToUI(){\r\n        preafManager=new PreafManager(act);\r\n        if (selectedObject != null) {\r\n            binding.simpleProgressBar.setVisibility(View.GONE);\r\n            Glide.with(getApplicationContext()).load(selectedObject.getFrame()).into(binding.backgrounImageDuplicate);\r\n            Glide.with(getApplicationContext()).load(selectedObject.getFrame()).into(binding.recoImage);\r\n\r\n            AddFavorite= preafManager.getSavedFavorites();\r\n\r\n            if (AddFavorite!=null) {\r\n                for (int i = 0; i < AddFavorite.size(); i++) {\r\n                    Log.e(\"Fav--\",new Gson().toJson(AddFavorite.get(i)));\r\n                    Log.e(\"Print--\",new Gson().toJson(selectedModelFromView));\r\n\r\n                    if (AddFavorite.get(i).getId().equals(selectedObject.getId()) && AddFavorite.get(i).getFrameId().equalsIgnoreCase(selectedModelFromView.getFrameId())) {\r\n                        binding.addfabroutIcon.setVisibility(View.VISIBLE);\r\n                        binding.fabroutIcon.setVisibility(View.GONE);\r\n                        break;\r\n                    } else {\r\n                        binding.addfabroutIcon.setVisibility(View.GONE);\r\n                        binding.fabroutIcon.setVisibility(View.VISIBLE);\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n        else\r\n        {\r\n            binding.simpleProgressBar.setVisibility(View.VISIBLE);\r\n        }\r\n    }\r\n    public void  reloadSaved(){\r\n        AddFavorite= preafManager.getSavedFavorites();\r\n\r\n        if (AddFavorite!=null) {\r\n            for (int i = 0; i < AddFavorite.size(); i++) {\r\n\r\n                Log.e(\"Print-\",AddFavorite.get(i).getFrameId()+\"s\");\r\n                Log.e(\"Print--\",selectedModelFromView.getFrameId()+\"s\");\r\n\r\n                if (!AddFavorite.get(i).getId().equals(selectedObject.getId()) || !AddFavorite.get(i).getFrameId().equalsIgnoreCase(selectedModelFromView.getFrameId())) {\r\n                    binding.addfabroutIcon.setVisibility(View.GONE);\r\n                    binding.fabroutIcon.setVisibility(View.VISIBLE);\r\n                } else {\r\n                    binding.addfabroutIcon.setVisibility(View.VISIBLE);\r\n                    binding.fabroutIcon.setVisibility(View.GONE);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public void startShare(File new_file) {\r\n\r\n        Uri uri= Uri.parse(MediaStore.Images.Media.insertImage(getContentResolver(), BitmapFactory.decodeFile(new_file.getPath()),null,null));\r\n        Intent share = new Intent(Intent.ACTION_SEND);\r\n        share.setType(\"image/*\");\r\n        share.putExtra(Intent.EXTRA_STREAM, uri);\r\n        startActivity(Intent.createChooser(share, \"Share Image\"));\r\n\r\n    }\r\n    BitmapDrawable FrameDrawbable;\r\n    public void startSave() {\r\n        //Bitmap FrameDrawbable = drawableFromUrl(selectedModelFromView.getFrame1());\r\n        Drawable d = FrameDrawbable;\r\n        Drawable ImageDrawable = (BitmapDrawable) binding.backgrounImageDuplicate.getDrawable();\r\n        Bitmap merged = Bitmap.createBitmap(1000, 1000, Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(merged);\r\n        d.setBounds(0, 0, 1000, 1000);\r\n        ImageDrawable.setBounds(0, 0, 1000, 1000);\r\n        ImageDrawable.draw(canvas);\r\n        d.draw(canvas);\r\n        binding.allSetImage.setImageBitmap(merged);\r\n\r\n        FileOutputStream fileOutputStream = null;\r\n        File file = getDisc();\r\n        if (!file.exists() && !file.mkdirs()) {\r\n            return;\r\n        }\r\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyymmsshhmmss\");\r\n        String date = simpleDateFormat.format(new Date());\r\n        String name = \"Img\" + date + \".jpg\";\r\n        String file_name = file.getAbsolutePath() + \"/\" + name;\r\n        new_file = new File(file_name);\r\n        try {\r\n            fileOutputStream = new FileOutputStream(new_file);\r\n            Bitmap bitmap = merged;//viewToBitmap(binding.allSetImage,binding.allSetImage.getWidth(),binding.recoImage.getHeight());\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fileOutputStream);\r\n\r\n            fileOutputStream.flush();\r\n            fileOutputStream.close();\r\n            Toast.makeText(act, \"Your image is downloaded\", Toast.LENGTH_SHORT).show();\r\n            // startShare(new_file);\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        refreshgallery(new_file);\r\n    }\r\n    public void startsShare() {\r\n        //Bitmap FrameDrawbable = drawableFromUrl(selectedModelFromView.getFrame1());\r\n        Drawable d = FrameDrawbable;\r\n        Drawable ImageDrawable = (BitmapDrawable) binding.backgrounImageDuplicate.getDrawable();\r\n        Bitmap merged = Bitmap.createBitmap(1000, 1000, Bitmap.Config.ARGB_8888);\r\n        Canvas canvas = new Canvas(merged);\r\n        d.setBounds(0, 0, 1000, 1000);\r\n        ImageDrawable.setBounds(0, 0, 1000, 1000);\r\n        ImageDrawable.draw(canvas);\r\n        d.draw(canvas);\r\n        binding.allSetImage.setImageBitmap(merged);\r\n\r\n        FileOutputStream fileOutputStream = null;\r\n        File file = getDisc();\r\n        if (!file.exists() && !file.mkdirs()) {\r\n            return;\r\n        }\r\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyymmsshhmmss\");\r\n        String date = simpleDateFormat.format(new Date());\r\n        String name = \"Img\" + date + \".jpg\";\r\n        String file_name = file.getAbsolutePath() + \"/\" + name;\r\n        new_file = new File(file_name);\r\n        try {\r\n            fileOutputStream = new FileOutputStream(new_file);\r\n            Bitmap bitmap = merged;//viewToBitmap(binding.allSetImage,binding.allSetImage.getWidth(),binding.recoImage.getHeight());\r\n            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fileOutputStream);\r\n\r\n            fileOutputStream.flush();\r\n            fileOutputStream.close();\r\n            startShare(new_file);\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        refreshgallery(new_file);\r\n    }\r\n    //For RefresGalary........................\r\n    public void refreshgallery(File file) {\r\n        Intent intent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);\r\n        intent.setData(Uri.fromFile(file));\r\n        sendBroadcast(intent);\r\n    }\r\n    //For CreatFileeDisc For Download Image.........................\r\n    private File getDisc() {\r\n        File file = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM);\r\n        return new File(file, \"Image Demo\");\r\n    }\r\n    //For SetAddaptor.................................\r\n    public void setAdapter(){\r\n        ImageCategoryAddaptor menuAddaptor = new ImageCategoryAddaptor(menuModels, act);\r\n        menuAddaptor.setLayoutType(FROM_VIEWALL);\r\n        RecyclerView.LayoutManager mLayoutManager = new GridLayoutManager(this, 4);\r\n        binding.viewRecoRecycler.setLayoutManager(mLayoutManager);\r\n        binding.viewRecoRecycler.setHasFixedSize(true);\r\n        binding.viewRecoRecycler.setAdapter(menuAddaptor);\r\n\r\n        if (getIntent().hasExtra(\"viewAll\")) {\r\n            binding.simpleProgressBar.setVisibility(View.GONE);\r\n            selectedObject = menuModels.get(0);\r\n            LoadDataToUI();\r\n        }\r\n        else\r\n        {\r\n            binding.simpleProgressBar.setVisibility(View.VISIBLE);\r\n        }\r\n\r\n\r\n    }\r\n    //For GetImageCategory..............................\r\n    private void getImageCtegory() {\r\n      //  binding.swipeContainer.setRefreshing(true);\r\n        Utility.Log(\"API : \", APIs.GET_IMAGEBUID_CATEGORY);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_IMAGEBUID_CATEGORY + \"/1\", new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n             //   binding.swipeContainer.setRefreshing(false);\r\n                Utility.Log(\"GET_IMAGE_CATEGORY : \", response);\r\n\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n\r\n                    menuModels = ResponseHandler.HandleGetImageByIdCategory(jsonObject);\r\n\r\n                    if (menuModels != null && menuModels.size() != 0) {\r\n                        setAdapter();\r\n                        binding.shimmerViewContainer.stopShimmer();\r\n                        binding.shimmerViewContainer.setVisibility(View.GONE);\r\n                        binding.viewRecoRecycler.setVisibility(View.VISIBLE);\r\n                        binding.emptyStateLayout.setVisibility(View.GONE);\r\n                    }\r\n                    if (menuModels == null || menuModels.size() == 0) {\r\n                        binding.emptyStateLayout.setVisibility(View.VISIBLE);\r\n                        binding.viewRecoRecycler.setVisibility(View.GONE);\r\n                        binding.shimmerViewContainer.stopShimmer();\r\n                        binding.shimmerViewContainer.setVisibility(View.GONE);\r\n                    }\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                      //  binding.swipeContainer.setRefreshing(false);\r\n                        error.printStackTrace();\r\n//                        String body;\r\n//                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n//                        Log.e(\"Load-Get_Exam \", body);\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                if (imageList != null)\r\n                    params.put(\"image_category_id\", imageList.getId());\r\n                else\r\n                    params.put(\"image_category_id\", selectedObject.getId());\r\n\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n    //For Download,Share and Faviorit Api...............\r\n    private void dowloadAndShare(final int download) {\r\n\r\n        Utility.Log(\"API : \", APIs.DOWNLOAD_SHARE);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.DOWNLOAD_SHARE, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.Log(\"DOWNLOAD_SHARE : \", response);\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                if (imageList != null) {\r\n                    params.put(\"brand_id\", preafManager.getActiveBrand().getId());\r\n                    params.put(\"image_id\", selectedObject.getImageid());\r\n                    params.put(\"frame_id\", selectedModelFromView.getFrameId());\r\n\r\n                } else {\r\n                    params.put(\"brand_id\",  preafManager.getActiveBrand().getId());\r\n                    params.put(\"image_id\", selectedObject.getImageid());\r\n\r\n\r\n                }\r\n                params.put(\"type\", String.valueOf(download));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n    //For ImageSelectInterface.......................\r\n    @Override public void ImageCateonItemSelection(int position, ImageList listModel) {\r\n\r\n        if (selectedObject!=null) {\r\n            binding.simpleProgressBar.setVisibility(View.GONE);\r\n            selectedObject = listModel;\r\n            LoadDataToUI();\r\n        }\r\n        else\r\n        {\r\n            binding.simpleProgressBar.setVisibility(View.VISIBLE);\r\n        }\r\n    }\r\n    // For Frmae Loade ..................................\r\n    public void frameViewPager() {\r\n        viewPager = (ViewPager) findViewById(R.id.recoframe);\r\n        sliderDotspanel = (LinearLayout) findViewById(R.id.SliderDots);\r\n\r\n        viewPagerItems =brandListItems;// preafManager.getActiveBrand().getFrame();\r\n        Log.e(\"Frames\",gson.toJson(preafManager.getActiveBrand().getFrame()));\r\n        if (viewPagerItems!=null && viewPagerItems.size()!=0) {\r\n            Log.e(\"BrandListSize\", String.valueOf(viewPagerItems.size()) + \"kkl\");\r\n            Gson gson = new Gson();\r\n            Log.e(\"Viewwwjhfjkdhsjk\", gson.toJson(viewPagerItems));\r\n            ViewPagerAdapterFrame viewPagerAdapter = new ViewPagerAdapterFrame(viewPagerItems, this);\r\n            viewPager.setAdapter(viewPagerAdapter);\r\n            dotscount = viewPagerAdapter.getCount();\r\n            int h = viewPager.getCurrentItem();\r\n            if (dotscount > 0) {\r\n                dots = new ImageView[dotscount];\r\n                for (int i = 0; i < dotscount; i++) {\r\n\r\n                    dots[i] = new ImageView(this);\r\n                    dots[i].setImageDrawable(ContextCompat.getDrawable(getApplicationContext(), R.drawable.non_active_dot));\r\n\r\n                    LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);\r\n\r\n                    params.setMargins(8, 0, 8, 0);\r\n\r\n                    sliderDotspanel.addView(dots[i], params);\r\n                }\r\n                dots[0].setImageDrawable(ContextCompat.getDrawable(getApplicationContext(), R.drawable.active_dot));\r\n            }\r\n            viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\r\n                @Override\r\n                public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {\r\n\r\n\r\n                }\r\n\r\n                @Override\r\n                public void onPageSelected(int position) {\r\n\r\n                    for (int i = 0; i < dotscount; i++) {\r\n                        dots[i].setImageDrawable(ContextCompat.getDrawable(getApplicationContext(), R.drawable.non_active_dot));\r\n                    }\r\n                    try {\r\n                        selectedModelFromView = (FrameItem) viewPagerItems.get(position).clone();\r\n\r\n                    } catch (CloneNotSupportedException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    reloadSaved();\r\n                    //drawable = drawableFromUrl(selectedModelFromView.getFrame1());\r\n                    dots[position].setImageDrawable(ContextCompat.getDrawable(getApplicationContext(), R.drawable.active_dot));\r\n                }\r\n\r\n                @Override\r\n                public void onPageScrollStateChanged(int state) {\r\n                    reloadSaved();\r\n                }\r\n            });\r\n            try {\r\n                selectedModelFromView = (FrameItem) viewPagerItems.get(viewPager.getCurrentItem()).clone();\r\n            } catch (CloneNotSupportedException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n        else{\r\n            // showAlertDialogButtonClicked();\r\n        }\r\n\r\n        LoadDataToUI();\r\n\r\n    }\r\n    public void AlertBoxForSaveFrame() {\r\n        alertDialogBuilder = new AlertDialog.Builder(act);\r\n        alertDialogBuilder.setTitle(\"Save Frame\");\r\n        alertDialogBuilder.setMessage(\"Do you want to save your template, you will not able to change once save.\");\r\n        alertDialogBuilder.setPositiveButton(\"yes\",\r\n                new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface arg0, int arg1) {\r\n                        /*binding.customFrameRelative.setVisibility(View.GONE);\r\n                        binding.FrameImageDuplicate.setVisibility(View.GONE);\r\n                        if (binding.customeContactEdit1.getText().toString().length()==0)\r\n                        {\r\n                            binding.customeContactEdit1.setVisibility(View.GONE);\r\n                        }\r\n                        if (binding.customFrameWebsite.getText().toString().length()==0)\r\n                        {\r\n                            binding.customFrameWebsite.setVisibility(View.GONE);\r\n                        }\r\n                        if (binding.customAddressEdit1.getText().toString().length()==0)\r\n                        {\r\n                            binding.customAddressEdit1.setVisibility(View.GONE);\r\n                        }*/\r\n                        getBitmapFromView();\r\n\r\n                    }\r\n                });\r\n        alertDialogBuilder.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                dialog.dismiss();\r\n            }\r\n        });\r\n\r\n        AlertDialog alertDialog = alertDialogBuilder.create();\r\n        alertDialog.setCancelable(false);\r\n        alertDialog.show();\r\n\r\n\r\n\r\n    }\r\n    //For GetFrame\r\n    @Override public void alertListenerClick() {\r\n        requestAgain();\r\n    }\r\n    private void requestAgain() {\r\n        ActivityCompat.requestPermissions(act,\r\n                new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                        Manifest.permission.READ_EXTERNAL_STORAGE},\r\n                CodeReUse.ASK_PERMISSSION);\r\n    }\r\n    private void getFrame() {\r\n        Utility.Log(\"API : \", APIs.GET_FRAME);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_FRAME,new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n\r\n                Utility.Log(\"GET_FRAME : \", response);\r\n\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    brandListItems = ResponseHandler.HandleGetFrame(jsonObject);\r\n                    JSONObject datajsonobjecttt =ResponseHandler.getJSONObject(jsonObject, \"data\");\r\n                    is_frame= datajsonobjecttt.getString(\"is_frame\");\r\n                    if (is_frame.equals(\"1\")) {\r\n                      //  binding.customFrameRelative.setVisibility(View.GONE);\r\n                        // Toast.makeText(act,brandListItems.size()+\"\",Toast.LENGTH_LONG).show();\r\n                        frameViewPager();\r\n                        is_payment_pending= datajsonobjecttt.getString(\"is_payment_pending\");\r\n                        packagee=datajsonobjecttt.getString(\"package\");\r\n                        if (packagee.equals(\"\")) {\r\n                            binding.shareIcon.setOnClickListener(new View.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(View view) {\r\n                                    Utility.showAlertForPackage(act,ResponseHandler.getString(datajsonobjecttt,\"package_message\"));\r\n                                }\r\n                            });\r\n                            binding.fabroutIcon.setOnClickListener(new View.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(View view) {\r\n                                    Utility.showAlertForPackage(act,ResponseHandler.getString(datajsonobjecttt,\"package_message\"));\r\n                                }\r\n                            });\r\n                            binding.downloadIcon.setOnClickListener(new View.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(View view) {\r\n                                    Utility.showAlertForPackage(act,ResponseHandler.getString(datajsonobjecttt,\"package_message\"));\r\n\r\n                                }\r\n                            });\r\n\r\n\r\n                        }\r\n                        else if (is_payment_pending.equals(\"1\"))\r\n                        {\r\n\r\n                            binding.shareIcon.setOnClickListener(new View.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(View view) {\r\n                                    Utility.showAlertForPayment(act,ResponseHandler.getString(datajsonobjecttt,\"payment_message\"));\r\n                                }\r\n                            });\r\n                            binding.fabroutIcon.setOnClickListener(new View.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(View view) {\r\n                                    Utility.showAlertForPayment(act,ResponseHandler.getString(datajsonobjecttt,\"payment_message\"));\r\n                                }\r\n                            });\r\n                            binding.downloadIcon.setOnClickListener(new View.OnClickListener() {\r\n                                @Override\r\n                                public void onClick(View view) {\r\n                                    Utility.showAlertForPayment(act,ResponseHandler.getString(datajsonobjecttt,\"payment_message\"));\r\n                                }\r\n                            });\r\n                        }\r\n                        else\r\n                        {\r\n                            // Toast.makeText(act,\"TTTTTTTT\",Toast.LENGTH_LONG).show();\r\n                        }\r\n\r\n                    }\r\n                    else\r\n                    {\r\n                        LoadDataToUI();\r\n                        //fetchAutomaticCustomeFrame();\r\n                   //     binding.customFrameRelative.setVisibility(View.VISIBLE);\r\n                        binding.recoframe.setVisibility(View.GONE);\r\n                        binding.shareIcon.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                AlertBoxForSaveFrame();                            }\r\n                        });\r\n                        binding.fabroutIcon.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                AlertBoxForSaveFrame();                            }\r\n                        });\r\n                        binding.downloadIcon.setOnClickListener(new View.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(View view) {\r\n                                AlertBoxForSaveFrame();\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    bottomFramgment();\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n//                        String body;\r\n//                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n//                        Log.e(\"Load-Get_Exam \", body);\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                params.put(\"brand_id\",preafManager.getActiveBrand().getId());\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n    @Override public void onBackPressed() {CodeReUse.activityBackPress(act); }\r\n    @Override\r\n    public void onDialogDismissed(int dialogId) {\r\n\r\n    }\r\n    private class DownloadImageTask extends AsyncTask<String, Void, BitmapDrawable> {\r\n        String url;\r\n        public DownloadImageTask(String url) {\r\n            this.url = url;\r\n        }\r\n        protected BitmapDrawable doInBackground(String... urls) {\r\n            String urldisplay = urls[0];\r\n            Bitmap mIcon11 = null;\r\n            try {\r\n                Log.e(\"ErrorImage\", url);\r\n                InputStream in = new java.net.URL(url).openStream();\r\n                mIcon11 = BitmapFactory.decodeStream(in);\r\n            } catch (Exception e) {\r\n                Log.e(\"ErrorImage\", e.getMessage());\r\n                e.printStackTrace();\r\n            }\r\n            return new BitmapDrawable(getResources(), mIcon11);\r\n        }\r\n        protected void onPostExecute(BitmapDrawable result) {\r\n            //bmImage.setImageBitmap(result);\r\n            FrameDrawbable=result;\r\n            startSave();\r\n\r\n\r\n        }\r\n    }\r\n    class ShareImageTask extends AsyncTask<String, Void, BitmapDrawable> {\r\n        String url;\r\n        public ShareImageTask(String url) {\r\n            this.url = url;\r\n        }\r\n        protected BitmapDrawable doInBackground(String... urls) {\r\n            String urldisplay = urls[0];\r\n            Bitmap mIcon11 = null;\r\n            try {\r\n                Log.e(\"ErrorImage\", url);\r\n                InputStream in = new java.net.URL(url).openStream();\r\n                mIcon11 = BitmapFactory.decodeStream(in);\r\n            } catch (Exception e) {\r\n                Log.e(\"ErrorImage\", e.getMessage());\r\n                e.printStackTrace();\r\n            }\r\n            return new BitmapDrawable(getResources(), mIcon11);\r\n        }\r\n        protected void onPostExecute(BitmapDrawable result) {\r\n            //bmImage.setImageBitmap(result);\r\n            FrameDrawbable=result;\r\n            startsShare();\r\n            isLoading = false;\r\n            Utility.dismissProgress();\r\n\r\n        }\r\n\r\n        @Override\r\n        protected void onPreExecute() {\r\n            if (isLoading)\r\n                return;\r\n            isLoading = true;\r\n            Utility.showProgress(act);\r\n            super.onPreExecute();\r\n        }\r\n    }\r\n    private void removeFavourit(final int removeFav) {\r\n\r\n        Utility.Log(\"API : \", APIs.REMOVE_FAVOURIT);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.REMOVE_FAVOURIT, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n\r\n                Utility.Log(\"REMOVE_FAVOURIT : \", response);\r\n\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                if (imageList != null) {\r\n                    params.put(\"brand_id\", preafManager.getActiveBrand().getId());\r\n                    params.put(\"image_id\", selectedObject.getImageid());\r\n                } else {\r\n                    params.put(\"brand_id\",  preafManager.getActiveBrand().getId());\r\n                    params.put(\"image_id\", selectedObject.getImageid());\r\n\r\n                }\r\n                params.put(\"type\", String.valueOf(removeFav));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n\r\n        // handle result of pick image chooser\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == CropImage.PICK_IMAGE_CHOOSER_REQUEST_CODE && resultCode == Activity.RESULT_OK) {\r\n            Uri imageUri = CropImage.getPickImageResultUri(this, data);\r\n\r\n            // For API >= 23 we need to check specifically that we have permissions to read external storage.\r\n            if (CropImage.isReadExternalStoragePermissionsRequired(this, imageUri)) {\r\n                // request permissions and handle the result in onRequestPermissionsResult()\r\n                mCropImageUri = imageUri;\r\n                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                    requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, 0);\r\n                }\r\n            } else {\r\n                // no permissions required or already grunted, can start crop image activity\r\n                startCropImageActivity(imageUri);\r\n            }\r\n        }\r\n\r\n        // handle result of CropImageActivity\r\n        if (requestCode == CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE) {\r\n            CropImage.ActivityResult result = CropImage.getActivityResult(data);\r\n            if (resultCode == RESULT_OK) {\r\n\r\n                binding.logoCustom.setVisibility(View.VISIBLE);\r\n                binding.logoEmptyState.setVisibility(View.GONE);\r\n                ((ImageView) findViewById(R.id.logoCustom)).setImageURI(result.getUri());\r\n                //  Toast.makeText(this, \"Cropping successful, Sample: \" + result.getSampleSize(), Toast.LENGTH_LONG).show();\r\n            } else if (resultCode == CropImage.CROP_IMAGE_ACTIVITY_RESULT_ERROR_CODE) {\r\n                //  Toast.makeText(this, \"Cropping failed: \" + result.getError(), Toast.LENGTH_LONG).show();\r\n            }\r\n        }\r\n    }\r\n    @Override public void onRequestPermissionsResult(int requestCode, String permissions[], int[] grantResults) {\r\n        if (mCropImageUri != null && grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n            // required permissions granted, start crop image activity\r\n            startCropImageActivity(mCropImageUri);\r\n        } else {\r\n            //   Toast.makeText(this, \"Cancelling, required permissions are not granted\", Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n    private void startCropImageActivity(Uri imageUri) {\r\n        CropImage.activity(imageUri)\r\n                .setGuidelines(CropImageView.Guidelines.ON)\r\n                .setMultiTouchEnabled(true)\r\n                .start(this);\r\n    }\r\n    private void getBrandList() {\r\n\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n               // binding.swipeContainer.setRefreshing(false);\r\n                Utility.Log(\"GET_BRAND : \", response);\r\n                ArrayList<BrandListItem> brandListItems=new ArrayList<>();\r\n                try {\r\n\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    multiListItems = ResponseHandler.HandleGetBrandList(jsonObject);\r\n                    JSONArray dataJsonArray = ResponseHandler.getJSONArray(jsonObject, \"data\");\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                       // binding.swipeContainer.setRefreshing(false);\r\n                        error.printStackTrace();\r\n\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n    private void getBitmapFromView() {\r\n\r\n      /*  Bitmap newFinal;\r\n        Bitmap returnedBitmap = Bitmap.createBitmap(binding.customFrameRelative.getWidth(), binding.customFrameRelative.getHeight(),Bitmap.Config.ARGB_8888);\r\n\r\n        Canvas canvas = new Canvas(returnedBitmap);\r\n\r\n        Drawable bgDrawable =binding.customFrameRelative.getBackground();\r\n        if (bgDrawable!=null) {\r\n            bgDrawable.draw(canvas);\r\n        }   else{\r\n            canvas.drawColor(Color.TRANSPARENT, PorterDuff.Mode.CLEAR);\r\n\r\n        }\r\n        Log.e(\"logggg\",\"lkhjkgbjhmn\");\r\n        binding.customFrameRelative.draw(canvas);\r\n\r\n        binding.FrameImageDuplicate.setVisibility(View.VISIBLE);\r\n        binding.FrameImageDuplicate.setImageBitmap(returnedBitmap);\r\n        BitmapDrawable drawable = (BitmapDrawable) binding.FrameImageDuplicate.getDrawable();\r\n        newFinal = drawable.getBitmap();\r\n\r\n        FileOutputStream fileOutputStream = null;\r\n        File file = getDisc();\r\n        if (!file.exists() && !file.mkdirs()) {\r\n            return;\r\n        }\r\n        SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"yyyymmsshhmmss\");\r\n        String date = simpleDateFormat.format(new Date());\r\n        String name = \"Img\" + date + \".jpg\";\r\n        String file_name = file.getAbsolutePath() + \"/\" + name;\r\n        new_file = new File(file_name);\r\n        try {\r\n            fileOutputStream = new FileOutputStream(new_file);\r\n            Bitmap bitmap = newFinal;\r\n            bitmap.compress(Bitmap.CompressFormat.PNG, 100, fileOutputStream);\r\n\r\n            fileOutputStream.flush();\r\n            fileOutputStream.close();\r\n\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        refreshgallery(new_file);\r\n\r\n        addCustomFrame(newFinal);*/\r\n\r\n    }\r\n\r\n    private void fetchAutomaticCustomeFrame() {\r\n\r\n\r\n        if (preafManager.getActiveBrand().getAddress()!=null)\r\n        {\r\n           // binding.customAddressEdit1.setText(preafManager.getActiveBrand().getEmail());\r\n        }\r\n\r\n\r\n        if (preafManager.getActiveBrand().getPhonenumber()!=null)\r\n        {\r\n\r\n          //  binding.customeContactEdit1.setText(preafManager.getActiveBrand().getPhonenumber());\r\n        }\r\n\r\n\r\n    }\r\n    public static String convertFirstUpper(String str) {\r\n\r\n        if (str == null || str.isEmpty()) {\r\n            return str;\r\n        }\r\n        Utility.Log(\"FirstLetter\", str.substring(0, 1) + \"    \" + str.substring(1));\r\n        return str.substring(0, 1).toUpperCase() + str.substring(1);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //show dialog for upgrading package for using all 6 frames\r\n    public DialogUpgradeLayoutBinding upgradeLayoutBinding;\r\n    private void triggerUpgradePackage() {\r\n        upgradeLayoutBinding=DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.dialog_upgrade_layout, null, false);\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(act, R.style.MyAlertDialogStyle_extend);\r\n        builder.setView(upgradeLayoutBinding.getRoot());\r\n        androidx.appcompat.app.AlertDialog alertDialog = builder.create();\r\n        alertDialog.setContentView(upgradeLayoutBinding.getRoot());\r\n\r\n        upgradeLayoutBinding.viewPackage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                alertDialog.dismiss();\r\n            }\r\n        });\r\n\r\n\r\n        alertDialog.setCancelable(false);\r\n        alertDialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));\r\n        alertDialog.show();\r\n\r\n    }\r\n    GestureDetector gestureDetector;\r\n    private View.OnTouchListener onTouchListener() {\r\n        return new View.OnTouchListener() {\r\n\r\n            @SuppressLint(\"ClickableViewAccessibility\")\r\n            @Override\r\n            public boolean onTouch(View view, MotionEvent event) {\r\n                if (gestureDetector.onTouchEvent(event)) {\r\n                    onSelectImageClick(view);\r\n                    return true;\r\n                }else {\r\n                    final int x = (int) event.getRawX();\r\n                    final int y = (int) event.getRawY();\r\n\r\n                    switch (event.getAction() & MotionEvent.ACTION_MASK) {\r\n\r\n                        case MotionEvent.ACTION_DOWN:\r\n                            RelativeLayout.LayoutParams lParams = (RelativeLayout.LayoutParams)\r\n                                    view.getLayoutParams();\r\n\r\n                            xDelta = x - lParams.leftMargin;\r\n                            yDelta = y - lParams.topMargin;\r\n                            break;\r\n\r\n                        case MotionEvent.ACTION_UP:\r\n\r\n                            Toast.makeText(act,\r\n                                    \"I'm here!\", Toast.LENGTH_SHORT)\r\n                                    .show();\r\n                            break;\r\n\r\n                        case MotionEvent.ACTION_MOVE:\r\n                            RelativeLayout.LayoutParams layoutParams = (RelativeLayout.LayoutParams) view\r\n                                    .getLayoutParams();\r\n                            layoutParams.leftMargin = x - xDelta;\r\n                            layoutParams.topMargin = y - yDelta;\r\n                            layoutParams.rightMargin = 0;\r\n                            layoutParams.bottomMargin = 0;\r\n                            view.setLayoutParams(layoutParams);\r\n                            break;\r\n                    }\r\n\r\n                    mainLayout.invalidate();\r\n                    return true;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    //version 3 ======================================\r\n    @Override public void onFooterSelectEvent(int layoutType) {\r\n        addDynamicFooter(layoutType);\r\n    }\r\n    boolean isFirstFooterSelect=true;\r\n    int footerLayout=1;\r\n    private LayoutForLoadOneBinding oneBinding;\r\n    private LayoutForLoadTwoBinding twoBinding;\r\n    private LayoutForLoadThreeBinding threeBinding;\r\n    private LayoutForLoadFourBinding fourBinding;\r\n    private LayoutForLoadFiveBinding fiveBinding;\r\n    private LayoutForLoadSixBinding sixBinding;\r\n    private void addDynamicFooter(int layoutType) {\r\n        binding.elementFooter.removeAllViews();\r\n        footerLayout=layoutType;\r\n\r\n\r\n\r\n\r\n     /*   LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n        View footerView = null;*/\r\n\r\n        if (layoutType== FooterModel.LAYOUT_FRAME_ONE) {\r\n            oneBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_one, null, false);\r\n            binding.elementFooter.addView(oneBinding.getRoot());\r\n        }\r\n        else if (layoutType== FooterModel.LAYOUT_FRAME_TWO) {\r\n            twoBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_two, null, false);\r\n            binding.elementFooter.addView(twoBinding.getRoot());\r\n        }\r\n        else if (layoutType== FooterModel.LAYOUT_FRAME_THREE) {\r\n            threeBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_three, null, false);\r\n            binding.elementFooter.addView(threeBinding.getRoot());\r\n        }\r\n        else if (layoutType== FooterModel.LAYOUT_FRAME_FOUR) {\r\n            fourBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_four, null, false);\r\n            binding.elementFooter.addView(fourBinding.getRoot());\r\n        }\r\n        else if (layoutType== FooterModel.LAYOUT_FRAME_FIVE) {\r\n            fiveBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_five, null, false);\r\n            binding.elementFooter.addView(fiveBinding.getRoot());\r\n        }\r\n        else if (layoutType== FooterModel.LAYOUT_FRAME_SIX) {\r\n            sixBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_six, null, false);\r\n            binding.elementFooter.addView(sixBinding.getRoot());\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    @Override public void onColorItemChange(int colorCode) {\r\n\r\n        if (editorFragment==2) {\r\n            if (footerLayout==1){\r\n                ChangeTextColorForFrameOne(colorCode);\r\n            }else if (footerLayout==2){\r\n                ChangeTextColorForFrameTwo(colorCode);\r\n            }else if (footerLayout==3){\r\n                ChangeTextColorForFrameThree(colorCode);\r\n            }else if (footerLayout==4){\r\n                ChangeTextColorForFrameFour(colorCode);\r\n            }else if (footerLayout==5){\r\n                ChangeTextColorForFrameFive(colorCode);\r\n            }else if (footerLayout==6){\r\n                ChangeTextColorForFrameSix(colorCode);\r\n            }\r\n        }\r\n        if (editorFragment==1){\r\n\r\n            if (footerLayout==1){\r\n                ChangeBackgroundColorForFrameOne(colorCode);\r\n            }else if (footerLayout==2){\r\n                ChangeBackgroundColorForFrameTwo(colorCode);\r\n            }else if (footerLayout==3){\r\n\r\n            }else if (footerLayout==4){\r\n                ChangeBackgroundColorForFrameFour(colorCode);\r\n            }else if (footerLayout==5){\r\n                ChangeBackgroundColorForFrameFive(colorCode);\r\n            }else if (footerLayout==6){\r\n                ChangeBackgroundColorForFrameSix(colorCode);\r\n            }\r\n        }\r\n    }\r\n    @Override public void onColorChanged(int colorCode) {\r\n        if (editorFragment==2) {\r\n            if (footerLayout==1){\r\n                ChangeTextColorForFrameOne(colorCode);\r\n            }else if (footerLayout==2){\r\n                ChangeTextColorForFrameTwo(colorCode);\r\n            }else if (footerLayout==3){\r\n                ChangeTextColorForFrameThree(colorCode);\r\n            }else if (footerLayout==4){\r\n                ChangeTextColorForFrameFour(colorCode);\r\n            }else if (footerLayout==5){\r\n                ChangeTextColorForFrameFive(colorCode);\r\n            }else if (footerLayout==6){\r\n                ChangeTextColorForFrameSix(colorCode);\r\n            }\r\n        }\r\n        if (editorFragment==1){\r\n\r\n            if (footerLayout==1){\r\n                ChangeBackgroundColorForFrameOne(colorCode);\r\n            }else if (footerLayout==2){\r\n                ChangeBackgroundColorForFrameTwo(colorCode);\r\n            }else if (footerLayout==3){\r\n\r\n            }else if (footerLayout==4){\r\n                ChangeBackgroundColorForFrameFour(colorCode);\r\n            }else if (footerLayout==5){\r\n                ChangeBackgroundColorForFrameFive(colorCode);\r\n            }else if (footerLayout==6){\r\n                ChangeBackgroundColorForFrameSix(colorCode);\r\n            }\r\n        }\r\n\r\n    }\r\n    @Override public void onColorSelected(int dialogId, int colorCode) {\r\n        if (editorFragment==2) {\r\n            if (footerLayout==1){\r\n                ChangeTextColorForFrameOne(colorCode);\r\n            }else if (footerLayout==2){\r\n                ChangeTextColorForFrameTwo(colorCode);\r\n            }else if (footerLayout==3){\r\n                ChangeTextColorForFrameThree(colorCode);\r\n            }else if (footerLayout==4){\r\n                ChangeTextColorForFrameFour(colorCode);\r\n            }else if (footerLayout==5){\r\n                ChangeTextColorForFrameFive(colorCode);\r\n            }else if (footerLayout==6){\r\n                ChangeTextColorForFrameSix(colorCode);\r\n            }\r\n        }\r\n        if (editorFragment==1){\r\n\r\n            if (footerLayout==1){\r\n                ChangeBackgroundColorForFrameOne(colorCode);\r\n            }else if (footerLayout==2){\r\n                ChangeBackgroundColorForFrameTwo(colorCode);\r\n            }else if (footerLayout==3){\r\n\r\n            }else if (footerLayout==4){\r\n                ChangeBackgroundColorForFrameFour(colorCode);\r\n            }else if (footerLayout==5){\r\n                ChangeBackgroundColorForFrameFive(colorCode);\r\n            }else if (footerLayout==6){\r\n                ChangeBackgroundColorForFrameSix(colorCode);\r\n            }\r\n        }\r\n\r\n    }\r\n    @Override public void onChooseColor(int colorCode) {\r\n        if (editorFragment==2) {\r\n            if (footerLayout==1){\r\n                ChangeTextColorForFrameOne(colorCode);\r\n            }else if (footerLayout==2){\r\n                ChangeTextColorForFrameTwo(colorCode);\r\n            }else if (footerLayout==3){\r\n                ChangeTextColorForFrameThree(colorCode);\r\n            }else if (footerLayout==4){\r\n                ChangeTextColorForFrameFour(colorCode);\r\n            }else if (footerLayout==5){\r\n                ChangeTextColorForFrameFive(colorCode);\r\n            }else if (footerLayout==6){\r\n                ChangeTextColorForFrameSix(colorCode);\r\n            }\r\n        }\r\n        if (editorFragment==1){\r\n\r\n            if (footerLayout==1){\r\n                ChangeBackgroundColorForFrameOne(colorCode);\r\n            }else if (footerLayout==2){\r\n                ChangeBackgroundColorForFrameTwo(colorCode);\r\n            }else if (footerLayout==3){\r\n\r\n            }else if (footerLayout==4){\r\n                ChangeBackgroundColorForFrameFour(colorCode);\r\n            }else if (footerLayout==5){\r\n                ChangeBackgroundColorForFrameFive(colorCode);\r\n            }else if (footerLayout==6){\r\n                ChangeBackgroundColorForFrameSix(colorCode);\r\n            }\r\n        }\r\n\r\n    }\r\n    @Override public void onFontChangeListenert(String Font) {\r\n\r\n\r\n\r\n            if (footerLayout==1){\r\n                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n                oneBinding.gmailText.setTypeface(custom_font);\r\n                oneBinding.contactText.setTypeface(custom_font);\r\n                 oneBinding.locationText.setTypeface(custom_font);\r\n            }else if (footerLayout==2){\r\n                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n                twoBinding.gmailText.setTypeface(custom_font);\r\n                twoBinding.contactText.setTypeface(custom_font);\r\n                twoBinding.locationText.setTypeface(custom_font);\r\n                twoBinding.websiteText.setTypeface(custom_font);\r\n            }else if (footerLayout==3){\r\n                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n                threeBinding.gmailText.setTypeface(custom_font);\r\n                threeBinding.contactText.setTypeface(custom_font);\r\n                threeBinding.locationText.setTypeface(custom_font);\r\n                threeBinding.websiteText.setTypeface(custom_font);\r\n            }else if (footerLayout==4){\r\n                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n                fourBinding.gmailText.setTypeface(custom_font);\r\n                fourBinding.contactText.setTypeface(custom_font);\r\n                fourBinding.locationText.setTypeface(custom_font);\r\n                fourBinding.websiteText.setTypeface(custom_font);\r\n            }else if (footerLayout==5){\r\n                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n                fiveBinding.gmailText.setTypeface(custom_font);\r\n                fiveBinding.contactText.setTypeface(custom_font);\r\n                fiveBinding.websiteText.setTypeface(custom_font);\r\n            }else if (footerLayout==6) {\r\n                Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);\r\n                sixBinding.textElement1.setTypeface(custom_font);\r\n\r\n            }\r\n\r\n\r\n//        if (selectedForEdit!=null) {\r\n//            selectedForEdit.setTypeface(custom_font);\r\n//        }\r\n    }\r\n    @Override public void onUnderLineItalic(boolean Left) {\r\n        if (Left) {\r\n            // Toast.makeText(act,\"true\",Toast.LENGTH_SHORT).show();\r\n            //  binding.customAddressEdit.setPaintFlags( binding.customAddressEdit.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n\r\n            if (footerLayout==1){\r\n\r\n                oneBinding.gmailText.setPaintFlags(oneBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                oneBinding.contactText.setPaintFlags(oneBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                oneBinding.locationText.setPaintFlags(oneBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n            }else if (footerLayout==2){\r\n\r\n                twoBinding.gmailText.setPaintFlags( twoBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                twoBinding.contactText.setPaintFlags(twoBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                twoBinding.locationText.setPaintFlags(twoBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                twoBinding.websiteText.setPaintFlags( twoBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n            }else if (footerLayout==3){\r\n\r\n                threeBinding.gmailText.setPaintFlags(threeBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                threeBinding.contactText.setPaintFlags(threeBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                threeBinding.locationText.setPaintFlags(threeBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                threeBinding.websiteText.setPaintFlags(threeBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n            }else if (footerLayout==4){\r\n\r\n                fourBinding.gmailText.setPaintFlags(fourBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                fourBinding.contactText.setPaintFlags(fourBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                fourBinding.locationText.setPaintFlags(fourBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                fourBinding.websiteText.setPaintFlags(fourBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n            }else if (footerLayout==5){\r\n\r\n                fiveBinding.gmailText.setPaintFlags(fiveBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                fiveBinding.contactText.setPaintFlags(fiveBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n                fiveBinding.websiteText.setPaintFlags(fiveBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n            }else if (footerLayout==6) {\r\n\r\n                sixBinding.textElement1.setPaintFlags(sixBinding.textElement1.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n        else\r\n        {\r\n\r\n\r\n            if (footerLayout==1){\r\n\r\n                oneBinding.gmailText.setPaintFlags(0);\r\n                oneBinding.contactText.setPaintFlags(0);\r\n                oneBinding.locationText.setPaintFlags(0);\r\n            }else if (footerLayout==2){\r\n\r\n                twoBinding.gmailText.setPaintFlags(0);\r\n                twoBinding.contactText.setPaintFlags(0);\r\n                twoBinding.locationText.setPaintFlags(0);\r\n                twoBinding.websiteText.setPaintFlags(0);\r\n            }else if (footerLayout==3){\r\n\r\n                threeBinding.gmailText.setPaintFlags(0);\r\n                threeBinding.contactText.setPaintFlags(0);\r\n                threeBinding.locationText.setPaintFlags(0);\r\n                threeBinding.websiteText.setPaintFlags(0);\r\n            }else if (footerLayout==4){\r\n                fourBinding.gmailText.setPaintFlags(0);\r\n                fourBinding.contactText.setPaintFlags(0);\r\n                fourBinding.locationText.setPaintFlags(0);\r\n                fourBinding.websiteText.setPaintFlags(0);\r\n            }else if (footerLayout==5){\r\n\r\n                fiveBinding.gmailText.setPaintFlags(0);\r\n                fiveBinding.contactText.setPaintFlags(0);\r\n                fiveBinding.websiteText.setPaintFlags(0);\r\n            }else if (footerLayout==6) {\r\n\r\n                sixBinding.textElement1.setPaintFlags(0);\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n            // Toast.makeText(act,\"false\",Toast.LENGTH_SHORT).show();\r\n            //  .setTypeface(null, Typeface.NORMAL);\r\n//            if (selectedForEdit!=null) {\r\n//\r\n//                selectedForEdit.setPaintFlags(0);\r\n//            }\r\n        }\r\n    }\r\n    @Override public void onfontSize(int textsize) {\r\n        if (footerLayout==1){\r\n\r\n            oneBinding.gmailText.setTextSize(textsize);\r\n            oneBinding.contactText.setTextSize(textsize);\r\n            oneBinding.locationText.setTextSize(textsize);\r\n        }else if (footerLayout==2){\r\n\r\n            twoBinding.gmailText.setTextSize(textsize);\r\n            twoBinding.contactText.setTextSize(textsize);\r\n            twoBinding.locationText.setTextSize(textsize);\r\n            twoBinding.websiteText.setTextSize(textsize);\r\n        }else if (footerLayout==3){\r\n\r\n            threeBinding.gmailText.setTextSize(textsize);\r\n            threeBinding.contactText.setTextSize(textsize);\r\n            threeBinding.locationText.setTextSize(textsize);\r\n            threeBinding.websiteText.setTextSize(textsize);\r\n        }else if (footerLayout==4){\r\n\r\n            fourBinding.gmailText.setTextSize(textsize);\r\n            fourBinding.contactText.setTextSize(textsize);\r\n            fourBinding.locationText.setTextSize(textsize);\r\n            fourBinding.websiteText.setTextSize(textsize);\r\n        }else if (footerLayout==5){\r\n\r\n            fiveBinding.gmailText.setTextSize(textsize);\r\n            fiveBinding.contactText.setTextSize(textsize);\r\n            fiveBinding.websiteText.setTextSize(textsize);\r\n        }else if (footerLayout==6) {\r\n\r\n            sixBinding.textElement1.setTextSize(textsize);\r\n\r\n        }\r\n\r\n//        if (selectedForEdit!=null) {\r\n//            selectedForEdit.setTextSize(textsize);\r\n//        }\r\n    }\r\n    @Override public void onBoldTextChange(boolean Bold) {\r\n        if (Bold) {\r\n            //  Toast.makeText(act,\"true\",Toast.LENGTH_SHORT).show();\r\n            if (footerLayout==1){\r\n\r\n                oneBinding.gmailText.setTypeface( oneBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                oneBinding.contactText.setTypeface( oneBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                oneBinding.locationText.setTypeface( oneBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n            }else if (footerLayout==2){\r\n\r\n                twoBinding.gmailText.setTypeface( twoBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                twoBinding.contactText.setTypeface( twoBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                twoBinding.locationText.setTypeface( twoBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                twoBinding.websiteText.setTypeface( twoBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n            }else if (footerLayout==3){\r\n\r\n                threeBinding.gmailText.setTypeface(  threeBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                threeBinding.contactText.setTypeface(  threeBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                threeBinding.locationText.setTypeface(  threeBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                threeBinding.websiteText.setTypeface(  threeBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n            }else if (footerLayout==4){\r\n\r\n                fourBinding.gmailText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                fourBinding.contactText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                fourBinding.locationText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                fourBinding.websiteText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n            }else if (footerLayout==5){\r\n\r\n                fiveBinding.gmailText.setTypeface(fiveBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                fiveBinding.contactText.setTypeface(fiveBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n                fiveBinding.websiteText.setTypeface(fiveBinding.gmailText.getTypeface(), Typeface.BOLD);\r\n            }else if (footerLayout==6) {\r\n\r\n                sixBinding.textElement1.setTypeface(sixBinding.textElement1.getTypeface(), Typeface.BOLD);\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n//            if (selectedForEdit!=null) {\r\n//                selectedForEdit.setTypeface(selectedForEdit.getTypeface(), Typeface.BOLD);\r\n//            }\r\n\r\n        }else {\r\n            //Toast.makeText(act,\"false\",Toast.LENGTH_SHORT).show();\r\n\r\n            if (footerLayout==1){\r\n\r\n                oneBinding.gmailText.setTypeface(null, Typeface.NORMAL);\r\n                oneBinding.contactText.setTypeface(null, Typeface.NORMAL);\r\n                oneBinding.locationText.setTypeface(null, Typeface.NORMAL);\r\n            }else if (footerLayout==2){\r\n\r\n                twoBinding.gmailText.setTypeface(null, Typeface.NORMAL);\r\n                twoBinding.contactText.setTypeface(null, Typeface.NORMAL);\r\n                twoBinding.locationText.setTypeface(null, Typeface.NORMAL);\r\n                twoBinding.websiteText.setTypeface(null, Typeface.NORMAL);\r\n            }else if (footerLayout==3){\r\n\r\n                threeBinding.gmailText.setTypeface(null, Typeface.NORMAL);\r\n                threeBinding.contactText.setTypeface(null, Typeface.NORMAL);\r\n                threeBinding.locationText.setTypeface(null, Typeface.NORMAL);\r\n                threeBinding.websiteText.setTypeface(null, Typeface.NORMAL);\r\n            }else if (footerLayout==4){\r\n\r\n                fourBinding.gmailText.setTypeface(null, Typeface.NORMAL);\r\n                fourBinding.contactText.setTypeface(null, Typeface.NORMAL);\r\n                fourBinding.locationText.setTypeface(null, Typeface.NORMAL);\r\n                fourBinding.websiteText.setTypeface(null, Typeface.NORMAL);\r\n            }else if (footerLayout==5){\r\n\r\n                fiveBinding.gmailText.setTypeface(null, Typeface.NORMAL);\r\n                fiveBinding.contactText.setTypeface(null, Typeface.NORMAL);\r\n                fiveBinding.websiteText.setTypeface(null, Typeface.NORMAL);\r\n            }else if (footerLayout==6) {\r\n\r\n                sixBinding.textElement1.setTypeface(null, Typeface.NORMAL);\r\n\r\n            }\r\n\r\n\r\n\r\n//            if (selectedForEdit!=null) {\r\n//                selectedForEdit.setTypeface(null, Typeface.NORMAL);\r\n//            }\r\n        }\r\n\r\n    }\r\n    @Override public void onItalicTextChange(boolean Italic) {\r\n        if (Italic) {\r\n\r\n            if (footerLayout==1){\r\n\r\n                oneBinding.gmailText.setTypeface(oneBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                oneBinding.contactText.setTypeface(oneBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                oneBinding.locationText.setTypeface(oneBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n            }else if (footerLayout==2){\r\n\r\n                twoBinding.gmailText.setTypeface(twoBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                twoBinding.contactText.setTypeface(twoBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                twoBinding.locationText.setTypeface(twoBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                twoBinding.websiteText.setTypeface(twoBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n            }else if (footerLayout==3){\r\n\r\n                threeBinding.gmailText.setTypeface(threeBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                threeBinding.contactText.setTypeface(threeBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                threeBinding.locationText.setTypeface(threeBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                threeBinding.websiteText.setTypeface(threeBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n            }else if (footerLayout==4){\r\n\r\n                fourBinding.gmailText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                fourBinding.contactText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                fourBinding.locationText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                fourBinding.websiteText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n            }else if (footerLayout==5){\r\n\r\n                fiveBinding.gmailText.setTypeface(fiveBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                fiveBinding.contactText.setTypeface(fiveBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n                fiveBinding.websiteText.setTypeface(fiveBinding.gmailText.getTypeface(), Typeface.ITALIC);\r\n            }else if (footerLayout==6) {\r\n\r\n                sixBinding.textElement1.setTypeface(sixBinding.textElement1.getTypeface(), Typeface.ITALIC);\r\n\r\n            }\r\n\r\n\r\n            //   Toast.makeText(act,\"true\",Toast.LENGTH_SHORT).show();\r\n//            if (selectedForEdit!=null) {\r\n//                selectedForEdit.setTypeface(selectedForEdit.getTypeface(), Typeface.ITALIC);\r\n//            }\r\n        }else {\r\n\r\n            if (footerLayout==1){\r\n\r\n                oneBinding.gmailText.setTypeface(null, Typeface.NORMAL);\r\n                oneBinding.contactText.setTypeface(null, Typeface.NORMAL);\r\n                oneBinding.locationText.setTypeface(null, Typeface.NORMAL);\r\n            }else if (footerLayout==2){\r\n\r\n                twoBinding.gmailText.setTypeface(null, Typeface.NORMAL);\r\n                twoBinding.contactText.setTypeface(null, Typeface.NORMAL);\r\n                twoBinding.locationText.setTypeface(null, Typeface.NORMAL);\r\n                twoBinding.websiteText.setTypeface(null, Typeface.NORMAL);\r\n            }else if (footerLayout==3){\r\n\r\n                threeBinding.gmailText.setTypeface(null, Typeface.NORMAL);\r\n                threeBinding.contactText.setTypeface(null, Typeface.NORMAL);\r\n                threeBinding.locationText.setTypeface(null, Typeface.NORMAL);\r\n                threeBinding.websiteText.setTypeface(null, Typeface.NORMAL);\r\n            }else if (footerLayout==4){\r\n\r\n                fourBinding.gmailText.setTypeface(null, Typeface.NORMAL);\r\n                fourBinding.contactText.setTypeface(null, Typeface.NORMAL);\r\n                fourBinding.locationText.setTypeface(null, Typeface.NORMAL);\r\n                fourBinding.websiteText.setTypeface(null, Typeface.NORMAL);\r\n            }else if (footerLayout==5){\r\n\r\n                fiveBinding.gmailText.setTypeface(null, Typeface.NORMAL);\r\n                fiveBinding.contactText.setTypeface(null, Typeface.NORMAL);\r\n                fiveBinding.websiteText.setTypeface(null, Typeface.NORMAL);\r\n            }else if (footerLayout==6) {\r\n\r\n                sixBinding.textElement1.setTypeface(null, Typeface.NORMAL);\r\n\r\n            }\r\n\r\n\r\n//            if (selectedForEdit!=null) {\r\n//\r\n//                //   Toast.makeText(act, \"false\", Toast.LENGTH_SHORT).show();\r\n//                selectedForEdit.setTypeface(null, Typeface.NORMAL);\r\n//            }\r\n        }\r\n    }\r\n    public void ChangeBackgroundColorForFrameOne(int colorCode){\r\n         oneBinding.topView.setBackgroundColor(colorCode);\r\n         oneBinding.topView2.setBackgroundColor(colorCode);\r\n         oneBinding.locationBackgroundLayout.setBackgroundColor(colorCode);\r\n    }\r\n    public void ChangeTextColorForFrameOne(int colodCode){\r\n        oneBinding.gmailImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        oneBinding.gmailText.setTextColor(colodCode);\r\n        oneBinding.contactImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        oneBinding.contactText.setTextColor(colodCode);\r\n\r\n    }\r\n    public void ChangeBackgroundColorForFrameTwo(int colorCode){\r\n        twoBinding.firstView.setBackgroundTintList(ColorStateList.valueOf(colorCode));\r\n        twoBinding.secondView.setBackgroundTintList(ColorStateList.valueOf(colorCode));\r\n\r\n    }\r\n    public void ChangeTextColorForFrameTwo(int colodCode){\r\n        twoBinding.gmailImage.setBackgroundTintList(ColorStateList.valueOf(colodCode));\r\n        twoBinding.gmailText.setTextColor(colodCode);\r\n        twoBinding.contactImage.setBackgroundTintList(ColorStateList.valueOf(colodCode));\r\n        twoBinding.contactText.setTextColor(colodCode);\r\n        twoBinding.websiteImage.setBackgroundTintList(ColorStateList.valueOf(colodCode));\r\n        twoBinding.websiteText.setTextColor(colodCode);\r\n        twoBinding.locationImage.setBackgroundTintList(ColorStateList.valueOf(colodCode));\r\n        twoBinding.locationText.setTextColor(colodCode);\r\n\r\n    }\r\n    public void ChangeTextColorForFrameThree(int colodCode){\r\n        threeBinding.gmailImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        threeBinding.gmailText.setTextColor(colodCode);\r\n        threeBinding.contactImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        threeBinding.contactText.setTextColor(colodCode);\r\n        threeBinding.websiteImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        threeBinding.websiteText.setTextColor(colodCode);\r\n        threeBinding.locationImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        threeBinding.locationText.setTextColor(colodCode);\r\n\r\n    }\r\n    public void ChangeBackgroundColorForFrameFour(int colorCode){\r\n        fourBinding.topView2.setBackgroundColor(colorCode); }\r\n    public void ChangeTextColorForFrameFour(int colodCode){\r\n        fourBinding.gmailImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fourBinding.gmailText.setTextColor(colodCode);\r\n        fourBinding.contactImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fourBinding.contactText.setTextColor(colodCode);\r\n        fourBinding.websiteImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fourBinding.websiteText.setTextColor(colodCode);\r\n        fourBinding.locationImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fourBinding.locationText.setTextColor(colodCode);\r\n\r\n    }\r\n    public void ChangeBackgroundColorForFrameFive(int colorCode){\r\n        fiveBinding.element1.setImageTintList(ColorStateList.valueOf(colorCode));\r\n        fiveBinding.element3.setImageTintList(ColorStateList.valueOf(colorCode));\r\n\r\n    }\r\n    public void ChangeTextColorForFrameFive(int colodCode){\r\n        fiveBinding.gmailImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fiveBinding.gmailText.setTextColor(colodCode);\r\n        fiveBinding.contactImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fiveBinding.contactText.setTextColor(colodCode);\r\n        fiveBinding.websiteImage.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        fiveBinding.websiteText.setTextColor(colodCode);\r\n    }\r\n    public void ChangeBackgroundColorForFrameSix(int colorCode){\r\n        sixBinding.containerElement.setBackgroundTintList(ColorStateList.valueOf(colorCode));\r\n        sixBinding.viewElement2.setBackgroundTintList(ColorStateList.valueOf(colorCode));\r\n\r\n    }\r\n    public void ChangeTextColorForFrameSix(int colodCode){\r\n        sixBinding.imgElement1.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        sixBinding.imgElement2.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        sixBinding.imgElement3.setImageTintList(ColorStateList.valueOf(colodCode));\r\n        sixBinding.textElement1.setTextColor(colodCode);\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    //to handle click and drag listener\r\n    private class SingleTapConfirm extends GestureDetector.SimpleOnGestureListener {\r\n        @Override\r\n        public boolean onSingleTapUp(MotionEvent event) {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/ViewAllImage.java	(revision b94e61c8e866103e27969f2bc5a3b7a5ef244fcd)
+++ app/src/main/java/com/app/brandmania/Activity/ViewAllImage.java	(date 1608886215289)
@@ -1,19 +1,9 @@
 package com.app.brandmania.Activity;
 
-import androidx.annotation.RequiresApi;
-import androidx.core.app.ActivityCompat;
-import androidx.core.content.ContextCompat;
-import androidx.databinding.DataBindingUtil;
-import androidx.recyclerview.widget.GridLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-import androidx.viewpager.widget.ViewPager;
-
 import android.Manifest;
 import android.annotation.SuppressLint;
 import android.app.Activity;
 import android.app.AlertDialog;
-import android.app.ProgressDialog;
-import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.pm.PackageManager;
@@ -22,8 +12,6 @@
 import android.graphics.BitmapFactory;
 import android.graphics.Canvas;
 import android.graphics.Color;
-import android.graphics.Paint;
-import android.graphics.PorterDuff;
 import android.graphics.Typeface;
 import android.graphics.drawable.BitmapDrawable;
 import android.graphics.drawable.ColorDrawable;
@@ -40,15 +28,19 @@
 import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
-import android.view.WindowManager;
-import android.widget.Button;
-import android.widget.EditText;
 import android.widget.ImageView;
 import android.widget.LinearLayout;
 import android.widget.RelativeLayout;
-import android.widget.TextView;
 import android.widget.Toast;
 
+import androidx.annotation.RequiresApi;
+import androidx.core.app.ActivityCompat;
+import androidx.core.content.ContextCompat;
+import androidx.databinding.DataBindingUtil;
+import androidx.recyclerview.widget.GridLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+import androidx.viewpager.widget.ViewPager;
+
 import com.android.volley.AuthFailureError;
 import com.android.volley.Request;
 import com.android.volley.RequestQueue;
@@ -56,15 +48,13 @@
 import com.android.volley.VolleyError;
 import com.android.volley.toolbox.StringRequest;
 import com.android.volley.toolbox.Volley;
-import com.androidnetworking.AndroidNetworking;
-import com.androidnetworking.common.ANRequest;
-import com.androidnetworking.common.Priority;
-import com.androidnetworking.error.ANError;
-import com.androidnetworking.interfaces.JSONObjectRequestListener;
-import com.androidnetworking.interfaces.UploadProgressListener;
-import com.app.brandmania.Adapter.FooterAdapter;
 import com.app.brandmania.Adapter.FooterModel;
+import com.app.brandmania.Adapter.ImageCateItemeInterFace;
+import com.app.brandmania.Adapter.ImageCategoryAddaptor;
 import com.app.brandmania.Adapter.ViewAllTopTabAdapter;
+import com.app.brandmania.Adapter.ViewPagerAdapterFrame;
+import com.app.brandmania.Common.PreafManager;
+import com.app.brandmania.Common.ResponseHandler;
 import com.app.brandmania.Connection.BaseActivity;
 import com.app.brandmania.Interface.IColorChange;
 import com.app.brandmania.Interface.IItaliTextEvent;
@@ -74,10 +64,16 @@
 import com.app.brandmania.Interface.IUnderLineTextEvent;
 import com.app.brandmania.Interface.onFooterSelectListener;
 import com.app.brandmania.Model.BrandListItem;
-import com.app.brandmania.Model.SliderItem;
+import com.app.brandmania.Model.DashBoardItem;
+import com.app.brandmania.Model.FrameItem;
+import com.app.brandmania.Model.ImageList;
+import com.app.brandmania.R;
+import com.app.brandmania.Utils.APIs;
+import com.app.brandmania.Utils.CodeReUse;
 import com.app.brandmania.Utils.IFontChangeEvent;
+import com.app.brandmania.Utils.Utility;
+import com.app.brandmania.databinding.ActivityViewAllImageBinding;
 import com.app.brandmania.databinding.DialogUpgradeLayoutBinding;
-import com.app.brandmania.databinding.ItemFooterOneBinding;
 import com.app.brandmania.databinding.LayoutForLoadFiveBinding;
 import com.app.brandmania.databinding.LayoutForLoadFourBinding;
 import com.app.brandmania.databinding.LayoutForLoadOneBinding;
@@ -86,22 +82,7 @@
 import com.app.brandmania.databinding.LayoutForLoadTwoBinding;
 import com.bumptech.glide.Glide;
 import com.google.android.material.tabs.TabLayout;
-import com.google.android.material.textfield.TextInputEditText;
-import com.google.android.material.textfield.TextInputLayout;
 import com.google.gson.Gson;
-import com.app.brandmania.Adapter.ImageCateItemeInterFace;
-import com.app.brandmania.Adapter.ImageCategoryAddaptor;
-import com.app.brandmania.Adapter.ViewPagerAdapterFrame;
-import com.app.brandmania.Common.PreafManager;
-import com.app.brandmania.Common.ResponseHandler;
-import com.app.brandmania.Model.DashBoardItem;
-import com.app.brandmania.Model.FrameItem;
-import com.app.brandmania.Model.ImageList;
-import com.app.brandmania.R;
-import com.app.brandmania.Utils.APIs;
-import com.app.brandmania.Utils.CodeReUse;
-import com.app.brandmania.Utils.Utility;
-import com.app.brandmania.databinding.ActivityViewAllImageBinding;
 import com.jaredrummler.android.colorpicker.ColorPickerDialogListener;
 import com.jaredrummler.android.colorpicker.ColorPickerView;
 import com.theartofdev.edmodo.cropper.CropImage;
@@ -116,8 +97,6 @@
 import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
-import java.net.HttpURLConnection;
-import java.net.URL;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
 import java.util.Date;
@@ -169,6 +148,11 @@
     private int xDelta;
     private int yDelta;
     private ViewGroup mainLayout;
+    private boolean isUserFree = true;
+    private boolean canDownload = true;
+    private int FrameCountForDownload = 2;
+
+    private boolean isUsingCustomFrame = true;
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
@@ -214,7 +198,7 @@
                     binding.fabroutIcon.setVisibility(View.GONE);
                     binding.addfabroutIcon.setVisibility(View.VISIBLE);
                 }
-                dowloadAndShare(ADDFAV);
+                downloadAndShareApi(ADDFAV);
             }
         });
         binding.addfabroutIcon.setOnClickListener(new View.OnClickListener() {
@@ -228,12 +212,13 @@
                     binding.fabroutIcon.setVisibility(View.VISIBLE);
                 }
 
-                removeFavourit(REMOVEFAV);
+                removeFromFavourite(REMOVEFAV);
             }
         });
         binding.downloadIcon.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
+
                 alertDialogBuilder = new AlertDialog.Builder(act);
                 alertDialogBuilder.setTitle("Save image");
                 alertDialogBuilder.setMessage("You sure to save your image?");
@@ -241,10 +226,22 @@
                         new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface arg0, int arg1) {
+
                                 requestAgain();
-                                Log.e("CSelectedImg",gson.toJson(selectedModelFromView.getFrame1()));
-                                new DownloadImageTask(selectedModelFromView.getFrame1()).execute(selectedModelFromView.getFrame1());
-                                dowloadAndShare(DOWLOAD);
+
+                                if (isUsingCustomFrame){
+                                    //custom frame
+
+
+                                }else {
+                                    //using png from
+
+
+                                    new DownloadImageTask(selectedModelFromView.getFrame1()).execute(selectedModelFromView.getFrame1());
+                                }
+
+                                downloadAndShareApi(DOWLOAD);
+
                             }
                         });
                 alertDialogBuilder.setNegativeButton("No", new DialogInterface.OnClickListener() {
@@ -263,10 +260,8 @@
             @Override
             public void onClick(View v) {
                 requestAgain();
-                Log.e("CSelectedImg",gson.toJson(selectedModelFromView.getFrame1()));
                 new ShareImageTask(selectedModelFromView.getFrame1()).execute(selectedModelFromView.getFrame1());
-                //checkPermisionForDontAskAgain();
-                dowloadAndShare(DOWLOAD);
+                downloadAndShareApi(DOWLOAD);
             }
         });
         binding.logoEmptyState.setVisibility(View.VISIBLE);
@@ -292,27 +287,77 @@
             binding.logoEmptyState.setVisibility(View.VISIBLE);
             binding.logoCustom.setVisibility(View.GONE);
 
-
             binding.logoCustom.setOnClickListener(new View.OnClickListener() {
                 @Override
                 public void onClick(View view) {
                     onSelectImageClick(view);
                 }
             });
-            
-          /*  binding.logoCard.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View view) {
-                    onSelectImageClick(view);
-                }
-            });*/
-        }
+
+
+        }
+        getImageDownloadRights();
+
+    }
+
+    private void getImageDownloadRights() {
+        Utility.Log("API : ", APIs.CUSTOM_FRAME_ACCESS);
+        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.CUSTOM_FRAME_ACCESS, new Response.Listener<String>() {
+            @Override
+            public void onResponse(String response) {
+                Utility.Log("Access-Rights-Response:", response);
+                JSONObject respJson = ResponseHandler.createJsonObject(response);
+                if (ResponseHandler.getBool(respJson, "status")) {
+                    JSONArray dataJson = ResponseHandler.getJSONArray(respJson, "data");
+                    try {
+                        String frameCount = ResponseHandler.getString(dataJson.getJSONObject(0), "frame_counter").equals("") ? "0" : ResponseHandler.getString(dataJson.getJSONObject(0), "frame_counter");
+                        FrameCountForDownload = Integer.parseInt(frameCount);
+
+                    } catch (JSONException e) {
+                        e.printStackTrace();
+                    }
+                    canDownload = true;
+                } else {
+                    canDownload = false;
+                }
 
+            }
+        },
+                new Response.ErrorListener() {
+                    @Override
+                    public void onErrorResponse(VolleyError error) {
+                        error.printStackTrace();
+//                        String body;
+//                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);
+//                        Log.e("Load-Get_Exam ", body);
 
-//         RelativeLayout.LayoutParams mRparams = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
-//        binding.logoEmptyState.setLayoutParams(mRparams);
-//        binding.logoEmptyState.setOnTouchListener((View.OnTouchListener) act);
-//        mRlayout.addView( binding.logoCard);
+                    }
+                }
+        ) {
+            /**
+             * Passing some request headers*
+             */
+            @Override
+            public Map<String, String> getHeaders() throws AuthFailureError {
+                Map<String, String> params = new HashMap<String, String>();
+                params.put("Accept", "application/x-www-form-urlencoded");//application/json
+                params.put("Content-Type", "application/x-www-form-urlencoded");
+                params.put("Authorization", "Bearer" + preafManager.getUserToken());
+                return params;
+            }
+
+            @Override
+            protected Map<String, String> getParams() {
+                Map<String, String> params = new HashMap<>();
+                params.put("brand_id", preafManager.getActiveBrand().getId());
+                Utility.Log("Params", params.toString());
+                return params;
+            }
+
+        };
+
+        RequestQueue queue = Volley.newRequestQueue(act);
+        queue.add(stringRequest);
     }
 
 
@@ -322,7 +367,9 @@
                     Uri.fromParts("package", act.getPackageName(), null)));
         }
     }
+
     private int IntroCounter = 0;
+
     public void startIntro(View view, String title, String desc) {
 
         new GuideView.Builder(this)
@@ -538,9 +585,6 @@
 
             if (AddFavorite!=null) {
                 for (int i = 0; i < AddFavorite.size(); i++) {
-                    Log.e("Fav--",new Gson().toJson(AddFavorite.get(i)));
-                    Log.e("Print--",new Gson().toJson(selectedModelFromView));
-
                     if (AddFavorite.get(i).getId().equals(selectedObject.getId()) && AddFavorite.get(i).getFrameId().equalsIgnoreCase(selectedModelFromView.getFrameId())) {
                         binding.addfabroutIcon.setVisibility(View.VISIBLE);
                         binding.fabroutIcon.setVisibility(View.GONE);
@@ -564,10 +608,6 @@
 
         if (AddFavorite!=null) {
             for (int i = 0; i < AddFavorite.size(); i++) {
-
-                Log.e("Print-",AddFavorite.get(i).getFrameId()+"s");
-                Log.e("Print--",selectedModelFromView.getFrameId()+"s");
-
                 if (!AddFavorite.get(i).getId().equals(selectedObject.getId()) || !AddFavorite.get(i).getFrameId().equalsIgnoreCase(selectedModelFromView.getFrameId())) {
                     binding.addfabroutIcon.setVisibility(View.GONE);
                     binding.fabroutIcon.setVisibility(View.VISIBLE);
@@ -590,7 +630,6 @@
     }
     BitmapDrawable FrameDrawbable;
     public void startSave() {
-        //Bitmap FrameDrawbable = drawableFromUrl(selectedModelFromView.getFrame1());
         Drawable d = FrameDrawbable;
         Drawable ImageDrawable = (BitmapDrawable) binding.backgrounImageDuplicate.getDrawable();
         Bitmap merged = Bitmap.createBitmap(1000, 1000, Bitmap.Config.ARGB_8888);
@@ -613,7 +652,7 @@
         new_file = new File(file_name);
         try {
             fileOutputStream = new FileOutputStream(new_file);
-            Bitmap bitmap = merged;//viewToBitmap(binding.allSetImage,binding.allSetImage.getWidth(),binding.recoImage.getHeight());
+            Bitmap bitmap = merged;
             bitmap.compress(Bitmap.CompressFormat.JPEG, 100, fileOutputStream);
 
             fileOutputStream.flush();
@@ -628,7 +667,6 @@
         refreshgallery(new_file);
     }
     public void startsShare() {
-        //Bitmap FrameDrawbable = drawableFromUrl(selectedModelFromView.getFrame1());
         Drawable d = FrameDrawbable;
         Drawable ImageDrawable = (BitmapDrawable) binding.backgrounImageDuplicate.getDrawable();
         Bitmap merged = Bitmap.createBitmap(1000, 1000, Bitmap.Config.ARGB_8888);
@@ -664,19 +702,23 @@
         }
         refreshgallery(new_file);
     }
-    //For RefresGalary........................
+
+    //For RefresGalary
     public void refreshgallery(File file) {
         Intent intent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);
         intent.setData(Uri.fromFile(file));
         sendBroadcast(intent);
     }
+
     //For CreatFileeDisc For Download Image.........................
     private File getDisc() {
         File file = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM);
-        return new File(file, "Image Demo");
+        return new File(file, "BrandMania");
     }
-    //For SetAddaptor.................................
-    public void setAdapter(){
+
+
+    //For adepter
+    public void setAdapter() {
         ImageCategoryAddaptor menuAddaptor = new ImageCategoryAddaptor(menuModels, act);
         menuAddaptor.setLayoutType(FROM_VIEWALL);
         RecyclerView.LayoutManager mLayoutManager = new GridLayoutManager(this, 4);
@@ -688,24 +730,19 @@
             binding.simpleProgressBar.setVisibility(View.GONE);
             selectedObject = menuModels.get(0);
             LoadDataToUI();
-        }
-        else
-        {
+        } else {
             binding.simpleProgressBar.setVisibility(View.VISIBLE);
         }
+    }
 
 
-    }
-    //For GetImageCategory..............................
+    //For GetImageCategory
     private void getImageCtegory() {
-      //  binding.swipeContainer.setRefreshing(true);
         Utility.Log("API : ", APIs.GET_IMAGEBUID_CATEGORY);
         StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_IMAGEBUID_CATEGORY + "/1", new Response.Listener<String>() {
             @Override
             public void onResponse(String response) {
-             //   binding.swipeContainer.setRefreshing(false);
                 Utility.Log("GET_IMAGE_CATEGORY : ", response);
-
                 try {
                     JSONObject jsonObject = new JSONObject(response);
 
@@ -733,7 +770,6 @@
                 new Response.ErrorListener() {
                     @Override
                     public void onErrorResponse(VolleyError error) {
-                      //  binding.swipeContainer.setRefreshing(false);
                         error.printStackTrace();
 //                        String body;
 //                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);
@@ -758,12 +794,10 @@
             @Override
             protected Map<String, String> getParams() {
                 Map<String, String> params = new HashMap<>();
-
                 if (imageList != null)
                     params.put("image_category_id", imageList.getId());
                 else
                     params.put("image_category_id", selectedObject.getId());
-
                 Utility.Log("POSTED-PARAMS-", params.toString());
                 return params;
             }
@@ -773,20 +807,15 @@
         RequestQueue queue = Volley.newRequestQueue(act);
         queue.add(stringRequest);
     }
-    //For Download,Share and Faviorit Api...............
-    private void dowloadAndShare(final int download) {
+
+    //For Download,Share and Fav
+    private void downloadAndShareApi(final int download) {
 
         Utility.Log("API : ", APIs.DOWNLOAD_SHARE);
         StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.DOWNLOAD_SHARE, new Response.Listener<String>() {
             @Override
             public void onResponse(String response) {
                 Utility.Log("DOWNLOAD_SHARE : ", response);
-                try {
-                    JSONObject jsonObject = new JSONObject(response);
-                } catch (JSONException e) {
-                    e.printStackTrace();
-                }
-
             }
         },
                 new Response.ErrorListener() {
@@ -835,30 +864,26 @@
         RequestQueue queue = Volley.newRequestQueue(act);
         queue.add(stringRequest);
     }
-    //For ImageSelectInterface.......................
-    @Override public void ImageCateonItemSelection(int position, ImageList listModel) {
 
-        if (selectedObject!=null) {
+    //For Image Select Interface
+    @Override
+    public void ImageCateonItemSelection(int position, ImageList listModel) {
+        if (selectedObject != null) {
             binding.simpleProgressBar.setVisibility(View.GONE);
             selectedObject = listModel;
             LoadDataToUI();
-        }
-        else
-        {
+        } else {
             binding.simpleProgressBar.setVisibility(View.VISIBLE);
         }
     }
-    // For Frmae Loade ..................................
+
+    // For Frame Load View Pager
     public void frameViewPager() {
         viewPager = (ViewPager) findViewById(R.id.recoframe);
         sliderDotspanel = (LinearLayout) findViewById(R.id.SliderDots);
-
-        viewPagerItems =brandListItems;// preafManager.getActiveBrand().getFrame();
-        Log.e("Frames",gson.toJson(preafManager.getActiveBrand().getFrame()));
-        if (viewPagerItems!=null && viewPagerItems.size()!=0) {
-            Log.e("BrandListSize", String.valueOf(viewPagerItems.size()) + "kkl");
+        viewPagerItems = brandListItems;
+        if (viewPagerItems != null && viewPagerItems.size() != 0) {
             Gson gson = new Gson();
-            Log.e("Viewwwjhfjkdhsjk", gson.toJson(viewPagerItems));
             ViewPagerAdapterFrame viewPagerAdapter = new ViewPagerAdapterFrame(viewPagerItems, this);
             viewPager.setAdapter(viewPagerAdapter);
             dotscount = viewPagerAdapter.getCount();
@@ -866,14 +891,10 @@
             if (dotscount > 0) {
                 dots = new ImageView[dotscount];
                 for (int i = 0; i < dotscount; i++) {
-
                     dots[i] = new ImageView(this);
                     dots[i].setImageDrawable(ContextCompat.getDrawable(getApplicationContext(), R.drawable.non_active_dot));
-
                     LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT);
-
                     params.setMargins(8, 0, 8, 0);
-
                     sliderDotspanel.addView(dots[i], params);
                 }
                 dots[0].setImageDrawable(ContextCompat.getDrawable(getApplicationContext(), R.drawable.active_dot));
@@ -882,7 +903,6 @@
                 @Override
                 public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
 
-
                 }
 
                 @Override
@@ -898,7 +918,6 @@
                         e.printStackTrace();
                     }
                     reloadSaved();
-                    //drawable = drawableFromUrl(selectedModelFromView.getFrame1());
                     dots[position].setImageDrawable(ContextCompat.getDrawable(getApplicationContext(), R.drawable.active_dot));
                 }
 
@@ -913,13 +932,11 @@
                 e.printStackTrace();
             }
         }
-        else{
-            // showAlertDialogButtonClicked();
-        }
 
         LoadDataToUI();
 
     }
+
     public void AlertBoxForSaveFrame() {
         alertDialogBuilder = new AlertDialog.Builder(act);
         alertDialogBuilder.setTitle("Save Frame");
@@ -928,6 +945,7 @@
                 new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface arg0, int arg1) {
+
                         /*binding.customFrameRelative.setVisibility(View.GONE);
                         binding.FrameImageDuplicate.setVisibility(View.GONE);
                         if (binding.customeContactEdit1.getText().toString().length()==0)
@@ -959,6 +977,7 @@
 
 
     }
+
     //For GetFrame
     @Override public void alertListenerClick() {
         requestAgain();
@@ -969,6 +988,7 @@
                         Manifest.permission.READ_EXTERNAL_STORAGE},
                 CodeReUse.ASK_PERMISSSION);
     }
+
     private void getFrame() {
         Utility.Log("API : ", APIs.GET_FRAME);
         StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_FRAME,new Response.Listener<String>() {
@@ -983,7 +1003,7 @@
                     JSONObject datajsonobjecttt =ResponseHandler.getJSONObject(jsonObject, "data");
                     is_frame= datajsonobjecttt.getString("is_frame");
                     if (is_frame.equals("1")) {
-                      //  binding.customFrameRelative.setVisibility(View.GONE);
+                        //binding.customFrameRelative.setVisibility(View.GONE);
                         // Toast.makeText(act,brandListItems.size()+"",Toast.LENGTH_LONG).show();
                         frameViewPager();
                         is_payment_pending= datajsonobjecttt.getString("is_payment_pending");
@@ -1026,18 +1046,13 @@
                                     Utility.showAlertForPayment(act,ResponseHandler.getString(datajsonobjecttt,"payment_message"));
                                 }
                             });
-                            binding.downloadIcon.setOnClickListener(new View.OnClickListener() {
+                         /*   binding.downloadIcon.setOnClickListener(new View.OnClickListener() {
                                 @Override
                                 public void onClick(View view) {
                                     Utility.showAlertForPayment(act,ResponseHandler.getString(datajsonobjecttt,"payment_message"));
                                 }
-                            });
+                            });*/
                         }
-                        else
-                        {
-                            // Toast.makeText(act,"TTTTTTTT",Toast.LENGTH_LONG).show();
-                        }
-
                     }
                     else
                     {
@@ -1055,12 +1070,12 @@
                             public void onClick(View view) {
                                 AlertBoxForSaveFrame();                            }
                         });
-                        binding.downloadIcon.setOnClickListener(new View.OnClickListener() {
+                       /* binding.downloadIcon.setOnClickListener(new View.OnClickListener() {
                             @Override
                             public void onClick(View view) {
                                 AlertBoxForSaveFrame();
                             }
-                        });
+                        });*/
                     }
 
                     bottomFramgment();
@@ -1099,7 +1114,7 @@
             @Override
             protected Map<String, String> getParams() {
                 Map<String, String> params = new HashMap<>();
-                params.put("brand_id",preafManager.getActiveBrand().getId());
+                params.put("brand_id", preafManager.getActiveBrand().getId());
                 Utility.Log("POSTED-PARAMS-", params.toString());
                 return params;
             }
@@ -1109,18 +1124,25 @@
         RequestQueue queue = Volley.newRequestQueue(act);
         queue.add(stringRequest);
     }
-    @Override public void onBackPressed() {CodeReUse.activityBackPress(act); }
+
+    @Override
+    public void onBackPressed() {
+        CodeReUse.activityBackPress(act);
+    }
+
     @Override
     public void onDialogDismissed(int dialogId) {
+    }
 
-    }
+
     private class DownloadImageTask extends AsyncTask<String, Void, BitmapDrawable> {
         String url;
+
         public DownloadImageTask(String url) {
             this.url = url;
         }
         protected BitmapDrawable doInBackground(String... urls) {
-            String urldisplay = urls[0];
+
             Bitmap mIcon11 = null;
             try {
                 Log.e("ErrorImage", url);
@@ -1133,11 +1155,15 @@
             return new BitmapDrawable(getResources(), mIcon11);
         }
         protected void onPostExecute(BitmapDrawable result) {
-            //bmImage.setImageBitmap(result);
             FrameDrawbable=result;
             startSave();
+            Utility.dismissLoadingTran();
+        }
 
-
+        @Override
+        protected void onPreExecute() {
+            super.onPreExecute();
+            Utility.showLoadingTran(act);
         }
     }
     class ShareImageTask extends AsyncTask<String, Void, BitmapDrawable> {
@@ -1176,7 +1202,8 @@
             super.onPreExecute();
         }
     }
-    private void removeFavourit(final int removeFav) {
+
+    private void removeFromFavourite(final int removeFav) {
 
         Utility.Log("API : ", APIs.REMOVE_FAVOURIT);
         StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.REMOVE_FAVOURIT, new Response.Listener<String>() {
@@ -1433,7 +1460,6 @@
 
 
 
-
     //show dialog for upgrading package for using all 6 frames
     public DialogUpgradeLayoutBinding upgradeLayoutBinding;
     private void triggerUpgradePackage() {
@@ -1456,6 +1482,8 @@
         alertDialog.show();
 
     }
+
+    //for logo drag and click event handle
     GestureDetector gestureDetector;
     private View.OnTouchListener onTouchListener() {
         return new View.OnTouchListener() {
@@ -1507,10 +1535,14 @@
 
 
     //version 3 ======================================
+
+    //fire on footer select listener
     @Override public void onFooterSelectEvent(int layoutType) {
         addDynamicFooter(layoutType);
+        isUsingCustomFrame=true;
     }
-    boolean isFirstFooterSelect=true;
+
+    //for adding footer dynamically
     int footerLayout=1;
     private LayoutForLoadOneBinding oneBinding;
     private LayoutForLoadTwoBinding twoBinding;
@@ -1521,13 +1553,6 @@
     private void addDynamicFooter(int layoutType) {
         binding.elementFooter.removeAllViews();
         footerLayout=layoutType;
-
-
-
-
-     /*   LayoutInflater inflater = (LayoutInflater) getSystemService(Context.LAYOUT_INFLATER_SERVICE);
-        View footerView = null;*/
-
         if (layoutType== FooterModel.LAYOUT_FRAME_ONE) {
             oneBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_one, null, false);
             binding.elementFooter.addView(oneBinding.getRoot());
@@ -1552,46 +1577,15 @@
             sixBinding = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.layout_for_load_six, null, false);
             binding.elementFooter.addView(sixBinding.getRoot());
         }
-
-
-
-
+    }
 
-    }
     @Override public void onColorItemChange(int colorCode) {
-
-        if (editorFragment==2) {
-            if (footerLayout==1){
-                ChangeTextColorForFrameOne(colorCode);
-            }else if (footerLayout==2){
-                ChangeTextColorForFrameTwo(colorCode);
-            }else if (footerLayout==3){
-                ChangeTextColorForFrameThree(colorCode);
-            }else if (footerLayout==4){
-                ChangeTextColorForFrameFour(colorCode);
-            }else if (footerLayout==5){
-                ChangeTextColorForFrameFive(colorCode);
-            }else if (footerLayout==6){
-                ChangeTextColorForFrameSix(colorCode);
-            }
-        }
-        if (editorFragment==1){
-
-            if (footerLayout==1){
-                ChangeBackgroundColorForFrameOne(colorCode);
-            }else if (footerLayout==2){
-                ChangeBackgroundColorForFrameTwo(colorCode);
-            }else if (footerLayout==3){
+    }
+    @Override public void onColorSelected(int dialogId, int colorCode) {
 
-            }else if (footerLayout==4){
-                ChangeBackgroundColorForFrameFour(colorCode);
-            }else if (footerLayout==5){
-                ChangeBackgroundColorForFrameFive(colorCode);
-            }else if (footerLayout==6){
-                ChangeBackgroundColorForFrameSix(colorCode);
-            }
-        }
     }
+
+    //for Text Color change
     @Override public void onColorChanged(int colorCode) {
         if (editorFragment==2) {
             if (footerLayout==1){
@@ -1608,76 +1602,12 @@
                 ChangeTextColorForFrameSix(colorCode);
             }
         }
-        if (editorFragment==1){
-
-            if (footerLayout==1){
-                ChangeBackgroundColorForFrameOne(colorCode);
-            }else if (footerLayout==2){
-                ChangeBackgroundColorForFrameTwo(colorCode);
-            }else if (footerLayout==3){
-
-            }else if (footerLayout==4){
-                ChangeBackgroundColorForFrameFour(colorCode);
-            }else if (footerLayout==5){
-                ChangeBackgroundColorForFrameFive(colorCode);
-            }else if (footerLayout==6){
-                ChangeBackgroundColorForFrameSix(colorCode);
-            }
-        }
 
     }
-    @Override public void onColorSelected(int dialogId, int colorCode) {
-        if (editorFragment==2) {
-            if (footerLayout==1){
-                ChangeTextColorForFrameOne(colorCode);
-            }else if (footerLayout==2){
-                ChangeTextColorForFrameTwo(colorCode);
-            }else if (footerLayout==3){
-                ChangeTextColorForFrameThree(colorCode);
-            }else if (footerLayout==4){
-                ChangeTextColorForFrameFour(colorCode);
-            }else if (footerLayout==5){
-                ChangeTextColorForFrameFive(colorCode);
-            }else if (footerLayout==6){
-                ChangeTextColorForFrameSix(colorCode);
-            }
-        }
-        if (editorFragment==1){
 
-            if (footerLayout==1){
-                ChangeBackgroundColorForFrameOne(colorCode);
-            }else if (footerLayout==2){
-                ChangeBackgroundColorForFrameTwo(colorCode);
-            }else if (footerLayout==3){
-
-            }else if (footerLayout==4){
-                ChangeBackgroundColorForFrameFour(colorCode);
-            }else if (footerLayout==5){
-                ChangeBackgroundColorForFrameFive(colorCode);
-            }else if (footerLayout==6){
-                ChangeBackgroundColorForFrameSix(colorCode);
-            }
-        }
-
-    }
+    //for background color change
     @Override public void onChooseColor(int colorCode) {
-        if (editorFragment==2) {
-            if (footerLayout==1){
-                ChangeTextColorForFrameOne(colorCode);
-            }else if (footerLayout==2){
-                ChangeTextColorForFrameTwo(colorCode);
-            }else if (footerLayout==3){
-                ChangeTextColorForFrameThree(colorCode);
-            }else if (footerLayout==4){
-                ChangeTextColorForFrameFour(colorCode);
-            }else if (footerLayout==5){
-                ChangeTextColorForFrameFive(colorCode);
-            }else if (footerLayout==6){
-                ChangeTextColorForFrameSix(colorCode);
-            }
-        }
         if (editorFragment==1){
-
             if (footerLayout==1){
                 ChangeBackgroundColorForFrameOne(colorCode);
             }else if (footerLayout==2){
@@ -1694,10 +1624,9 @@
         }
 
     }
+
+    //for font change
     @Override public void onFontChangeListenert(String Font) {
-
-
-
             if (footerLayout==1){
                 Typeface custom_font = Typeface.createFromAsset(act.getAssets(), Font);
                 oneBinding.gmailText.setTypeface(custom_font);
@@ -1731,105 +1660,82 @@
                 sixBinding.textElement1.setTypeface(custom_font);
 
             }
-
+    }
 
-//        if (selectedForEdit!=null) {
-//            selectedForEdit.setTypeface(custom_font);
-//        }
-    }
+    //for underline
     @Override public void onUnderLineItalic(boolean Left) {
         if (Left) {
-            // Toast.makeText(act,"true",Toast.LENGTH_SHORT).show();
-            //  binding.customAddressEdit.setPaintFlags( binding.customAddressEdit.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-
-            if (footerLayout==1){
+            if (footerLayout==1) {
+                Utility.setUnderlineText(oneBinding.gmailText, true);
+                Utility.setUnderlineText(oneBinding.contactText, true);
+                Utility.setUnderlineText(oneBinding.locationText, true);
 
-                oneBinding.gmailText.setPaintFlags(oneBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                oneBinding.contactText.setPaintFlags(oneBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                oneBinding.locationText.setPaintFlags(oneBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-            }else if (footerLayout==2){
+
+            }else if (footerLayout==2) {
+                Utility.setUnderlineText(twoBinding.gmailText, true);
+                Utility.setUnderlineText(twoBinding.contactText, true);
+                Utility.setUnderlineText(twoBinding.locationText, true);
+                Utility.setUnderlineText(twoBinding.websiteText, true);
 
-                twoBinding.gmailText.setPaintFlags( twoBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                twoBinding.contactText.setPaintFlags(twoBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                twoBinding.locationText.setPaintFlags(twoBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                twoBinding.websiteText.setPaintFlags( twoBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-            }else if (footerLayout==3){
+            }else if (footerLayout==3) {
+                Utility.setUnderlineText(threeBinding.gmailText, true);
+                Utility.setUnderlineText(threeBinding.contactText, true);
+                Utility.setUnderlineText(threeBinding.locationText, true);
+                Utility.setUnderlineText(threeBinding.websiteText, true);
 
-                threeBinding.gmailText.setPaintFlags(threeBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                threeBinding.contactText.setPaintFlags(threeBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                threeBinding.locationText.setPaintFlags(threeBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                threeBinding.websiteText.setPaintFlags(threeBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-            }else if (footerLayout==4){
+
+            }else if (footerLayout==4) {
 
-                fourBinding.gmailText.setPaintFlags(fourBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                fourBinding.contactText.setPaintFlags(fourBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                fourBinding.locationText.setPaintFlags(fourBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                fourBinding.websiteText.setPaintFlags(fourBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-            }else if (footerLayout==5){
-
-                fiveBinding.gmailText.setPaintFlags(fiveBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                fiveBinding.contactText.setPaintFlags(fiveBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
-                fiveBinding.websiteText.setPaintFlags(fiveBinding.gmailText.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
+                Utility.setUnderlineText(fourBinding.gmailText, true);
+                Utility.setUnderlineText(fourBinding.contactText, true);
+                Utility.setUnderlineText(fourBinding.locationText, true);
+                Utility.setUnderlineText(fourBinding.websiteText, true);
+            }else if (footerLayout==5) {
+                Utility.setUnderlineText(fiveBinding.gmailText, true);
+                Utility.setUnderlineText(fiveBinding.contactText, true);
+                Utility.setUnderlineText(fiveBinding.websiteText, true);
             }else if (footerLayout==6) {
-
-                sixBinding.textElement1.setPaintFlags(sixBinding.textElement1.getPaintFlags() | Paint.UNDERLINE_TEXT_FLAG);
+                Utility.setUnderlineText(sixBinding.textElement1, true);
 
             }
-
-
-
         }
-        else
-        {
-
-
-            if (footerLayout==1){
-
-                oneBinding.gmailText.setPaintFlags(0);
-                oneBinding.contactText.setPaintFlags(0);
-                oneBinding.locationText.setPaintFlags(0);
-            }else if (footerLayout==2){
-
-                twoBinding.gmailText.setPaintFlags(0);
-                twoBinding.contactText.setPaintFlags(0);
-                twoBinding.locationText.setPaintFlags(0);
-                twoBinding.websiteText.setPaintFlags(0);
-            }else if (footerLayout==3){
-
-                threeBinding.gmailText.setPaintFlags(0);
-                threeBinding.contactText.setPaintFlags(0);
-                threeBinding.locationText.setPaintFlags(0);
-                threeBinding.websiteText.setPaintFlags(0);
-            }else if (footerLayout==4){
-                fourBinding.gmailText.setPaintFlags(0);
-                fourBinding.contactText.setPaintFlags(0);
-                fourBinding.locationText.setPaintFlags(0);
-                fourBinding.websiteText.setPaintFlags(0);
-            }else if (footerLayout==5){
-
-                fiveBinding.gmailText.setPaintFlags(0);
-                fiveBinding.contactText.setPaintFlags(0);
-                fiveBinding.websiteText.setPaintFlags(0);
-            }else if (footerLayout==6) {
+        else {
+            if (footerLayout == 1) {
+                Utility.setUnderlineText(oneBinding.gmailText, false);
+                Utility.setUnderlineText(oneBinding.contactText, false);
+                Utility.setUnderlineText(oneBinding.locationText, false);
+            } else if (footerLayout == 2) {
+                Utility.setUnderlineText(twoBinding.gmailText, false);
+                Utility.setUnderlineText(twoBinding.contactText, false);
+                Utility.setUnderlineText(twoBinding.locationText, false);
+                Utility.setUnderlineText(twoBinding.websiteText, false);
+            } else if (footerLayout == 3) {
+                Utility.setUnderlineText(threeBinding.gmailText, false);
+                Utility.setUnderlineText(threeBinding.contactText, false);
+                Utility.setUnderlineText(threeBinding.locationText, false);
+                Utility.setUnderlineText(threeBinding.websiteText, false);
+            } else if (footerLayout == 4) {
+
+                Utility.setUnderlineText(fourBinding.gmailText, false);
+                Utility.setUnderlineText(fourBinding.contactText, false);
+                Utility.setUnderlineText(fourBinding.locationText, false);
+                Utility.setUnderlineText(fourBinding.websiteText, false);
+            } else if (footerLayout == 5) {
+                Utility.setUnderlineText(fiveBinding.gmailText, false);
+                Utility.setUnderlineText(fiveBinding.contactText, false);
+                Utility.setUnderlineText(fiveBinding.websiteText, false);
+            } else if (footerLayout == 6) {
 
-                sixBinding.textElement1.setPaintFlags(0);
+                Utility.setUnderlineText(sixBinding.textElement1, false);
 
             }
 
-
-
-
-            // Toast.makeText(act,"false",Toast.LENGTH_SHORT).show();
-            //  .setTypeface(null, Typeface.NORMAL);
-//            if (selectedForEdit!=null) {
-//
-//                selectedForEdit.setPaintFlags(0);
-//            }
         }
     }
+
+    //for font size
     @Override public void onfontSize(int textsize) {
         if (footerLayout==1){
-
             oneBinding.gmailText.setTextSize(textsize);
             oneBinding.contactText.setTextSize(textsize);
             oneBinding.locationText.setTextSize(textsize);
@@ -1862,185 +1768,154 @@
 
         }
 
-//        if (selectedForEdit!=null) {
-//            selectedForEdit.setTextSize(textsize);
-//        }
     }
+
+    //for bold text
     @Override public void onBoldTextChange(boolean Bold) {
         if (Bold) {
-            //  Toast.makeText(act,"true",Toast.LENGTH_SHORT).show();
-            if (footerLayout==1){
+            if (footerLayout == 1) {
+                Utility.setBold(oneBinding.gmailText, true);
+                Utility.setBold(oneBinding.contactText, true);
+                Utility.setBold(oneBinding.locationText, true);
 
-                oneBinding.gmailText.setTypeface( oneBinding.gmailText.getTypeface(), Typeface.BOLD);
-                oneBinding.contactText.setTypeface( oneBinding.gmailText.getTypeface(), Typeface.BOLD);
-                oneBinding.locationText.setTypeface( oneBinding.gmailText.getTypeface(), Typeface.BOLD);
-            }else if (footerLayout==2){
+
+            } else if (footerLayout == 2) {
+                Utility.setBold(twoBinding.gmailText, true);
+                Utility.setBold(twoBinding.contactText, true);
+                Utility.setBold(twoBinding.locationText, true);
+                Utility.setBold(twoBinding.websiteText, true);
 
-                twoBinding.gmailText.setTypeface( twoBinding.gmailText.getTypeface(), Typeface.BOLD);
-                twoBinding.contactText.setTypeface( twoBinding.gmailText.getTypeface(), Typeface.BOLD);
-                twoBinding.locationText.setTypeface( twoBinding.gmailText.getTypeface(), Typeface.BOLD);
-                twoBinding.websiteText.setTypeface( twoBinding.gmailText.getTypeface(), Typeface.BOLD);
-            }else if (footerLayout==3){
+            } else if (footerLayout == 3) {
+                Utility.setBold(threeBinding.gmailText, true);
+                Utility.setBold(threeBinding.contactText, true);
+                Utility.setBold(threeBinding.locationText, true);
+                Utility.setBold(threeBinding.websiteText, true);
 
-                threeBinding.gmailText.setTypeface(  threeBinding.gmailText.getTypeface(), Typeface.BOLD);
-                threeBinding.contactText.setTypeface(  threeBinding.gmailText.getTypeface(), Typeface.BOLD);
-                threeBinding.locationText.setTypeface(  threeBinding.gmailText.getTypeface(), Typeface.BOLD);
-                threeBinding.websiteText.setTypeface(  threeBinding.gmailText.getTypeface(), Typeface.BOLD);
-            }else if (footerLayout==4){
+
+            } else if (footerLayout == 4) {
 
-                fourBinding.gmailText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.BOLD);
-                fourBinding.contactText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.BOLD);
-                fourBinding.locationText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.BOLD);
-                fourBinding.websiteText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.BOLD);
-            }else if (footerLayout==5){
-
-                fiveBinding.gmailText.setTypeface(fiveBinding.gmailText.getTypeface(), Typeface.BOLD);
-                fiveBinding.contactText.setTypeface(fiveBinding.gmailText.getTypeface(), Typeface.BOLD);
-                fiveBinding.websiteText.setTypeface(fiveBinding.gmailText.getTypeface(), Typeface.BOLD);
-            }else if (footerLayout==6) {
-
-                sixBinding.textElement1.setTypeface(sixBinding.textElement1.getTypeface(), Typeface.BOLD);
+                Utility.setBold(fourBinding.gmailText, true);
+                Utility.setBold(fourBinding.contactText, true);
+                Utility.setBold(fourBinding.locationText, true);
+                Utility.setBold(fourBinding.websiteText, true);
+            } else if (footerLayout == 5) {
+                Utility.setBold(fiveBinding.gmailText, true);
+                Utility.setBold(fiveBinding.contactText, true);
+                Utility.setBold(fiveBinding.websiteText, true);
+            } else if (footerLayout == 6) {
+                Utility.setBold(sixBinding.textElement1, true);
 
             }
-
-
-
-
-//            if (selectedForEdit!=null) {
-//                selectedForEdit.setTypeface(selectedForEdit.getTypeface(), Typeface.BOLD);
-//            }
 
         }else {
-            //Toast.makeText(act,"false",Toast.LENGTH_SHORT).show();
-
-            if (footerLayout==1){
-
-                oneBinding.gmailText.setTypeface(null, Typeface.NORMAL);
-                oneBinding.contactText.setTypeface(null, Typeface.NORMAL);
-                oneBinding.locationText.setTypeface(null, Typeface.NORMAL);
-            }else if (footerLayout==2){
-
-                twoBinding.gmailText.setTypeface(null, Typeface.NORMAL);
-                twoBinding.contactText.setTypeface(null, Typeface.NORMAL);
-                twoBinding.locationText.setTypeface(null, Typeface.NORMAL);
-                twoBinding.websiteText.setTypeface(null, Typeface.NORMAL);
-            }else if (footerLayout==3){
-
-                threeBinding.gmailText.setTypeface(null, Typeface.NORMAL);
-                threeBinding.contactText.setTypeface(null, Typeface.NORMAL);
-                threeBinding.locationText.setTypeface(null, Typeface.NORMAL);
-                threeBinding.websiteText.setTypeface(null, Typeface.NORMAL);
-            }else if (footerLayout==4){
+            if (footerLayout == 1) {
+                Utility.setBold(oneBinding.gmailText, false);
+                Utility.setBold(oneBinding.contactText, false);
+                Utility.setBold(oneBinding.locationText, false);
+            } else if (footerLayout == 2) {
+                Utility.setBold(twoBinding.gmailText, false);
+                Utility.setBold(twoBinding.contactText, false);
+                Utility.setBold(twoBinding.locationText, false);
+                Utility.setBold(twoBinding.websiteText, false);
+            } else if (footerLayout == 3) {
+                Utility.setBold(threeBinding.gmailText, false);
+                Utility.setBold(threeBinding.contactText, false);
+                Utility.setBold(threeBinding.locationText, false);
+                Utility.setBold(threeBinding.websiteText, false);
+            } else if (footerLayout == 4) {
 
-                fourBinding.gmailText.setTypeface(null, Typeface.NORMAL);
-                fourBinding.contactText.setTypeface(null, Typeface.NORMAL);
-                fourBinding.locationText.setTypeface(null, Typeface.NORMAL);
-                fourBinding.websiteText.setTypeface(null, Typeface.NORMAL);
-            }else if (footerLayout==5){
-
-                fiveBinding.gmailText.setTypeface(null, Typeface.NORMAL);
-                fiveBinding.contactText.setTypeface(null, Typeface.NORMAL);
-                fiveBinding.websiteText.setTypeface(null, Typeface.NORMAL);
-            }else if (footerLayout==6) {
+                Utility.setBold(fourBinding.gmailText, false);
+                Utility.setBold(fourBinding.contactText, false);
+                Utility.setBold(fourBinding.locationText, false);
+                Utility.setBold(fourBinding.websiteText, false);
+            } else if (footerLayout == 5) {
+                Utility.setBold(fiveBinding.gmailText, false);
+                Utility.setBold(fiveBinding.contactText, false);
+                Utility.setBold(fiveBinding.websiteText, false);
+            } else if (footerLayout == 6) {
 
-                sixBinding.textElement1.setTypeface(null, Typeface.NORMAL);
+                Utility.setBold(sixBinding.textElement1, false);
 
             }
 
-
+        }
 
-//            if (selectedForEdit!=null) {
-//                selectedForEdit.setTypeface(null, Typeface.NORMAL);
-//            }
-        }
+    }
 
-    }
+    //for italic
     @Override public void onItalicTextChange(boolean Italic) {
         if (Italic) {
 
-            if (footerLayout==1){
+            if (footerLayout == 1) {
+                Utility.setItalicText(oneBinding.gmailText, true);
+                Utility.setItalicText(oneBinding.contactText, true);
+                Utility.setItalicText(oneBinding.locationText, true);
 
-                oneBinding.gmailText.setTypeface(oneBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                oneBinding.contactText.setTypeface(oneBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                oneBinding.locationText.setTypeface(oneBinding.gmailText.getTypeface(), Typeface.ITALIC);
-            }else if (footerLayout==2){
+            } else if (footerLayout == 2) {
 
-                twoBinding.gmailText.setTypeface(twoBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                twoBinding.contactText.setTypeface(twoBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                twoBinding.locationText.setTypeface(twoBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                twoBinding.websiteText.setTypeface(twoBinding.gmailText.getTypeface(), Typeface.ITALIC);
-            }else if (footerLayout==3){
+                Utility.setItalicText(twoBinding.gmailText, true);
+                Utility.setItalicText(twoBinding.contactText, true);
+                Utility.setItalicText(twoBinding.locationText, true);
+                Utility.setItalicText(twoBinding.websiteText, true);
+
+            } else if (footerLayout == 3) {
 
-                threeBinding.gmailText.setTypeface(threeBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                threeBinding.contactText.setTypeface(threeBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                threeBinding.locationText.setTypeface(threeBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                threeBinding.websiteText.setTypeface(threeBinding.gmailText.getTypeface(), Typeface.ITALIC);
-            }else if (footerLayout==4){
-
-                fourBinding.gmailText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                fourBinding.contactText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                fourBinding.locationText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                fourBinding.websiteText.setTypeface(fourBinding.gmailText.getTypeface(), Typeface.ITALIC);
-            }else if (footerLayout==5){
-
-                fiveBinding.gmailText.setTypeface(fiveBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                fiveBinding.contactText.setTypeface(fiveBinding.gmailText.getTypeface(), Typeface.ITALIC);
-                fiveBinding.websiteText.setTypeface(fiveBinding.gmailText.getTypeface(), Typeface.ITALIC);
-            }else if (footerLayout==6) {
-
-                sixBinding.textElement1.setTypeface(sixBinding.textElement1.getTypeface(), Typeface.ITALIC);
-
+                Utility.setItalicText(threeBinding.gmailText, true);
+                Utility.setItalicText(threeBinding.contactText, true);
+                Utility.setItalicText(threeBinding.locationText, true);
+                Utility.setItalicText(threeBinding.websiteText, true);
+
+            } else if (footerLayout == 4) {
+                Utility.setItalicText(fourBinding.gmailText, true);
+                Utility.setItalicText(fourBinding.contactText, true);
+                Utility.setItalicText(fourBinding.locationText, true);
+                Utility.setItalicText(fourBinding.websiteText, true);
+            } else if (footerLayout == 5) {
+                Utility.setItalicText(fiveBinding.gmailText, true);
+                Utility.setItalicText(fiveBinding.contactText, true);
+                Utility.setItalicText(fiveBinding.websiteText, true);
+            } else if (footerLayout == 6) {
+                Utility.setItalicText(sixBinding.textElement1, true);
             }
 
-
-            //   Toast.makeText(act,"true",Toast.LENGTH_SHORT).show();
-//            if (selectedForEdit!=null) {
-//                selectedForEdit.setTypeface(selectedForEdit.getTypeface(), Typeface.ITALIC);
-//            }
-        }else {
-
-            if (footerLayout==1){
-
-                oneBinding.gmailText.setTypeface(null, Typeface.NORMAL);
-                oneBinding.contactText.setTypeface(null, Typeface.NORMAL);
-                oneBinding.locationText.setTypeface(null, Typeface.NORMAL);
-            }else if (footerLayout==2){
-
-                twoBinding.gmailText.setTypeface(null, Typeface.NORMAL);
-                twoBinding.contactText.setTypeface(null, Typeface.NORMAL);
-                twoBinding.locationText.setTypeface(null, Typeface.NORMAL);
-                twoBinding.websiteText.setTypeface(null, Typeface.NORMAL);
-            }else if (footerLayout==3){
-
-                threeBinding.gmailText.setTypeface(null, Typeface.NORMAL);
-                threeBinding.contactText.setTypeface(null, Typeface.NORMAL);
-                threeBinding.locationText.setTypeface(null, Typeface.NORMAL);
-                threeBinding.websiteText.setTypeface(null, Typeface.NORMAL);
-            }else if (footerLayout==4){
+        } else {
+            if (footerLayout == 1) {
+                Utility.setItalicText(oneBinding.gmailText, false);
+                Utility.setItalicText(oneBinding.contactText, false);
+                Utility.setItalicText(oneBinding.locationText, false);
+            } else if (footerLayout == 2) {
+                Utility.setItalicText(twoBinding.gmailText, false);
+                Utility.setItalicText(twoBinding.contactText, false);
+                Utility.setItalicText(twoBinding.locationText, false);
+                Utility.setItalicText(twoBinding.websiteText, false);
+            } else if (footerLayout == 3) {
+                Utility.setItalicText(threeBinding.gmailText, false);
+                Utility.setItalicText(threeBinding.contactText, false);
+                Utility.setItalicText(threeBinding.locationText, false);
+                Utility.setItalicText(threeBinding.websiteText, false);
+            } else if (footerLayout == 4) {
 
-                fourBinding.gmailText.setTypeface(null, Typeface.NORMAL);
-                fourBinding.contactText.setTypeface(null, Typeface.NORMAL);
-                fourBinding.locationText.setTypeface(null, Typeface.NORMAL);
-                fourBinding.websiteText.setTypeface(null, Typeface.NORMAL);
-            }else if (footerLayout==5){
-
-                fiveBinding.gmailText.setTypeface(null, Typeface.NORMAL);
-                fiveBinding.contactText.setTypeface(null, Typeface.NORMAL);
-                fiveBinding.websiteText.setTypeface(null, Typeface.NORMAL);
-            }else if (footerLayout==6) {
+                Utility.setItalicText(fourBinding.gmailText, false);
+                Utility.setItalicText(fourBinding.contactText, false);
+                Utility.setItalicText(fourBinding.locationText, false);
+                Utility.setItalicText(fourBinding.websiteText, false);
+            } else if (footerLayout == 5) {
+                Utility.setItalicText(fiveBinding.gmailText, false);
+                Utility.setItalicText(fiveBinding.contactText, false);
+                Utility.setItalicText(fiveBinding.websiteText, false);
+            } else if (footerLayout == 6) {
 
-                sixBinding.textElement1.setTypeface(null, Typeface.NORMAL);
+                Utility.setItalicText(sixBinding.textElement1, false);
 
             }
 
 
-//            if (selectedForEdit!=null) {
-//
-//                //   Toast.makeText(act, "false", Toast.LENGTH_SHORT).show();
-//                selectedForEdit.setTypeface(null, Typeface.NORMAL);
-//            }
         }
     }
+
+
+
+
     public void ChangeBackgroundColorForFrameOne(int colorCode){
          oneBinding.topView.setBackgroundColor(colorCode);
          oneBinding.topView2.setBackgroundColor(colorCode);
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"1.8\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision b94e61c8e866103e27969f2bc5a3b7a5ef244fcd)
+++ .idea/gradle.xml	(date 1608880273643)
@@ -15,6 +15,7 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
+        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_12_19_2020_5_30_PM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_12_19_2020_5_30_PM__Default_Changelist_.xml
