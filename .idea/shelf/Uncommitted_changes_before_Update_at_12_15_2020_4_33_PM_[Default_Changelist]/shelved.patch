Index: app/src/main/java/com/app/brandmania/Activity/AddBranddActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.PopupMenu;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Bitmap;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.androidnetworking.AndroidNetworking;\r\nimport com.androidnetworking.common.ANRequest;\r\nimport com.androidnetworking.common.Priority;\r\nimport com.androidnetworking.error.ANError;\r\nimport com.androidnetworking.interfaces.JSONObjectRequestListener;\r\nimport com.androidnetworking.interfaces.UploadProgressListener;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Connection.ItemSelectionInterface;\r\nimport com.app.brandmania.Fragment.bottom.ListBottomFragment;\r\nimport com.app.brandmania.Fragment.bottom.PickerFragment;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.CommonListModel;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\n\r\nimport com.app.brandmania.databinding.ActivityAddBranddBinding;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class AddBranddActivity extends BaseActivity implements ItemSelectionInterface ,alertListenerCallback  , PopupMenu.OnMenuItemClickListener {\r\n    Activity act;\r\n    private ActivityAddBranddBinding binding;\r\n    public static int BRAND_CATEGORY = 0;\r\n    private String BrandTitle;\r\n    CommonListModel commonListModel;\r\n    ArrayList<BrandListItem> multiListItems = new ArrayList<>();\r\n    ArrayList<CommonListModel> BRANDTypeList = new ArrayList<>();\r\n    PreafManager preafManager;\r\n    private boolean isLoading = false;\r\n    private String is_completed = \"\";\r\n    private ListBottomFragment bottomSheetFragment;\r\n    private Bitmap selectedImagesBitmap;\r\n    private boolean isEditModeEnable = false;\r\n    AlertDialog.Builder alertDialogBuilder;\r\n    private ImageView menuOtpion;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_add_brandd);\r\n\r\n        preafManager = new PreafManager(this);\r\n\r\n        preafManager.setIs_Registration(true);\r\n        binding.menuOtpion.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n\r\n            }\r\n        });\r\n        binding.websiteEdt.setText(\"https://\");\r\n        alertDialogBuilder = new AlertDialog.Builder(act);\r\n        String NumberShow = getIntent().getStringExtra(Constant.MOBILE_NUMBER);\r\n        String EmailIdShow = getIntent().getStringExtra(Constant.EMAIL_ID);\r\n        binding.phoneTxt.setText(preafManager.getMobileNumber());\r\n        binding.emailIdEdt.setText(preafManager.getEMAIL_Id());\r\n        menuOtpion=findViewById(R.id.menuOtpion);\r\n        menuOtpion.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                PopupMenu popup = new PopupMenu(AddBranddActivity.this, view);\r\n                popup.setOnMenuItemClickListener(AddBranddActivity.this);\r\n                popup.inflate(R.menu.menu);\r\n                popup.show();\r\n            }\r\n        });\r\n\r\n        //LoginFlow();\r\n        binding.addExpenceBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Validation();\r\n            }\r\n        });\r\n        getBrandCategory(BRAND_CATEGORY);\r\n        CodeReUse.RemoveError(binding.categoryEdt, binding.categoryEdtLayout);\r\n        CodeReUse.RemoveError(binding.nameTxt, binding.nameTxtLayout);\r\n        CodeReUse.RemoveError(binding.phoneTxt, binding.phoneTxtLayout);\r\n        CodeReUse.RemoveError(binding.addressEdt, binding.addressEdtLayout);\r\n        CodeReUse.RemoveError(binding.websiteEdt, binding.websiteEdtLayout);\r\n        CodeReUse.RemoveError(binding.emailIdEdt, binding.emailIdEdtLayout);\r\n        binding.categoryEdt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                showFragmentList(BRAND_CATEGORY, BrandTitle, BRANDTypeList);\r\n            }\r\n        });\r\n        binding.viewImgFirst.setTag(\"0\");\r\n\r\n\r\n        binding.imgCardFirst.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (!isEditModeEnable) {\r\n                    if (binding.viewImgFirst.getTag().toString().equalsIgnoreCase(\"1\"))\r\n                        pickerView(Constant.PICKER_FIRST, true, selectedImagesBitmap);\r\n                    else\r\n                        pickerView(Constant.PICKER_FIRST, false, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void Validation() {\r\n        boolean isError = false;\r\n        boolean isFocus = false;\r\n\r\n        if (binding.categoryEdt.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.categoryEdtLayout.setError(getString(R.string.brandcategory_text));\r\n            binding.categoryEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.categoryEdt.requestFocus();\r\n\r\n        }\r\n        if (binding.nameTxt.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.nameTxtLayout.setError(getString(R.string.brandname_text));\r\n            binding.nameTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.nameTxt.requestFocus();\r\n\r\n        }\r\n\r\n\r\n        if (binding.addressEdt.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.addressEdtLayout.setError(getString(R.string.enter_address));\r\n            binding.addressEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.addressEdt.requestFocus();\r\n\r\n        }\r\n\r\n\r\n        if (!binding.emailIdEdt.getText().toString().equals(\"\")) {\r\n            if (!CodeReUse.isEmailValid(binding.emailIdEdt.getText().toString())) {\r\n                isError = true;\r\n                isFocus = true;\r\n                binding.emailIdEdtLayout.setError(getString(R.string.enter_valid_email_address));\r\n                binding.emailIdEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n                binding.emailIdEdt.requestFocus();\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (!binding.phoneTxt.getText().toString().equals(\"\")) {\r\n            if (binding.phoneTxt.getText().toString().length() < 10) {\r\n                binding.phoneTxtLayout.setError(getString(R.string.validphoneno_txt));\r\n                binding.phoneTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n                binding.phoneTxt.requestFocus();\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            if (binding.phoneTxt.getText().toString().equals(\"\")) {\r\n                binding.phoneTxtLayout.setError(getString(R.string.entermobileno_text));\r\n                binding.phoneTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n                binding.phoneTxt.requestFocus();\r\n                return;\r\n            }\r\n\r\n        }\r\n        if (!isError) {\r\n            Bitmap bitmap = null;\r\n            if (selectedImagesBitmap != null) {\r\n                bitmap = selectedImagesBitmap;\r\n            }\r\n            Bitmap bitmap1 = null;\r\n            if (selectedImagesBitmap != null) {\r\n                bitmap1 = selectedImagesBitmap;\r\n            }\r\n            addBrand(bitmap, bitmap1);\r\n        }\r\n\r\n    }\r\n\r\n    public void showFragmentList(int callingFlag, String title, ArrayList<CommonListModel> datalist) {\r\n        bottomSheetFragment = new ListBottomFragment();\r\n        Log.e(\"Size---\", String.valueOf(datalist.size()));\r\n        bottomSheetFragment.setListData(callingFlag, title, datalist);\r\n        if (bottomSheetFragment.isVisible()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        if (bottomSheetFragment.isAdded()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        bottomSheetFragment.show(getSupportFragmentManager(), bottomSheetFragment.getTag());\r\n    }\r\n\r\n    private void addBrand(Bitmap img, Bitmap img1) {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Log.e(\"API\", APIs.ADD_BRAND);\r\n        Log.e(\"API\", preafManager.getUserToken());\r\n        File img1File = null;\r\n        if (img != null) {\r\n            img1File = CodeReUse.createFileFromBitmap(act, \"photo.jpeg\", img);\r\n        }\r\n        File img1File1 = null;\r\n        if (img1 != null) {\r\n            img1File1 = CodeReUse.createFileFromBitmap(act, \"photo.jpeg\", img1);\r\n        }\r\n\r\n        ANRequest.MultiPartBuilder request = AndroidNetworking.upload(APIs.ADD_BRAND)\r\n                .addHeaders(\"Accept\", \"application/json\")\r\n                .addHeaders(\"Content-Type\", \"application/json\")\r\n                .addHeaders(\"Authorization\", \"Bearer\" + preafManager.getUserToken())\r\n                .addMultipartParameter(\"br_category\", commonListModel.getId())\r\n                .addMultipartParameter(\"br_name\", binding.nameTxt.getText().toString())\r\n                .addMultipartParameter(\"br_phone\", binding.phoneTxt.getText().toString())\r\n                .addMultipartParameter(\"br_address\", binding.addressEdt.getText().toString())\r\n                .addMultipartParameter(\"br_website\", binding.websiteEdt.getText().toString())\r\n                .addMultipartParameter(\"br_email\", binding.emailIdEdt.getText().toString())\r\n                .setTag(\"Add User\")\r\n                .setPriority(Priority.HIGH);\r\n\r\n        if (img1File != null) {\r\n            request.addMultipartFile(\"br_logo\", img1File);\r\n            Log.e(\"br_logo\", String.valueOf(img1File));\r\n        }\r\n\r\n        if (img1File1 != null) {\r\n            request.addMultipartFile(\"frame\", img1File1);\r\n            Log.e(\"frame\", String.valueOf(img1File1));\r\n        }\r\n\r\n        request.build().setUploadProgressListener(new UploadProgressListener() {\r\n            @Override\r\n            public void onProgress(long bytesUploaded, long totalBytes) {\r\n                // do anything with progress\r\n            }\r\n        })\r\n                .getAsJSONObject(new JSONObjectRequestListener() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        Utility.Log(\"Verify-Response\", response);\r\n                        ArrayList<BrandListItem> brandListItems = new ArrayList<>();\r\n                        try {\r\n\r\n                            if (response.getBoolean(\"status\")) {\r\n                                JSONObject jsonArray = response.getJSONObject(\"data\");\r\n                                is_completed = jsonArray.getString(\"is_completed\");\r\n                                alertDialogBuilder.setMessage(ResponseHandler.getString(response, \"message\"));\r\n                                alertDialogBuilder.setPositiveButton(\"Ok\", new DialogInterface.OnClickListener() {\r\n                                    @Override\r\n                                    public void onClick(DialogInterface arg0, int arg1) {\r\n                                        preafManager.loginStep(is_completed);\r\n                                        if (is_completed.equals(\"2\")) {\r\n                                            getBrandList();\r\n\r\n                                        }\r\n                                    }\r\n                                });\r\n                                AlertDialog alertDialog = alertDialogBuilder.create();\r\n                                alertDialog.setCancelable(false);\r\n                                alertDialog.show();\r\n\r\n\r\n                            }\r\n                        } catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(ANError error) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n\r\n                        if (error.getErrorCode() != 0) {\r\n                            Log.e(\"onError errorCode : \", String.valueOf(error.getErrorCode()));\r\n                            Log.e(\"onError errorBody : \", error.getErrorBody());\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        } else {\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        }\r\n\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void alertListenerClick() {\r\n        requestAgain();\r\n    }\r\n\r\n    private void requestAgain() {\r\n        ActivityCompat.requestPermissions(act,\r\n                new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                        Manifest.permission.READ_EXTERNAL_STORAGE},\r\n                CodeReUse.ASK_PERMISSSION);\r\n    }\r\n\r\n    private void getBrandCategory(int flag) {\r\n        String apiUrl = \"\";\r\n        int requestedMethod = 0;\r\n\r\n        if (flag == BRAND_CATEGORY) {\r\n            apiUrl = APIs.GET_BRAND_CATEGORY;\r\n            requestedMethod = Request.Method.POST;\r\n        }\r\n\r\n        Utility.Log(\"API : \", apiUrl);\r\n\r\n        StringRequest request = new StringRequest(requestedMethod, apiUrl, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n\r\n\r\n                Utility.Log(flag + \"- Response : \", response);\r\n                try {\r\n                    if (ResponseHandler.isSuccess(response, null)) {\r\n                        JSONObject responseJson = ResponseHandler.createJsonObject(response);\r\n                        JSONArray jsonArray = ResponseHandler.getJSONArray(responseJson, \"data\");\r\n                        Log.e(\"jsonArray-\", jsonArray.toString());\r\n                        for (int i = 0; i < jsonArray.length(); i++) {\r\n                            JSONObject itemObj = jsonArray.getJSONObject(i);\r\n                            CommonListModel listModel = new CommonListModel();\r\n                            listModel.setLayoutType(CommonListModel.LAYOUT_BLOCK);\r\n                            listModel.setId(ResponseHandler.getString(itemObj, \"id\"));\r\n                            listModel.setName(ResponseHandler.getString(itemObj, \"biz_cat_name\"));\r\n                            BRANDTypeList.add(listModel);\r\n                        }\r\n                        Log.w(\"Size\", String.valueOf(BRANDTypeList.size()));\r\n                    }\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                error.printStackTrace();\r\n            }\r\n        }) {\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                HashMap<String, String> map = new HashMap<>();\r\n\r\n\r\n                Utility.Log(\"Params : \", map.toString());\r\n                return map;\r\n            }\r\n        };\r\n        RequestQueue queue = Volley.newRequestQueue(this);\r\n        queue.add(request);\r\n\r\n    }\r\n\r\n    private void pickerView(int actionId, boolean viewMode, Bitmap selectedBitmap) {\r\n        PickerFragment pickerFragment = new PickerFragment(act);\r\n        pickerFragment.setEnableViewMode(viewMode);\r\n        pickerFragment.setActionId(actionId);\r\n\r\n        if (viewMode) {\r\n            pickerFragment.setSelectedBitmapForFullView(selectedBitmap);\r\n        }\r\n        PickerFragment.HandlerImageLoad imageLoad = new PickerFragment.HandlerImageLoad() {\r\n            @Override\r\n            public void onGalleryResult(int flag, Bitmap bitmap) {\r\n                if (flag == Constant.PICKER_FIRST) {\r\n                    binding.viewImgFirst.setImageBitmap(bitmap);\r\n                    binding.imgEmptyStateFirst.setVisibility(View.GONE);\r\n                    binding.actionDeleteFirst.setVisibility(View.VISIBLE);\r\n                    selectedImagesBitmap = bitmap;\r\n                    binding.viewImgFirst.setTag(\"1\");\r\n                    if (!isEditModeEnable) {\r\n\r\n                    }\r\n                    binding.viewImgFirst.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n\r\n            }\r\n        };\r\n        pickerFragment.setImageLoad(imageLoad);\r\n        pickerFragment.show(getSupportFragmentManager(), pickerFragment.getTag());\r\n    }\r\n\r\n    private void getBrandList() {\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Log.e(\"addbrandresponce\", response);\r\n                ArrayList<BrandListItem> brandListItems = new ArrayList<>();\r\n                try {\r\n                    JSONObject res = new JSONObject(response);\r\n\r\n                    JSONArray jsonArray1 = res.getJSONArray(\"data\");\r\n                    for (int i = 0; i < jsonArray1.length(); i++) {\r\n                        JSONObject jsonObject = jsonArray1.getJSONObject(i);\r\n                        BrandListItem brandListItemm = new BrandListItem();\r\n                        brandListItemm.setId(ResponseHandler.getString(jsonObject, \"id\"));\r\n                        brandListItemm.setCategoryId(ResponseHandler.getString(jsonObject, \"br_category_id\"));\r\n                        brandListItemm.setCategoryName(ResponseHandler.getString(jsonObject, \"br_category_name\"));\r\n                        brandListItemm.setName(ResponseHandler.getString(jsonObject, \"br_name\"));\r\n                        brandListItemm.setPhonenumber(ResponseHandler.getString(jsonObject, \"br_phone\"));\r\n                        brandListItemm.setWebsite(ResponseHandler.getString(jsonObject, \"br_website\"));\r\n                        brandListItemm.setEmail(ResponseHandler.getString(jsonObject, \"br_email\"));\r\n                        brandListItemm.setAddress(ResponseHandler.getString(jsonObject, \"br_address\"));\r\n                        brandListItemm.setLogo(ResponseHandler.getString(jsonObject, \"br_logo\"));\r\n\r\n                        brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, \"is_frame\"));\r\n                        brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, \"frame_message\"));\r\n                        brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, \"fream_base_url\"));\r\n                        brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, \"is_payment_pending\"));\r\n                        brandListItemm.setPayment_message(ResponseHandler.getString(jsonObject, \"payment_message\"));\r\n                        brandListItemm.setPackagename(ResponseHandler.getString(jsonObject, \"package\"));\r\n                        brandListItemm.setPackagemessage(ResponseHandler.getString(jsonObject, \"package_message\"));\r\n                        brandListItemm.setNo_of_total_image(ResponseHandler.getString(jsonObject, \"no_of_img\"));\r\n                        brandListItemm.setNo_of_used_image(ResponseHandler.getString(jsonObject, \"no_of_used_img\"));\r\n                        brandListItemm.setNo_of_frame(ResponseHandler.getString(jsonObject, \"no_of_frame\"));\r\n                        brandListItemm.setNo_of_remaining(ResponseHandler.getString(jsonObject, \"remaining_img\"));\r\n                        brandListItemm.setExpiery_date(ResponseHandler.getString(jsonObject, \"expire_date\"));\r\n\r\n\r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"br_frame\");\r\n                        ArrayList<FrameItem> frameItems = null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject, \"fream_base_url\") + \"/\" + ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n\r\n                        brandListItemm.setFrame(frameItems);\r\n                        brandListItems.add(brandListItemm);\r\n                    }\r\n\r\n\r\n                    preafManager.setAddBrandList(brandListItems);\r\n                    preafManager.setIS_Brand(true);\r\n\r\n                    if (brandListItems.size() != 0) {\r\n                        preafManager.setActiveBrand(brandListItems.get(0));\r\n                    }\r\n\r\n\r\n                    Intent i = new Intent(act, HomeActivity.class);\r\n                    startActivity(i);\r\n                    overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n                    finish();\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n                        String body;\r\n                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                        Log.e(\"Error \", body);\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\", \"Bearer \" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    @Override\r\n    public void onItemSelection(int calledFlag, int position, CommonListModel listModel) {\r\n        if (bottomSheetFragment != null && bottomSheetFragment.isVisible()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        if (calledFlag == BRAND_CATEGORY) {\r\n            binding.categoryEdt.setText(listModel.getName());\r\n            commonListModel = listModel;\r\n        }\r\n    }\r\n\r\n    public void captureScreenShort() {\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n    }\r\n\r\n    @Override\r\n    public boolean onMenuItemClick(MenuItem item) {\r\n         switch (item.getItemId()) {\r\n            case R.id.logo:\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n   /* @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n\r\n        MenuInflater mi = getMenuInflater();\r\n        mi.inflate(R.menu.menu,menu);\r\n        return true;\r\n    }\r\n    public void pop(View v){\r\n        PopupMenu popup = new PopupMenu(this,v);\r\n        MenuInflater mi = getMenuInflater();\r\n        mi.inflate(R.menu.menu,popup.getMenu());\r\n        popup.show();\r\n\r\n    }\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        int id = item.getItemId();\r\n        switch (id) {\r\n            case R.id.log_out_brand:\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n                return true;\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n    @Override\r\n    public boolean onMenuItemClick(MenuItem item) {\r\n        switch (item.getItemId()){\r\n            case R.id.log_out_brand:\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n                break;\r\n\r\n        }\r\n        return true;\r\n    }*/\r\n\r\n/*\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.menu, menu);\r\n        return true;\r\n    }\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        Toast.makeText(this, \"Selected Item: \" +item.getTitle(), Toast.LENGTH_SHORT).show();\r\n        switch (item.getItemId()) {\r\n            case R.id.logo:\r\n\r\n                return true;\r\n\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }*/\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/AddBranddActivity.java	(revision a5f3b4f0090c0b76b7b7c4f91e59e7bead54fff8)
+++ app/src/main/java/com/app/brandmania/Activity/AddBranddActivity.java	(date 1608029237598)
@@ -485,7 +485,7 @@
                         brandListItemm.setEmail(ResponseHandler.getString(jsonObject, "br_email"));
                         brandListItemm.setAddress(ResponseHandler.getString(jsonObject, "br_address"));
                         brandListItemm.setLogo(ResponseHandler.getString(jsonObject, "br_logo"));
-
+                        brandListItemm.setPackage_id(ResponseHandler.getString(jsonObject, "package_id"));
                         brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, "is_frame"));
                         brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, "frame_message"));
                         brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, "fream_base_url"));
@@ -506,7 +506,7 @@
                         for (int j = 0; j < jsonArray.length(); j++) {
                             JSONObject jsonObject1 = jsonArray.getJSONObject(j);
                             FrameItem frameItem = new FrameItem();
-                            frameItem.setFrame1(ResponseHandler.getString(jsonObject, "fream_base_url") + "/" + ResponseHandler.getString(jsonObject1, "frame_path"));
+                            frameItem.setFrame1(ResponseHandler.getString(jsonObject1, "frame_path"));
                             frameItem.setFrameId(ResponseHandler.getString(jsonObject1, "id"));
 
                             frameItems.add(frameItem);
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.app.brandmania\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.CALL_PHONE\" />\r\n    <uses-permission android:name=\"android.permission.READ_PHONE_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.CALL_PHONE\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n\r\n    <application\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:networkSecurityConfig=\"@xml/network_security_config\"\r\n        android:requestLegacyExternalStorage=\"true\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        tools:targetApi=\"n\">\r\n        <activity android:name=\".Activity.RazorPayActivity\"></activity>\r\n        <activity android:name=\".Activity.ViewNotificationActivity\" />\r\n        <activity android:name=\".Activity.PackageActivity\" />\r\n        <activity android:name=\".Activity.ViewAllFavouritActivity\" />\r\n        <activity android:name=\".Activity.VIewAllDownloadImage\" />\r\n        <activity android:name=\".Activity.AddBrandMultipleActivity\" />\r\n        <activity android:name=\".Activity.AboutUsActivity\" />\r\n        <activity android:name=\".Activity.AddReportAndBug\" />\r\n        <activity android:name=\".Activity.FaqActivity\" />\r\n        <activity android:name=\".Activity.OnlyTextEditorActivity\" />\r\n        <activity\r\n            android:name=\".Activity.ColorAndTextEditActivity\"\r\n            android:windowSoftInputMode=\"adjustResize\" />\r\n        <activity android:name=\".TextAndImageEditActivity\" />\r\n        <activity android:name=\".TextandImageEdit\" />\r\n        <activity android:name=\".Activity.EditPicActivity\" />\r\n        <activity android:name=\".Activity.SubscriptionActivity\" />\r\n        <activity android:name=\".Activity.HelpAndSupport\" />\r\n        <activity android:name=\".Activity.PartnerProgramActivity\" />\r\n        <activity android:name=\".Activity.ViewBrandActivity\" />\r\n        <activity android:name=\".Activity.AddBranddActivity\" />\r\n        <activity android:name=\".Activity.UpdateBandList\" />\r\n        <activity android:name=\".Activity.RegistrationActivity\" />\r\n        <activity android:name=\".Activity.OtpScreenActivity\" />\r\n        <activity\r\n            android:name=\".Activity.LoginActivity\"\r\n            android:theme=\"@style/AppTheme_material_theme\" />\r\n        <activity android:name=\".Activity.ViewAllImage\"\r\n                        />\r\n        <activity android:name=\".Activity.HomeActivity\" />\r\n        <activity android:name=\".Activity.SpleshActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\"com.yalantis.ucrop.UCropActivity\"\r\n            android:screenOrientation=\"portrait\"\r\n            android:theme=\"@style/Theme.AppCompat.Light.NoActionBar\" />\r\n\r\n        <service\r\n            android:name=\".Connection.MyFirebaseMessagingService\"\r\n            android:stopWithTask=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n\r\n        <provider\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:authorities=\"${applicationId}.fileProvider\"\r\n            android:exported=\"false\"\r\n            android:grantUriPermissions=\"true\">\r\n            <meta-data\r\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n                android:resource=\"@xml/file_paths\" />\r\n        </provider>\r\n        <provider\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:authorities=\"com.app.brandmania.fileProvider\"\r\n            android:exported=\"false\"\r\n            android:grantUriPermissions=\"true\">\r\n            <meta-data\r\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n                android:resource=\"@xml/file_paths\" />\r\n        </provider>\r\n        <meta-data\r\n            android:name=\"com.razorpay.ApiKey\"\r\n            android:value=\"rzp_test_g34adOBwCItfce\" />\r\n        <activity android:name=\"com.theartofdev.edmodo.cropper.CropImageActivity\"\r\n            android:theme=\"@style/Theme.AppCompat.Light.DarkActionBar\"\r\n            />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision a5f3b4f0090c0b76b7b7c4f91e59e7bead54fff8)
+++ app/src/main/AndroidManifest.xml	(date 1608029918679)
@@ -99,7 +99,7 @@
         </provider>
         <meta-data
             android:name="com.razorpay.ApiKey"
-            android:value="rzp_test_g34adOBwCItfce" />
+            android:value="rzp_live_Sq3SAdZBt9Vec4" />
         <activity android:name="com.theartofdev.edmodo.cropper.CropImageActivity"
             android:theme="@style/Theme.AppCompat.Light.DarkActionBar"
             />
Index: app/src/main/java/com/app/brandmania/Activity/RazorPayActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.preference.PreferenceManager;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.DashBoardItem;\r\nimport com.app.brandmania.Model.DownloadFavoriteItemList;\r\nimport com.app.brandmania.Model.SliderItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityRazorPayBinding;\r\nimport com.google.gson.Gson;\r\nimport com.razorpay.Checkout;\r\nimport com.razorpay.PaymentData;\r\nimport com.razorpay.PaymentResultListener;\r\nimport com.razorpay.PaymentResultWithDataListener;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RazorPayActivity extends BaseActivity implements PaymentResultWithDataListener,alertListenerCallback {\r\n    Activity act;\r\n    Button pay;\r\n    private ActivityRazorPayBinding binding;\r\n    String sliderItem;\r\n    SliderItem sliderItemList;\r\n    BrandListItem brandListItem;\r\n    private String amountToPay;\r\n    Gson gson;\r\n    private boolean isLoading=false;\r\n    private String orderIdStr;\r\n    private String paymentIdStr;\r\n    private String signatureStr;\r\n    private String generatedOrderId;\r\n    private String currency=\"INR\";\r\n    PreafManager preafManager;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act=this;\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_razor_pay);\r\n        Checkout.preload(getApplicationContext());\r\n        preafManager=new PreafManager(this);\r\n        gson=new Gson();\r\n\r\n\r\n\r\n            sliderItemList=gson.fromJson(getIntent().getStringExtra(\"detailsObj\"), SliderItem.class);\r\n            Gson gson =new Gson();\r\n            Log.e(\"EEEE\",gson.toJson(sliderItemList));\r\n\r\n        binding.BackButtonMember.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n        sliderItem = sliderItemList.getPriceForPay();\r\n\r\n        binding.amount.setText(\"INR \" +sliderItem+\".00\");\r\n\r\n        pay=(Button)findViewById(R.id.btn_pay);\r\n\r\n        pay.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                generateOrderID();\r\n            }\r\n        });\r\n    }\r\n//generat orderid\r\n\r\n    public void generateOrderID() {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.Log(\"APi\", APIs.GENERATE_ORDER_ID);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GENERATE_ORDER_ID, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                isLoading = false;\r\n                Utility.dismissProgress();\r\n\r\n                Utility.Log(\"OrderID ; \", response);\r\n\r\n                if (ResponseHandler.isSuccess(response, null)) {\r\n                    JSONObject jsonObject = ResponseHandler.getJSONObject(ResponseHandler.createJsonObject(response), \"data\");\r\n                    generatedOrderId = ResponseHandler.getString(jsonObject, \"orderId\");\r\n                    Log.e(\"RoserPay Order Id\",generatedOrderId);\r\n                    sliderItem = ResponseHandler.getString(jsonObject, \"orderAmount\");\r\n                    currency = ResponseHandler.getString(jsonObject, \"currency\");\r\n                    setUpPaymentMethod();\r\n                } else {\r\n                   // Toast.makeText(act, \"\", Toast.LENGTH_SHORT).show();\r\n                    Toast.makeText(act,\"\"+ResponseHandler.getString(ResponseHandler.createJsonObject(response), \"message\"),Toast.LENGTH_LONG).show();\r\n                  //  Utility.showAlert(act, ResponseHandler.getString(ResponseHandler.createJsonObject(response), \"message\"), \"Error\");\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                isLoading = false;\r\n                Utility.dismissProgress();\r\n\r\n                Utility.showSnackBar(binding.rootBackground, act, \"There is something internal problem\");\r\n\r\n                error.printStackTrace();\r\n         //       String body;\r\n                //get status code here\r\n//                body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                //   Log.e(\"Error \", body);\r\n\r\n\r\n\r\n            }\r\n        }) {\r\n            /** Passing some request headers* */\r\n            @Override\r\n            public Map<String, String> getHeaders() {\r\n                Utility.Log(\"Header\", getHeader(CodeReUse.GET_JSON_HEADER).toString());\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n\r\n                hashMap.put(\"Authorization\",\"Bearer\"+preafManager.getUserToken());\r\n\r\n                return hashMap;\r\n\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"amount\", sliderItemList.getPriceForPay());\r\n                hashMap.put(\"currency\", \"INR\");\r\n\r\n                Utility.Log(\"Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(\r\n                10000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        stringRequest.setShouldCache(false);\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.getCache().clear();\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n\r\n\r\n\r\n    private void setUpPaymentMethod() {\r\n\r\n        Checkout checkout = new Checkout();\r\n        checkout.setImage(R.drawable.ic_launcher_icon);\r\n        final Activity activity = this;\r\n\r\n\r\n        try {\r\n            JSONObject options = new JSONObject();\r\n            options.put(\"name\", \"Brand Mania\");\r\n            //options.put(\"description\", \"Reference No. #123456\");\r\n            options.put(\"image\", \"https://s3.amazonaws.com/rzp-mobile/images/rzp.png\");\r\n            options.put(\"orderId\", generatedOrderId);\r\n            options.put(\"theme.color\", \"#ad2753\");\r\n            options.put(\"currency\", \"INR\");\r\n            //int amountInPaisa = Integer.parseInt(sliderItem) * 100;\r\n            options.put(\"amount\", String.valueOf(sliderItem));\r\n            options.put(\"prefill.email\", preafManager.getActiveBrand().getEmail());\r\n            options.put(\"prefill.contact\",\"Enter Mobile Number\");\r\n            Log.e(\"Param : \", options.toString());\r\n            checkout.open(activity, options);\r\n        } catch(Exception e) {\r\n            e.printStackTrace();\r\n            Log.e(\"TAG\", \"Error in starting Razorpay Checkout\", e);\r\n        }\r\n\r\n    }\r\n    @Override\r\n    public void onPaymentSuccess(String s, PaymentData paymentData) {\r\n        try {\r\n            Log.e(\"Payment Succcessful\", gson.toJson(paymentData));\r\n            orderIdStr = paymentData.getOrderId();\r\n\r\n            paymentIdStr = paymentData.getPaymentId();\r\n\r\n            signatureStr = paymentData.getSignature();\r\n\r\n            makeSubscription(\"0\");\r\n        }\r\n        catch (Exception e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onPaymentError(int i, String s, PaymentData paymentData) {\r\n        Log.e(\"Payment Fail\",s);\r\n        makeSubscription(\"1\");\r\n    }\r\n\r\n\r\n\r\n    public void makeSubscription(String subscription) {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Utility.Log(\"APi\", APIs.MAKE_PAYMENT);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.MAKE_PAYMENT, response -> {\r\n            isLoading = false;\r\n            Utility.dismissProgress();\r\n            Utility.Log(\"Make-subscription\", response);\r\n\r\n            //{\"status\":true,\"data\":\"\",\"message\":\"Subscription Added Successfully.\"}\r\n            if (ResponseHandler.isSuccess(response, null)) {\r\n                //paymentSuccess();\r\n                JSONObject jsonObject=ResponseHandler.createJsonObject(response);\r\n                Utility.showAlert(act, ResponseHandler.getString(jsonObject, \"message\"), \"Success\");\r\n\r\n            } else {\r\n                JSONObject jsonObject=ResponseHandler.createJsonObject(response);\r\n                Utility.showAlert(act, ResponseHandler.getString(jsonObject, \"message\"), \"Error\");\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                isLoading = false;\r\n                Utility.dismissProgress();\r\n\r\n                Utility.showSnackBar(binding.rootBackground, act, \"There is something internal problem\");\r\n\r\n                error.printStackTrace();\r\n             /*   String body;\r\n                //get status code here\r\n                body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                Log.e(\"Error \", body);*/\r\n\r\n\r\n            }\r\n        }) {\r\n            /** Passing some request headers* */\r\n            @Override\r\n            public Map<String, String> getHeaders() {\r\n                Utility.Log(\"Header\", getHeader(CodeReUse.GET_JSON_HEADER).toString());\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n\r\n                hashMap.put(\"Authorization\",\"Bearer\"+preafManager.getUserToken());\r\n\r\n                return hashMap;\r\n            }\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"brand\",sliderItemList.getBrandId());\r\n                hashMap.put(\"package\",sliderItemList.getPackageid());\r\n                hashMap.put(\"amount\",sliderItemList.getPriceForPay());\r\n                hashMap.put(\"total_amount\",sliderItemList.getPriceForPay());\r\n                hashMap.put(\"img_counter\",sliderItemList.getImageTitle());\r\n                hashMap.put(\"frame_counter\",sliderItemList.getTemplateTitle());\r\n                hashMap.put(\"is_pending\",subscription);\r\n                if (subscription.equals(\"0\")){\r\n                    hashMap.put(\"razorpay_payment_id\",paymentIdStr);\r\n                    Log.e(\"razorpay_payment_id\",paymentIdStr);\r\n\r\n\r\n                    if (signatureStr!=null) {\r\n                        hashMap.put(\"razorpay_signature\", signatureStr);\r\n                    }\r\n\r\n                }\r\n                hashMap.put(\"razorpay_order_id\",generatedOrderId);\r\n//\r\n              //  razorpay_payment_id, razorpay_order_id, razorpay_signature\r\n                Utility.Log(\"Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(\r\n                10000,\r\n                DefaultRetryPolicy.DEFAULT_MAX_RETRIES,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        stringRequest.setShouldCache(false);\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.getCache().clear();\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    @Override\r\n    public void alertListenerClick() {\r\n        Intent i = new Intent(act, HomeActivity.class);\r\n        startActivity(i);\r\n        overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n        finish();\r\n\r\n    }\r\n\r\n//    private void paymentSuccess() {\r\n//        DialogPaymentSubscriptionSuccessBinding helpDialog = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.dialog_payment_subscription_success, null, false);\r\n//        AlertDialog.Builder builder = new AlertDialog.Builder(act);\r\n//        builder.setView(helpDialog.getRoot());\r\n//        AlertDialog alertDialog = builder.create();\r\n//        alertDialog.setCancelable(false);\r\n//        alertDialog.setContentView(helpDialog.getRoot());\r\n//\r\n//        // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//\r\n//        if (examTypeModel == null) {\r\n//            if (subjectModel != null) {\r\n//\r\n//                //helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//            } else if (testSeries != null) {\r\n//                // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//            } else {\r\n//                // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//            }\r\n//        }  // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//\r\n//        if (examTypeModel != null) {\r\n//            //Utility.printHtmlText(examTypeModel.getName(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(examTypeModel.getName()));\r\n//\r\n//        } else if (subjectModel != null) {\r\n//            //Utility.printHtmlText(subjectModel.getName(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(subjectModel.getName()));\r\n//\r\n//        } else if (testSeries != null) {\r\n//            Utility.printHtmlText(testSeries.getName(), helpDialog.title);\r\n//            binding.titleTxt.setText(Utility.convertFirstUpperWord(testSeries.getName()));\r\n//        } else if (bookModel != null) {\r\n//            Utility.printHtmlText(bookModel.getTitle(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(bookModel.getTitle()));\r\n//        }\r\n//\r\n//        helpDialog.saveNNext.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                alertDialog.dismiss();\r\n//                onBackPressed();\r\n//            }\r\n//        });\r\n//\r\n//        alertDialog.show();\r\n//    }\r\n//\r\n//    private void paymentFails(String msg) {\r\n//        DialogPaymentFailsBinding helpDialog = DataBindingUtil.inflate(LayoutInflater.from(act), R.layout.dialog_payment_fails, null, false);\r\n//        AlertDialog.Builder builder = new AlertDialog.Builder(act);\r\n//        builder.setView(helpDialog.getRoot());\r\n//        AlertDialog alertDialog = builder.create();\r\n//        alertDialog.setCancelable(false);\r\n//        alertDialog.setContentView(helpDialog.getRoot());\r\n//\r\n//        // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//\r\n//        if (examTypeModel == null) {\r\n//            if (subjectModel != null) {\r\n//\r\n//                //helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//            } else if (testSeries != null) {\r\n//                // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//            } else {\r\n//                // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//            }\r\n//        }  // helpDialog.text1.setText(\"Are you sure to\\nleave exam\");\r\n//\r\n//        // helpDialog.text1.setText(msg);\r\n//        if (examTypeModel != null) {\r\n//\r\n//            Utility.printHtmlText(examTypeModel.getName(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(examTypeModel.getName()));\r\n//        } else if (subjectModel != null) {\r\n//            Utility.printHtmlText(subjectModel.getName(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(subjectModel.getName()));\r\n//        } else if (testSeries != null) {\r\n//            Utility.printHtmlText(testSeries.getName(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(testSeries.getName()));\r\n//\r\n//        } else if (bookModel != null) {\r\n//            Utility.printHtmlText(bookModel.getTitle(), helpDialog.title);\r\n//            helpDialog.title.setText(Utility.convertFirstUpperWord(bookModel.getTitle()));\r\n//\r\n//        }\r\n//\r\n//        helpDialog.saveNNext.setOnClickListener(new View.OnClickListener() {\r\n//            @Override\r\n//            public void onClick(View v) {\r\n//                alertDialog.dismiss();\r\n//\r\n//            }\r\n//        });\r\n//\r\n//        alertDialog.show();\r\n//    }\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {CodeReUse.activityBackPress(act);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/RazorPayActivity.java	(revision a5f3b4f0090c0b76b7b7c4f91e59e7bead54fff8)
+++ app/src/main/java/com/app/brandmania/Activity/RazorPayActivity.java	(date 1608029591677)
@@ -156,7 +156,8 @@
             @Override
             protected Map<String, String> getParams() {
                 HashMap<String, String> hashMap = new HashMap<>();
-                hashMap.put("amount", sliderItemList.getPriceForPay());
+                //hashMap.put("amount", sliderItemList.getPriceForPay());
+                hashMap.put("amount", "1");
                 hashMap.put("currency", "INR");
 
                 Utility.Log("Param", hashMap.toString());
Index: app/src/main/res/layout/slide_item_container.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:background=\"@android:color/transparent\"\r\n    android:orientation=\"vertical\"\r\n    app:cardCornerRadius=\"@dimen/_15sdp\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n\r\n    <RelativeLayout\r\n        android:layout_marginBottom=\"@dimen/_30sdp\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"@dimen/_350sdp\">\r\n        <androidx.cardview.widget.CardView\r\n            android:layout_marginRight=\"@dimen/_5sdp\"\r\n            android:layout_marginLeft=\"@dimen/_5sdp\"\r\n            android:background=\"@android:color/transparent\"\r\n            android:layout_marginBottom=\"@dimen/_5sdp\"\r\n            app:cardCornerRadius=\"@dimen/_15sdp\"\r\n            android:elevation=\"@dimen/_200sdp\"\r\n            android:layout_marginTop=\"@dimen/_20sdp\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"@dimen/_350sdp\">\r\n            <ImageView\r\n                android:layout_marginStart=\"-90dp\"\r\n                android:layout_marginBottom=\"-50dp\"\r\n                android:layout_gravity=\"bottom\"\r\n                android:src=\"@drawable/bottom\"\r\n                android:layout_width=\"@dimen/_250sdp\"\r\n                android:layout_height=\"@dimen/_250sdp\"/>\r\n            <RelativeLayout\r\n\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n                <RelativeLayout\r\n                    android:elevation=\"@dimen/_10sdp\"\r\n                    android:id=\"@+id/basicTitle\"\r\n                    android:background=\"@drawable/titleshape\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"@dimen/_45sdp\">\r\n\r\n                    <TextView\r\n                        android:layout_marginBottom=\"@dimen/_4sdp\"\r\n                        android:layout_alignParentBottom=\"true\"\r\n                        android:id=\"@+id/packageTitle\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:textSize=\"@dimen/_15sdp\"\r\n                        android:text=\"299 Rs\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        android:textColor=\"@color/colorNavText\"\r\n                        android:fontFamily=\"@font/montserratbold\" />\r\n\r\n              <!--<TextView\r\n                        android:id=\"@+id/payPerYearTag\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:textSize=\"@dimen/_15sdp\"\r\n                        android:text=\"\"\r\n                        android:layout_centerHorizontal=\"true\"\r\n                        android:textColor=\"@color/colorNavText\"\r\n                        android:fontFamily=\"@font/inter_bold\" />-->\r\n                </RelativeLayout>\r\n\r\n                <TextView\r\n                    android:id=\"@+id/templateTiltle\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@+id/basicTitle\"\r\n                    android:layout_marginLeft=\"@dimen/_20sdp\"\r\n                    android:layout_marginTop=\"@dimen/_25sdp\"\r\n                    android:fontFamily=\"@font/montserratmedium\"\r\n                    android:text=\"1 - Templates / Brand\"\r\n                    android:textColor=\"@color/colorPrimary\"\r\n                    android:textSize=\"@dimen/_13sdp\" />\r\n\r\n                <View\r\n                    android:id=\"@+id/templateLine\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"1dp\"\r\n                    android:layout_alignParentEnd=\"true\"\r\n                    android:layout_below=\"@+id/templateTiltle\"\r\n                    android:layout_marginStart=\"@dimen/_18sdp\"\r\n                    android:layout_marginTop=\"@dimen/_5sdp\"\r\n                     android:background=\"#B1B1B1\"\r\n                    />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/ImageTiltle\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@+id/templateLine\"\r\n                    android:layout_marginStart=\"@dimen/_20sdp\"\r\n                    android:layout_marginTop=\"@dimen/_10sdp\"\r\n                    android:fontFamily=\"@font/montserratmedium\"\r\n                    android:text=\"50  Image Download / year\"\r\n                    android:textColor=\"@color/colorPrimary\"\r\n                    android:textSize=\"@dimen/_13sdp\" />\r\n\r\n                <View\r\n                    android:id=\"@+id/ImageLine\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"1dp\"\r\n                    android:layout_below=\"@+id/ImageTiltle\"\r\n                    android:layout_marginStart=\"@dimen/_18sdp\"\r\n                    android:layout_marginTop=\"@dimen/_5sdp\"\r\n                     android:background=\"#B1B1B1\"\r\n                    />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/payTiltle\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_below=\"@+id/ImageLine\"\r\n                    android:layout_marginStart=\"@dimen/_20sdp\"\r\n                    android:layout_marginTop=\"@dimen/_10sdp\"\r\n                    android:fontFamily=\"@font/montserratmedium\"\r\n                    android:text=\"299 / year\"\r\n                    android:textColor=\"@color/colorPrimary\"\r\n                    android:textSize=\"@dimen/_13sdp\" />\r\n\r\n                <View\r\n                    android:id=\"@+id/payLine\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"1dp\"\r\n                    android:layout_below=\"@+id/payTiltle\"\r\n                    android:layout_marginStart=\"@dimen/_18sdp\"\r\n                    android:layout_marginTop=\"@dimen/_5sdp\"\r\n                     android:background=\"#B1B1B1\"\r\n                    />\r\n\r\n                <Button\r\n\r\n                    android:id=\"@+id/packageBtn\"\r\n                    android:layout_width=\"@dimen/_100sdp\"\r\n                    android:layout_height=\"@dimen/_32sdp\"\r\n                    android:layout_alignParentBottom=\"true\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_gravity=\"bottom|center_horizontal\"\r\n                    android:layout_marginTop=\"@dimen/_50sdp\"\r\n                    android:layout_marginBottom=\"@dimen/_20sdp\"\r\n                    android:background=\"@drawable/buttoncornar\"\r\n                    android:fontFamily=\"@font/montserratsemibold\"\r\n                    android:text=\"Subscribe\"\r\n                    android:textAlignment=\"center\"\r\n                    android:textAllCaps=\"false\"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_11sdp\" />\r\n            </RelativeLayout>\r\n        </androidx.cardview.widget.CardView>\r\n        <RelativeLayout\r\n            android:elevation=\"@dimen/_10sdp\"\r\n            android:gravity=\"center\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:background=\"@drawable/shapeee_round_cornar\"\r\n            android:layout_width=\"@dimen/_150sdp\"\r\n            android:layout_height=\"@dimen/_35sdp\">\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/priceContent\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:orientation=\"horizontal\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n                <TextView\r\n                    android:id=\"@+id/symbolPriceForPay\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/montserratbold\"\r\n                    android:text=\"₹ \"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_14sdp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/priceForPay\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:fontFamily=\"@font/montserratbold\"\r\n                    android:text=\"233\"\r\n                    android:textColor=\"@color/colorNavText\"\r\n                    android:textSize=\"@dimen/_14sdp\">\r\n                    //₹\r\n                </TextView>\r\n            </LinearLayout>\r\n            <TextView\r\n                android:layout_below=\"@+id/priceContent\"\r\n                android:id=\"@+id/priceForPayTag\"\r\n                android:textColor=\"@color/colorNavText\"\r\n                android:text=\"Per Year\"\r\n                android:fontFamily=\"@font/montserratbold\"\r\n                android:layout_marginTop=\"-7dp\"\r\n                android:textSize=\"@dimen/_8sdp\"\r\n                android:layout_centerHorizontal=\"true\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n            </TextView>\r\n        </RelativeLayout>\r\n    </RelativeLayout>\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/slide_item_container.xml	(revision a5f3b4f0090c0b76b7b7c4f91e59e7bead54fff8)
+++ app/src/main/res/layout/slide_item_container.xml	(date 1608027227628)
@@ -7,10 +7,8 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
-
     <RelativeLayout
-        android:layout_marginBottom="@dimen/_30sdp"
-        android:layout_width="wrap_content"
+         android:layout_width="wrap_content"
         android:layout_height="@dimen/_350sdp">
         <androidx.cardview.widget.CardView
             android:layout_marginRight="@dimen/_5sdp"
@@ -21,10 +19,9 @@
             android:elevation="@dimen/_200sdp"
             android:layout_marginTop="@dimen/_20sdp"
             android:layout_width="match_parent"
-            android:layout_height="@dimen/_350sdp">
+            android:layout_height="match_parent">
             <ImageView
                 android:layout_marginStart="-90dp"
-                android:layout_marginBottom="-50dp"
                 android:layout_gravity="bottom"
                 android:src="@drawable/bottom"
                 android:layout_width="@dimen/_250sdp"
@@ -138,8 +135,7 @@
                     android:layout_alignParentBottom="true"
                     android:layout_centerHorizontal="true"
                     android:layout_gravity="bottom|center_horizontal"
-                    android:layout_marginTop="@dimen/_50sdp"
-                    android:layout_marginBottom="@dimen/_20sdp"
+                     android:layout_marginBottom="@dimen/_30sdp"
                     android:background="@drawable/buttoncornar"
                     android:fontFamily="@font/montserratsemibold"
                     android:text="Subscribe"
Index: app/src/main/java/com/app/brandmania/Adapter/SliderAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Adapter;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport com.app.brandmania.Activity.RazorPayActivity;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Model.SliderItem;\r\nimport com.app.brandmania.R;\r\nimport com.google.gson.Gson;\r\nimport com.makeramen.roundedimageview.RoundedImageView;\r\n\r\nimport java.util.List;\r\n\r\npublic class SliderAdapter extends RecyclerView.Adapter<SliderAdapter.SliderViewHolder> {\r\n   private List<SliderItem> sliderItems;\r\n   private ViewPager2 viewPager2;\r\n    Activity activity;\r\n    private String brandId;\r\n\r\n    Gson gson;\r\n    public SliderAdapter(List<SliderItem> sliderItems, Activity activity, String selectedBrand) {\r\n        this.sliderItems = sliderItems;\r\n        this.activity = activity;\r\n        brandId=selectedBrand;\r\n        gson=new Gson();\r\n    }\r\n\r\n    @Override\r\n    public SliderViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        return new SliderViewHolder(LayoutInflater.from(parent.getContext()).inflate(R.layout.slide_item_container,parent,false));\r\n    }\r\n\r\n    @Override public void onBindViewHolder(@NonNull SliderViewHolder holder, int position) {\r\n            holder.setLayout(sliderItems.get(position));\r\n            holder.packageBtn.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View view) {\r\n                    Intent intent=new Intent(activity, RazorPayActivity.class);\r\n                    intent.putExtra(\"AmountText\", holder.priceForPay.getText().toString());\r\n                    PreafManager preafManager=new PreafManager(activity);\r\n                    sliderItems.get(position).setBrandId(brandId);\r\n                    intent.putExtra(\"detailsObj\",gson.toJson(sliderItems.get(position)));\r\n                    activity.startActivity(intent);\r\n                    intent.addCategory(Intent.CATEGORY_HOME);\r\n                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                    activity.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                }\r\n            });\r\n    }\r\n\r\n    @Override public int getItemCount() {\r\n        return sliderItems.size();\r\n    }\r\n\r\n    public class SliderViewHolder extends RecyclerView.ViewHolder\r\n    {\r\n        private TextView priceForPay;\r\n        private TextView packageTitle;\r\n        private TextView templateTitle;\r\n        private TextView imageTitle;\r\n        private TextView payTitle;\r\n        private TextView packageBtn;\r\n        public SliderViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            priceForPay=itemView.findViewById(R.id.priceForPay);\r\n            packageTitle=itemView.findViewById(R.id.packageTitle);\r\n            templateTitle=itemView.findViewById(R.id.templateTiltle);\r\n            imageTitle=itemView.findViewById(R.id.ImageTiltle);\r\n            payTitle=itemView.findViewById(R.id.payTiltle);\r\n            packageBtn=itemView.findViewById(R.id.packageBtn);\r\n        }\r\n        void setLayout(SliderItem sliderItem)\r\n        {\r\n\r\n            priceForPay.setText(sliderItem.getPriceForPay());\r\n            packageTitle.setText(sliderItem.getPackageTitle());\r\n            templateTitle.setText(sliderItem.getTemplateTitle()+\" - Template / Brand\");\r\n            imageTitle.setText(sliderItem.getImageTitle() + \" Image Download / Year\");\r\n            payTitle.setText(sliderItem.getPayTitle() +\" / Year\");\r\n\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Adapter/SliderAdapter.java	(revision a5f3b4f0090c0b76b7b7c4f91e59e7bead54fff8)
+++ app/src/main/java/com/app/brandmania/Adapter/SliderAdapter.java	(date 1608028730880)
@@ -2,6 +2,7 @@
 
 import android.app.Activity;
 import android.content.Intent;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -28,13 +29,14 @@
    private ViewPager2 viewPager2;
     Activity activity;
     private String brandId;
-
+    PreafManager preafManager;
     Gson gson;
     public SliderAdapter(List<SliderItem> sliderItems, Activity activity, String selectedBrand) {
         this.sliderItems = sliderItems;
         this.activity = activity;
         brandId=selectedBrand;
         gson=new Gson();
+        preafManager=new PreafManager(activity);
     }
 
     @Override
@@ -58,6 +60,10 @@
                     activity.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);
                 }
             });
+        Log.e("TTTTT",new Gson().toJson(preafManager.getActiveBrand()));
+            if (preafManager.getActiveBrand().getPackage_id().equals(sliderItems.get(position).getPackageid())){
+                holder.packageBtn.setVisibility(View.GONE);
+            }
     }
 
     @Override public int getItemCount() {
Index: app/src/main/java/com/app/brandmania/Activity/SpleshActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.animation.AnimatorSet;\r\nimport android.animation.ObjectAnimator;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.Model.IsCompeteModel;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityMainBinding;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class SpleshActivity extends BaseActivity {\r\n    Activity act;\r\n    private ActivityMainBinding binding;\r\n    PreafManager preafManager;\r\n    AnimatorSet animatorSet1;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_main);\r\n        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);\r\n\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        preafManager=new PreafManager(this);\r\n\r\n        binding.logo.setVisibility(View.VISIBLE);\r\n        final ObjectAnimator scaleAnimatiorXX = ObjectAnimator.ofFloat(binding.logo, \"scaleX\", 0, 1f);\r\n        ObjectAnimator scaleAnimatiorYX = ObjectAnimator.ofFloat(binding.logo, \"scaleY\", 0, 1f);\r\n        animatorSet1 = new AnimatorSet();\r\n        animatorSet1.playTogether(scaleAnimatiorXX, scaleAnimatiorYX);\r\n        animatorSet1.setDuration(3000);\r\n        new Handler().postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n\r\n                if (preafManager.getUserToken()!=null && !preafManager.getUserToken().isEmpty() ) {\r\n                    LoginFlow();\r\n                }\r\n                else {\r\n                    Intent intent = new Intent(act, LoginActivity.class);\r\n                    intent.addCategory(Intent.CATEGORY_HOME);\r\n                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                    startActivity(intent);\r\n                    overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                    finish();\r\n                }\r\n\r\n            }\r\n        }, 1000);\r\n\r\n    }\r\n    private void LoginFlow() {\r\n        Utility.Log(\"API : \", APIs.IS_COMPLETE);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, APIs.IS_COMPLETE, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.Log(\"IS_COMPLETE : \", response);\r\n                try {\r\n\r\n                    JSONObject jsonObject=new JSONObject(response);\r\n                    JSONObject jsonObject1 = jsonObject.getJSONObject(\"data\");\r\n                    if (jsonObject1.getString(\"is_completed\").equals(\"0\"))\r\n                    {\r\n                        preafManager.setIs_Registration(false);\r\n                        sessionCreat();\r\n                    }\r\n                    if (jsonObject1.getString(\"is_completed\").equals(\"1\"))\r\n                    {\r\n                        preafManager.setIS_Brand(false);\r\n                        sessionCreat();\r\n                    }\r\n                    if (jsonObject1.getString(\"is_completed\").equals(\"2\"))\r\n                    {\r\n                        preafManager.setIs_Registration(true);\r\n                        preafManager.setIS_Brand(true);\r\n                        getBrandList();\r\n\r\n                    }\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n                        String body;\r\n\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(5000,\r\n                2,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        queue.add(stringRequest);\r\n    }\r\n    private void sessionCreat() {\r\n\r\n        preafManager=new PreafManager(act);\r\n        if (preafManager.getIs_Registration())\r\n        {\r\n            if (preafManager.getIS_Brand())\r\n            {\r\n                Intent i = new Intent(act, HomeActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                finish();\r\n            }\r\n            else\r\n            {\r\n                Intent i = new Intent(act, AddBranddActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                finish();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            Intent intent = new Intent(act, RegistrationActivity.class);\r\n            intent.addCategory(Intent.CATEGORY_HOME);\r\n            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n            startActivity(intent);\r\n            overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n            finish();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void getBrandList() {\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Log.e(\"addbrandresponce\",response);\r\n                ArrayList<BrandListItem> brandListItems=new ArrayList<>();\r\n                try {\r\n                    JSONObject res=new JSONObject(response);\r\n\r\n                    JSONArray jsonArray1 = res.getJSONArray(\"data\");\r\n                    for (int i=0;i<jsonArray1.length();i++)\r\n                    {\r\n                        JSONObject jsonObject=jsonArray1.getJSONObject(i);\r\n                        BrandListItem brandListItemm=new BrandListItem();\r\n                        brandListItemm.setId(ResponseHandler.getString(jsonObject,\"id\"));\r\n                        brandListItemm.setCategoryId(ResponseHandler.getString(jsonObject, \"br_category_id\"));\r\n                        brandListItemm.setCategoryName(ResponseHandler.getString(jsonObject, \"br_category_name\"));\r\n                        brandListItemm.setName(ResponseHandler.getString(jsonObject,\"br_name\"));\r\n                        brandListItemm.setWebsite(ResponseHandler.getString(jsonObject,\"br_website\"));\r\n                        brandListItemm.setEmail(ResponseHandler.getString(jsonObject,\"br_email\"));\r\n                        brandListItemm.setPhonenumber(ResponseHandler.getString(jsonObject, \"br_phone\"));\r\n                        brandListItemm.setAddress(ResponseHandler.getString(jsonObject,\"br_address\"));\r\n                        brandListItemm.setLogo(ResponseHandler.getString(jsonObject,\"br_logo\"));\r\n\r\n                        brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, \"is_frame\"));\r\n                        brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, \"frame_message\"));\r\n                        brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, \"fream_base_url\"));\r\n                        brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, \"is_payment_pending\"));\r\n                        brandListItemm.setPayment_message(ResponseHandler.getString(jsonObject, \"payment_message\"));\r\n                        brandListItemm.setPackagename(ResponseHandler.getString(jsonObject, \"package\"));\r\n                        brandListItemm.setPackagemessage(ResponseHandler.getString(jsonObject, \"package_message\"));\r\n                        brandListItemm.setNo_of_total_image(ResponseHandler.getString(jsonObject, \"no_of_img\"));\r\n                        brandListItemm.setNo_of_used_image(ResponseHandler.getString(jsonObject, \"no_of_used_img\"));\r\n                        brandListItemm.setNo_of_frame(ResponseHandler.getString(jsonObject, \"no_of_frame\"));\r\n                        brandListItemm.setNo_of_remaining(ResponseHandler.getString(jsonObject, \"remaining_img\"));\r\n                        brandListItemm.setExpiery_date(ResponseHandler.getString(jsonObject, \"expire_date\"));\r\n                        \r\n                        \r\n                        \r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"br_frame\");\r\n                        \r\n                        ArrayList<FrameItem>frameItems=null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject,\"fream_base_url\")+\"/\"+ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n\r\n                        brandListItemm.setFrame(frameItems);\r\n                        brandListItems.add(brandListItemm);\r\n                    }\r\n\r\n\r\n                    preafManager.setAddBrandList(brandListItems);\r\n                    preafManager.setIS_Brand(true);\r\n\r\n                    /*if (brandListItems!=null && brandListItems.size()!=0){\r\n                        preafManager.setActiveBrand(brandListItems.get(0));\r\n                    }*/\r\n\r\n\r\n                    Intent i = new Intent(act, HomeActivity.class);\r\n                    startActivity(i);\r\n                    overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n                    finish();\r\n\r\n\r\n                }\r\n                catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n//                        String body;\r\n//                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n//                        Log.e(\"Error \", body);\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(5000,\r\n                2,\r\n                DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/SpleshActivity.java	(revision a5f3b4f0090c0b76b7b7c4f91e59e7bead54fff8)
+++ app/src/main/java/com/app/brandmania/Activity/SpleshActivity.java	(date 1608028286506)
@@ -222,7 +222,7 @@
                         brandListItemm.setPhonenumber(ResponseHandler.getString(jsonObject, "br_phone"));
                         brandListItemm.setAddress(ResponseHandler.getString(jsonObject,"br_address"));
                         brandListItemm.setLogo(ResponseHandler.getString(jsonObject,"br_logo"));
-
+                        brandListItemm.setPackage_id(ResponseHandler.getString(jsonObject, "package_id"));
                         brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, "is_frame"));
                         brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, "frame_message"));
                         brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, "fream_base_url"));
Index: app/src/main/java/com/app/brandmania/Activity/RegistrationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.PopupMenu;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.text.Html;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.androidnetworking.AndroidNetworking;\r\nimport com.androidnetworking.common.ANRequest;\r\nimport com.androidnetworking.common.Priority;\r\nimport com.androidnetworking.error.ANError;\r\nimport com.androidnetworking.interfaces.JSONObjectRequestListener;\r\nimport com.androidnetworking.interfaces.UploadProgressListener;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityRegistrationBinding;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class RegistrationActivity extends BaseActivity implements  PopupMenu.OnMenuItemClickListener{\r\n    Activity act;\r\n    private ActivityRegistrationBinding binding;\r\n    private boolean isLoading=false;\r\n    private String is_completed=\"\";\r\n    int errorColor;\r\n    final int version = Build.VERSION.SDK_INT;\r\n    PreafManager preafManager;\r\n    AlertDialog.Builder alertDialogBuilder;\r\n    private ImageView menuOtpion;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act= this;\r\n        binding= DataBindingUtil.setContentView(act, R.layout.activity_registration);\r\n        this.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_HIDDEN);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        alertDialogBuilder=new AlertDialog.Builder(act);\r\n        preafManager=new PreafManager(this);\r\n        binding.emailId.setImeActionLabel(\"Custom text\", KeyEvent.KEYCODE_ENTER);\r\n\r\n        binding.firstName.setNextFocusDownId(R.id.lastName);\r\n        binding.lastName.setNextFocusDownId(R.id.emailId);\r\n        binding.emailId.setNextFocusDownId(R.id.submitBtn);\r\n        binding.menuOtpion.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n\r\n            }\r\n        });\r\n\r\n\r\n        menuOtpion=findViewById(R.id.menuOtpion);\r\n        menuOtpion.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                PopupMenu popup = new PopupMenu(RegistrationActivity.this, view);\r\n                popup.setOnMenuItemClickListener(RegistrationActivity.this);\r\n                popup.inflate(R.menu.menu);\r\n                popup.show();\r\n            }\r\n        });\r\n\r\n\r\n\r\n        preafManager.setEMAIL_Id(binding.emailId.getText().toString());\r\n        binding.submitBtn.setOnClickListener(new View.OnClickListener() {\r\n            @RequiresApi(api = Build.VERSION_CODES.M)\r\n            @Override\r\n            public void onClick(View v) {\r\n                Validation();\r\n\r\n            }\r\n        });\r\n        CodeReUse.RemoveError(binding.firstName, binding.userNameTextLayout);\r\n        CodeReUse.RemoveError(binding.lastName, binding.lastNameTextLayout);\r\n        CodeReUse.RemoveError(binding.emailId, binding.emailIdTextLayout);\r\n\r\n        String CreatAccount = \"Create<br>Account</font></br>\";\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\r\n           // binding.signupText.setText(Html.fromHtml(Message, Html.FROM_HTML_MODE_COMPACT));\r\n            binding.creatAccount.setText(Html.fromHtml(CreatAccount, Html.FROM_HTML_MODE_COMPACT));\r\n        } else {\r\n            //binding.signupText.setText(Html.fromHtml(Message));\r\n            binding.creatAccount.setText(Html.fromHtml(CreatAccount));\r\n        }\r\n    }\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    private void Validation() {\r\n\r\n        boolean isError = false;\r\n        boolean isFocus = false;\r\n\r\n        if (binding.firstName.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.userNameTextLayout.setError(getString(R.string.enter_first_name));\r\n            binding.userNameTextLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n            binding.firstName.requestFocus();\r\n\r\n        }\r\n\r\n\r\n\r\n        if (binding.lastName.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.lastNameTextLayout.setError(getString(R.string.enter_last_name));\r\n            binding.lastNameTextLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n            binding.lastName.requestFocus();\r\n\r\n        }\r\n        if (!binding.emailId.getText().toString().equals(\"\")) {\r\n            if (!CodeReUse.isEmailValid(binding.emailId.getText().toString())) {\r\n                isError = true;\r\n                isFocus = true;\r\n                binding.emailIdTextLayout.setError(getString(R.string.enter_valid_email_address));\r\n                binding.emailIdTextLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n                binding.emailId.requestFocus();\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n            }\r\n\r\n        }\r\n        else {\r\n            if (binding.emailId.getText().toString().length() == 0) {\r\n                isError = true;\r\n                isFocus = true;\r\n                binding.emailIdTextLayout.setError(getString(R.string.enter_email_id));\r\n                binding.emailIdTextLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n                          binding.emailId.requestFocus();\r\n\r\n            }\r\n        }\r\n        if (!isError)\r\n        {\r\n            addUser();\r\n        }\r\n\r\n    }\r\n    @Override\r\n    public boolean onMenuItemClick(MenuItem item) {\r\n\r\n        switch (item.getItemId()) {\r\n            case R.id.logo:\r\n                preafManager.Logout();\r\n                Intent i = new Intent(act, LoginActivity.class);\r\n                i.addCategory(Intent.CATEGORY_HOME);\r\n                i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(i);\r\n                act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                act.finish();\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n    private void addUser() {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Log.e(\"API\", APIs.USER_REGISTRATION);\r\n        Log.w(\"Tokennn\", preafManager.getUserToken());\r\n        ANRequest.MultiPartBuilder request = AndroidNetworking.upload(APIs.USER_REGISTRATION)\r\n                .addHeaders(\"Accept\", \"application/json\")\r\n                .addHeaders(\"Content-Type\", \"application/json\")\r\n                .addHeaders(\"Authorization\", \"Bearer \"+preafManager.getUserToken())\r\n                .addMultipartParameter(\"first_name\", binding.firstName.getText().toString())\r\n                .addMultipartParameter(\"last_name\", binding.lastName.getText().toString())\r\n                .addMultipartParameter(\"email\", binding.emailId.getText().toString())\r\n                .setTag(\"Add User\")\r\n                .setPriority(Priority.HIGH);\r\n        preafManager.setEMAIL_Id(binding.emailId.getText().toString());\r\n        request.build().setUploadProgressListener(new UploadProgressListener() {\r\n            @Override\r\n            public void onProgress(long bytesUploaded, long totalBytes) {\r\n                // do anything with progress\r\n            }\r\n        })\r\n                .getAsJSONObject(new JSONObjectRequestListener() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        Utility.Log(\"Verify-Response\", response);\r\n\r\n                        try {\r\n\r\n                            if (response.getBoolean(\"status\")) {\r\n                                preafManager.setIs_Registration(true);\r\n\r\n                                JSONObject jsonArray = response.getJSONObject(\"data\");\r\n                                is_completed= jsonArray.getString(\"is_completed\");\r\n\r\n                                        preafManager.loginStep(is_completed);\r\n                                        if (is_completed.equals(\"1\"))\r\n                                        {\r\n                                            Intent i = new Intent(act, AddBranddActivity.class);\r\n                                            i.addCategory(Intent.CATEGORY_HOME);\r\n                                            i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                                            startActivity(i);\r\n                                            overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                                            finish();\r\n                                        }\r\n                                        if (is_completed.equals(\"2\"))\r\n                                        {\r\n\r\n                                            getBrandList();\r\n\r\n//                                    Intent i = new Intent(act, HomeActivity.class);\r\n//                                    i.addCategory(Intent.CATEGORY_HOME);\r\n//                                    i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n//                                    startActivity(i);\r\n//                                    overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n//                                    finish();\r\n                                        }\r\n\r\n\r\n\r\n\r\n                            }\r\n                        }\r\n                        catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(ANError error) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        if (error.getErrorCode() != 0) {\r\n                            Log.e(\"onError errorCode : \", String.valueOf(error.getErrorCode()));\r\n                            Log.e(\"onError errorBody : \", error.getErrorBody());\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        } else {\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n    private void getBrandList() {\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Log.e(\"addbrandresponce\",response);\r\n                ArrayList<BrandListItem> brandListItems=new ArrayList<>();\r\n                try {\r\n                    JSONObject res=new JSONObject(response);\r\n\r\n                    JSONArray jsonArray1 = res.getJSONArray(\"data\");\r\n                    for (int i=0;i<jsonArray1.length();i++)\r\n                    {\r\n                        JSONObject jsonObject=jsonArray1.getJSONObject(i);\r\n                        BrandListItem brandListItemm=new BrandListItem();\r\n                        brandListItemm.setId(ResponseHandler.getString(jsonObject,\"id\"));\r\n                        brandListItemm.setCategoryId(ResponseHandler.getString(jsonObject, \"br_category_id\"));\r\n                        brandListItemm.setCategoryName(ResponseHandler.getString(jsonObject, \"br_category_name\"));\r\n                        brandListItemm.setName(ResponseHandler.getString(jsonObject,\"br_name\"));\r\n                        brandListItemm.setPhonenumber(ResponseHandler.getString(jsonObject, \"br_phone\"));\r\n                        brandListItemm.setWebsite(ResponseHandler.getString(jsonObject,\"br_website\"));\r\n                        brandListItemm.setEmail(ResponseHandler.getString(jsonObject,\"br_email\"));\r\n                        brandListItemm.setAddress(ResponseHandler.getString(jsonObject,\"br_address\"));\r\n                        brandListItemm.setLogo(ResponseHandler.getString(jsonObject,\"br_logo\"));\r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"br_frame\");\r\n                        ArrayList<FrameItem>frameItems=null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject,\"fream_base_url\")+\"/\"+ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n\r\n                        brandListItemm.setFrame(frameItems);\r\n                        brandListItems.add(brandListItemm);\r\n                    }\r\n\r\n\r\n                    preafManager.setAddBrandList(brandListItems);\r\n                    preafManager.setIS_Brand(true);\r\n\r\n                    if (brandListItems!=null && brandListItems.size()!=0){\r\n                        preafManager.setActiveBrand(brandListItems.get(0));\r\n                    }\r\n\r\n\r\n                    Intent i = new Intent(act, HomeActivity.class);\r\n                    startActivity(i);\r\n                    overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n                    finish();\r\n\r\n                }\r\n                catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n                        String body;\r\n                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                        Log.e(\"Error \", body);\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n    public void captureScreenShort()\r\n    {\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/RegistrationActivity.java	(revision a5f3b4f0090c0b76b7b7c4f91e59e7bead54fff8)
+++ app/src/main/java/com/app/brandmania/Activity/RegistrationActivity.java	(date 1608028286557)
@@ -304,15 +304,28 @@
                     {
                         JSONObject jsonObject=jsonArray1.getJSONObject(i);
                         BrandListItem brandListItemm=new BrandListItem();
-                        brandListItemm.setId(ResponseHandler.getString(jsonObject,"id"));
+                        brandListItemm.setId(ResponseHandler.getString(jsonObject, "id"));
                         brandListItemm.setCategoryId(ResponseHandler.getString(jsonObject, "br_category_id"));
                         brandListItemm.setCategoryName(ResponseHandler.getString(jsonObject, "br_category_name"));
-                        brandListItemm.setName(ResponseHandler.getString(jsonObject,"br_name"));
+                        brandListItemm.setName(ResponseHandler.getString(jsonObject, "br_name"));
                         brandListItemm.setPhonenumber(ResponseHandler.getString(jsonObject, "br_phone"));
-                        brandListItemm.setWebsite(ResponseHandler.getString(jsonObject,"br_website"));
-                        brandListItemm.setEmail(ResponseHandler.getString(jsonObject,"br_email"));
-                        brandListItemm.setAddress(ResponseHandler.getString(jsonObject,"br_address"));
-                        brandListItemm.setLogo(ResponseHandler.getString(jsonObject,"br_logo"));
+                        brandListItemm.setWebsite(ResponseHandler.getString(jsonObject, "br_website"));
+                        brandListItemm.setEmail(ResponseHandler.getString(jsonObject, "br_email"));
+                        brandListItemm.setAddress(ResponseHandler.getString(jsonObject, "br_address"));
+                        brandListItemm.setLogo(ResponseHandler.getString(jsonObject, "br_logo"));
+                        brandListItemm.setPackage_id(ResponseHandler.getString(jsonObject, "package_id"));
+                        brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, "is_frame"));
+                        brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, "frame_message"));
+                        brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, "fream_base_url"));
+                        brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, "is_payment_pending"));
+                        brandListItemm.setPayment_message(ResponseHandler.getString(jsonObject, "payment_message"));
+                        brandListItemm.setPackagename(ResponseHandler.getString(jsonObject, "package"));
+                        brandListItemm.setPackagemessage(ResponseHandler.getString(jsonObject, "package_message"));
+                        brandListItemm.setNo_of_total_image(ResponseHandler.getString(jsonObject, "no_of_img"));
+                        brandListItemm.setNo_of_used_image(ResponseHandler.getString(jsonObject, "no_of_used_img"));
+                        brandListItemm.setNo_of_frame(ResponseHandler.getString(jsonObject, "no_of_frame"));
+                        brandListItemm.setNo_of_remaining(ResponseHandler.getString(jsonObject, "remaining_img"));
+                        brandListItemm.setExpiery_date(ResponseHandler.getString(jsonObject, "expire_date"));
                         JSONArray jsonArray = jsonObject.getJSONArray("br_frame");
                         ArrayList<FrameItem>frameItems=null;
                         frameItems = new ArrayList<>();
Index: app/src/main/java/com/app/brandmania/Activity/OtpScreenActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.text.Html;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.DefaultRetryPolicy;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.iid.FirebaseInstanceId;\r\nimport com.google.firebase.iid.InstanceIdResult;\r\nimport com.google.gson.Gson;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Utils.GenericTextWatcher;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityOtpScreenBinding;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.UnsupportedEncodingException;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\n\r\npublic class OtpScreenActivity extends BaseActivity {\r\n    Activity act;\r\n    PreafManager preafManager;\r\n    private ActivityOtpScreenBinding binding;\r\n    private String deviceToken = \"\";\r\n    private String is_completed=\"\";\r\n    private String toke=\"\";\r\n    private boolean mTimerRunnig;\r\n    private CountDownTimer countDownTimer;\r\n    private long mTimeLeftInMills = START_TIME_IN_MILLIS;\r\n    private static final long START_TIME_IN_MILLIS = 30000;\r\n    private boolean isLoading = false;\r\n    String NumberShow;\r\n    public String getDeviceToken(Activity act) {\r\n        FirebaseInstanceId.getInstance().getInstanceId()\r\n                .addOnSuccessListener(act, new OnSuccessListener<InstanceIdResult>() {\r\n                    @Override\r\n                    public void onSuccess(InstanceIdResult instanceIdResult) {\r\n                        deviceToken = instanceIdResult.getToken();\r\n\r\n                    }\r\n                });\r\n        return deviceToken;\r\n    }\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        act = this;\r\n\r\n        binding = DataBindingUtil.setContentView(act, R.layout.activity_otp_screen);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        NumberShow = getIntent().getStringExtra(Constant.MOBILE_NUMBER);\r\n        binding.verificationChildTitle.setText(\"We sent OTP to verify your number \\n\" + \"+91\" + NumberShow);\r\n        String Verify = \"OTP<br>Verification</font></br>\";\r\n        InsertRecord();\r\n\r\n        binding.ResendText.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                binding.ResendText.setVisibility(View.GONE);\r\n                binding.CouterText.setVisibility(View.VISIBLE);\r\n                InsertRecord();\r\n                updateCountDownText();\r\n                countDownTimer.start();\r\n            }\r\n        });\r\n\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\r\n\r\n            binding.verifyOtp.setText(Html.fromHtml(Verify, Html.FROM_HTML_MODE_COMPACT));\r\n        } else {\r\n\r\n            binding.verifyOtp.setText(Html.fromHtml(Verify));\r\n        }\r\n\r\n\r\n\r\n\r\n        TextChanger();\r\n        deviceToken = getDeviceToken(this);\r\n        preafManager=new PreafManager(this);\r\n        binding.regBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String OtpString= binding.otpOne.getText().toString()+binding.otpTwo.getText().toString()+binding.otpThree.getText().toString()+binding.otpFour.getText().toString();\r\n                VerificationOtp(OtpString.trim(), NumberShow);\r\n            }\r\n        });\r\n        String Message = \"Didn't received OTP? <u><b>RESEND</b></u></font>\";\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {\r\n            binding.ResendText.setText(Html.fromHtml(Message, Html.FROM_HTML_MODE_COMPACT));\r\n        } else {\r\n            binding.ResendText.setText(Html.fromHtml(Message));\r\n        }\r\n    }\r\n    private void VerificationOtp(String otp, String mobileno) {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Utility.Log(\"Verify-Responce-Api\", APIs.VERIFY_OTP);\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.VERIFY_OTP, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                isLoading = false;\r\n                Utility.dismissProgress();\r\n                Utility.Log(\"VERIFY_OTP\", response);\r\n                ArrayList<BrandListItem> brandListItems=new ArrayList<>();\r\n                try {\r\n                    JSONObject jObject = new JSONObject(response);\r\n                    if (jObject.getBoolean(\"status\")) {\r\n                        JSONObject jsonArray = jObject.getJSONObject(\"data\");\r\n                        preafManager.setUserToken(jsonArray.getString(\"token\"));\r\n                        Log.w(\"Tpokennnn\",jsonArray.getString(\"token\"));\r\n\r\n                        is_completed= jsonArray.getString(\"is_completed\");\r\n                        preafManager.loginStep(is_completed);\r\n\r\n                        if (is_completed.equals(\"0\"))\r\n                        {\r\n                            Intent i = new Intent(act, RegistrationActivity.class);\r\n                            i.addCategory(Intent.CATEGORY_HOME);\r\n                            i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                            startActivity(i);\r\n                            overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                            finish();\r\n                        }\r\n                        if (is_completed.equals(\"1\"))\r\n                        {\r\n                            Intent i = new Intent(act, AddBranddActivity.class);\r\n                            i.addCategory(Intent.CATEGORY_HOME);\r\n                            i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                            startActivity(i);\r\n                            overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                            finish();\r\n                        }\r\n                        if (is_completed.equals(\"2\"))\r\n                        {\r\n                            JSONArray jsonArray1 = jsonArray.getJSONArray(\"brands\");\r\n                            for (int i=0;i<jsonArray1.length();i++)\r\n                            {\r\n                                JSONObject jsonObject=jsonArray1.getJSONObject(i);\r\n                                BrandListItem brandListItemm=new BrandListItem();\r\n                                brandListItemm.setId(ResponseHandler.getString(jsonObject,\"id\"));\r\n                                brandListItemm.setName(ResponseHandler.getString(jsonObject,\"br_name\"));\r\n                                brandListItemm.setWebsite(ResponseHandler.getString(jsonObject,\"br_website\"));\r\n                                brandListItemm.setEmail(ResponseHandler.getString(jsonObject,\"br_email\"));\r\n                                brandListItemm.setAddress(ResponseHandler.getString(jsonObject,\"br_address\"));\r\n                                brandListItemm.setPhonenumber(ResponseHandler.getString(jsonObject,\"br_phone\"));\r\n                                brandListItemm.setLogo(ResponseHandler.getString(jsonObject,\"br_logo\"));\r\n                                brandListItems.add(brandListItemm);\r\n                            }\r\n\r\n                            preafManager.setAddBrandList(brandListItems);\r\n                            preafManager.setIS_Brand(true);\r\n\r\n                            if (brandListItems!=null && brandListItems.size()!=0){\r\n                                preafManager.setActiveBrand(brandListItems.get(0));\r\n                            }\r\n\r\n\r\n                            Intent i = new Intent(act, HomeActivity.class);\r\n                            i.addCategory(Intent.CATEGORY_HOME);\r\n                            i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                            startActivity(i);\r\n                            overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n                            finish();\r\n                        }\r\n                    }\r\n                    else {\r\n                        Toast.makeText(getApplicationContext(),\"Otp Dose Not Match\", Toast.LENGTH_LONG).show();\r\n\r\n                    }\r\n                }\r\n                    catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n            }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                isLoading = false;\r\n                Utility.dismissProgress();\r\n                onBackPressed();\r\n                error.printStackTrace();\r\n            }\r\n        }) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                Utility.Log(\"Verify-Header\", getHeader(CodeReUse.GET_FORM_HEADER).toString());\r\n                return getHeader(CodeReUse.GET_FORM_HEADER);\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"otp\", otp);\r\n                hashMap.put(\"phone\", mobileno);\r\n                hashMap.put(\"firebase_token\", deviceToken);\r\n                Utility.Log(\"Verify-Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n    public void TextChanger() {\r\n        EditText[] edit = {binding.otpOne, binding.otpTwo, binding.otpThree, binding.otpFour};\r\n        String OtpString = binding.otpOne.getText().toString() + binding.otpTwo.getText().toString() + binding.otpThree.getText().toString() + binding.otpFour.getText().toString();\r\n\r\n        binding.otpOne.addTextChangedListener(new GenericTextWatcher(binding.otpOne, edit));\r\n        binding.otpTwo.addTextChangedListener(new GenericTextWatcher( binding.otpTwo, edit));\r\n        binding.otpThree.addTextChangedListener(new GenericTextWatcher(binding.otpThree, edit));\r\n        binding.otpFour.addTextChangedListener(new GenericTextWatcher(binding.otpFour, edit) );\r\n\r\n\r\n//                binding.otpFour.setOnKeyListener(new View.OnKeyListener() {\r\n//\r\n//                    @Override\r\n//                    public boolean onKey(View v, int keyCode, KeyEvent event) {\r\n//                        // TODO Auto-generated method stub\r\n//                        if (binding.otpFour.getText().length() == 1)\r\n//                            VerificationOtp(OtpString.trim(), NumberShow);\r\n//                        return false;\r\n//\r\n//                    }\r\n//\r\n//                });\r\n    }\r\n    private void InsertRecord() {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.SEND_OTP, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response)\r\n            {\r\n                isLoading = false;\r\n                Utility.dismissProgress();\r\n                Utility.Log(\"Response: \", response);\r\n              //  Toast.makeText(getApplicationContext(),response,Toast.LENGTH_LONG).show();\r\n              //  preafManager.setMobileNumber(binding.mobileNumber.getText().toString());\r\n                preafManager.loginStep(\"2\");\r\n                if (ResponseHandler.isSuccess(response, null)) {\r\n                    binding.CouterText.setVisibility(View.VISIBLE);\r\n                    counter();\r\n                } else {\r\n                    JSONObject responseJson = ResponseHandler.createJsonObject(response);\r\n\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError volleyError) {\r\n                isLoading = false;\r\n                Utility.dismissProgress();\r\n                volleyError.printStackTrace();\r\n//                try {\r\n//                    String responseBody = new String(volleyError.networkResponse.data, \"utf-8\");\r\n//                    Log.e(\"REsepinERr \", responseBody);\r\n//                } catch (UnsupportedEncodingException e) {\r\n//                    e.printStackTrace();\r\n//                }\r\n\r\n            }\r\n        }) {\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Accept\", \"application/json\");\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"phone\",NumberShow);\r\n\r\n                return params;\r\n            }\r\n        };\r\n        stringRequest.setRetryPolicy(new DefaultRetryPolicy(10000,1,DefaultRetryPolicy.DEFAULT_BACKOFF_MULT));\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n\r\n    }\r\n    private void counter() {\r\n        if (countDownTimer != null) {\r\n            countDownTimer.cancel();\r\n        }\r\n        countDownTimer = new CountDownTimer(mTimeLeftInMills, 1000) {\r\n            @Override\r\n            public void onTick(long millisUntilFinished) {\r\n                mTimeLeftInMills = millisUntilFinished;\r\n                updateCountDownText();\r\n            }\r\n\r\n            @Override\r\n            public void onFinish() {\r\n\r\n                mTimerRunnig = false;\r\n                binding.ResendText.setVisibility(View.VISIBLE);\r\n                binding.CouterText.setVisibility(View.GONE);\r\n            }\r\n        }.start();\r\n\r\n        mTimerRunnig = true;\r\n        binding.ResendText.setVisibility(View.GONE);\r\n    }\r\n    private void updateCountDownText() {\r\n        int minutes = (int) (mTimeLeftInMills / 1000) / 60;\r\n        int second = (int) (mTimeLeftInMills / 1000) % 60;\r\n        String timeLeftFormeted = String.format(Locale.getDefault(), \"%02d:%02d\", minutes, second);\r\n        binding.CouterText.setText(timeLeftFormeted);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/OtpScreenActivity.java	(revision a5f3b4f0090c0b76b7b7c4f91e59e7bead54fff8)
+++ app/src/main/java/com/app/brandmania/Activity/OtpScreenActivity.java	(date 1608029237576)
@@ -50,7 +50,7 @@
 import java.util.Locale;
 import java.util.Map;
 
-public class OtpScreenActivity extends BaseActivity {
+public class OtpScreenActivity extends BaseActivity implements  alertListenerCallback{
     Activity act;
     PreafManager preafManager;
     private ActivityOtpScreenBinding binding;
@@ -193,6 +193,7 @@
 
 
                             Intent i = new Intent(act, HomeActivity.class);
+                            i.putExtra("FirstLogin","1");
                             i.addCategory(Intent.CATEGORY_HOME);
                             i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                             startActivity(i);
@@ -282,15 +283,14 @@
                 isLoading = false;
                 Utility.dismissProgress();
                 Utility.Log("Response: ", response);
-              //  Toast.makeText(getApplicationContext(),response,Toast.LENGTH_LONG).show();
-              //  preafManager.setMobileNumber(binding.mobileNumber.getText().toString());
+
                 preafManager.loginStep("2");
                 if (ResponseHandler.isSuccess(response, null)) {
                     binding.CouterText.setVisibility(View.VISIBLE);
                     counter();
                 } else {
                     JSONObject responseJson = ResponseHandler.createJsonObject(response);
-
+                    Utility.showAlert(act,ResponseHandler.getString(responseJson,"message"));
                 }
             }
         }, new Response.ErrorListener() {
@@ -359,4 +359,14 @@
         String timeLeftFormeted = String.format(Locale.getDefault(), "%02d:%02d", minutes, second);
         binding.CouterText.setText(timeLeftFormeted);
     }
+
+    @Override
+    public void alertListenerClick() {
+        Intent intent=new Intent(act, LoginActivity.class);
+        intent.addCategory(Intent.CATEGORY_HOME);
+        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        startActivity(intent);
+        overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);
+        finish();
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/app/brandmania/Activity/AddBrandMultipleActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Activity;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.graphics.Bitmap;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.WindowManager;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.androidnetworking.AndroidNetworking;\r\nimport com.androidnetworking.common.ANRequest;\r\nimport com.androidnetworking.common.Priority;\r\nimport com.androidnetworking.error.ANError;\r\nimport com.androidnetworking.interfaces.JSONObjectRequestListener;\r\nimport com.androidnetworking.interfaces.UploadProgressListener;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Connection.BaseActivity;\r\nimport com.app.brandmania.Connection.ItemSelectionInterface;\r\nimport com.app.brandmania.Fragment.bottom.ListBottomFragment;\r\nimport com.app.brandmania.Fragment.bottom.PickerFragment;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.CommonListModel;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.databinding.ActivityAddBrandMultipleBinding;\r\nimport com.app.brandmania.databinding.ActivityAddBranddBinding;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class AddBrandMultipleActivity extends BaseActivity implements ItemSelectionInterface,alertListenerCallback {\r\n    Activity act;\r\n    private ActivityAddBrandMultipleBinding binding;\r\n    public static int BRAND_CATEGORY = 0;\r\n    private String BrandTitle;\r\n    CommonListModel commonListModel;\r\n    ArrayList<BrandListItem> multiListItems=new ArrayList<>();\r\n    ArrayList<CommonListModel> BRANDTypeList = new ArrayList<>();\r\n    PreafManager preafManager;\r\n    private boolean isLoading=false;\r\n    private String is_completed=\"\";\r\n    private ListBottomFragment bottomSheetFragment;\r\n    private Bitmap selectedImagesBitmap;\r\n    private boolean isEditModeEnable = false;\r\n    private AlertDialog.Builder alertDialogBuilder;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        setTheme(R.style.AppTheme_material_theme);\r\n        super.onCreate(savedInstanceState);\r\n        act=this;\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n        binding= DataBindingUtil.setContentView(act,R.layout.activity_add_brand_multiple);\r\n        preafManager=new PreafManager(this);\r\n        alertDialogBuilder=new AlertDialog.Builder(act);\r\n        binding.websiteEdt.setText(\"https://\");\r\n        binding.BackButtonMember.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n        binding.addExpenceBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Validation();\r\n            }\r\n        });\r\n        getBrandCategory(BRAND_CATEGORY);\r\n        binding.categoryEdt.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                showFragmentList(BRAND_CATEGORY, BrandTitle, BRANDTypeList);\r\n            }\r\n        });\r\n        CodeReUse.RemoveError(binding.categoryEdt, binding.categoryEdtLayout);\r\n        CodeReUse.RemoveError(binding.nameTxt, binding.nameTxtLayout);\r\n        CodeReUse.RemoveError(binding.phoneTxt, binding.phoneTxtLayout);\r\n        CodeReUse.RemoveError(binding.addressEdt, binding.addressEdtLayout);\r\n        CodeReUse.RemoveError(binding.websiteEdt, binding.websiteEdtLayout);\r\n        CodeReUse.RemoveError(binding.emailIdEdt, binding.emailIdEdtLayout);\r\n        binding.viewImgFirst.setTag(\"0\");\r\n        binding.imgCardFirst.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (!isEditModeEnable) {\r\n                    if (binding.viewImgFirst.getTag().toString().equalsIgnoreCase(\"1\"))\r\n                        pickerView(Constant.PICKER_FIRST, true, selectedImagesBitmap);\r\n                    else\r\n                        pickerView(Constant.PICKER_FIRST, false, null);\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n    private void Validation() {\r\n        boolean isError = false;\r\n        boolean isFocus = false;\r\n\r\n        if (binding.categoryEdt.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.categoryEdtLayout.setError(getString(R.string.brandcategory_text));\r\n            binding.categoryEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.categoryEdt.requestFocus();\r\n\r\n        }\r\n        if (binding.nameTxt.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.nameTxtLayout.setError(getString(R.string.brandname_text));\r\n            binding.nameTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.nameTxt.requestFocus();\r\n\r\n        }\r\n\r\n\r\n        if (binding.addressEdt.getText().toString().length() == 0) {\r\n            isError = true;\r\n            isFocus = true;\r\n            binding.addressEdtLayout.setError(getString(R.string.enter_address));\r\n            binding.addressEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n            binding.addressEdt.requestFocus();\r\n\r\n        }\r\n        if (!binding.emailIdEdt.getText().toString().equals(\"\")) {\r\n            if (!CodeReUse.isEmailValid(binding.emailIdEdt.getText().toString())) {\r\n                isError = true;\r\n                isFocus = true;\r\n                binding.emailIdEdtLayout.setError(getString(R.string.enter_valid_email_address));\r\n                binding.emailIdEdtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorNavText)));\r\n                binding.emailIdEdt.requestFocus();\r\n\r\n            }\r\n            else\r\n            {\r\n\r\n            }\r\n\r\n        }\r\n        if (!binding.phoneTxt.getText().toString().equals(\"\")) {\r\n            if (binding.phoneTxt.getText().toString().length() < 10) {\r\n                binding.phoneTxtLayout.setError(getString(R.string.validphoneno_txt));\r\n                binding.phoneTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n                binding.phoneTxt.requestFocus();\r\n                return;\r\n            }\r\n\r\n        }\r\n        else\r\n        {\r\n            if (binding.phoneTxt.getText().toString().equals(\"\"))\r\n            {\r\n                binding.phoneTxtLayout.setError(getString(R.string.entermobileno_text));\r\n                binding.phoneTxtLayout.setErrorTextColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimary)));\r\n                binding.phoneTxt.requestFocus();\r\n                return;\r\n            }\r\n\r\n        }\r\n        if (!isError) {\r\n            Bitmap bitmap = null;\r\n            if (selectedImagesBitmap != null) {\r\n                bitmap = selectedImagesBitmap;\r\n            }\r\n            Bitmap bitmap1 = null;\r\n            if (selectedImagesBitmap != null) {\r\n                bitmap1 = selectedImagesBitmap;\r\n            }\r\n            addBrand(bitmap,bitmap1);\r\n        }\r\n\r\n    }\r\n    public void showFragmentList(int callingFlag, String title, ArrayList<CommonListModel> datalist) {\r\n        bottomSheetFragment = new ListBottomFragment();\r\n        Log.e(\"Size---\", String.valueOf(datalist.size()));\r\n        bottomSheetFragment.setListData(callingFlag, title, datalist);\r\n        if (bottomSheetFragment.isVisible()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        if (bottomSheetFragment.isAdded()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        bottomSheetFragment.show(getSupportFragmentManager(), bottomSheetFragment.getTag());\r\n    }\r\n    private void addBrand(Bitmap img,Bitmap img1) {\r\n        if (isLoading)\r\n            return;\r\n        isLoading = true;\r\n        Utility.showProgress(act);\r\n        Log.e(\"API\", APIs.ADD_BRAND);\r\n        Log.e(\"API\", preafManager.getUserToken());\r\n        File img1File = null;\r\n        if (img != null) {\r\n            img1File = CodeReUse.createFileFromBitmap(act, \"photo.jpeg\", img);\r\n        }\r\n        File img1File1 = null;\r\n        if (img1 != null) {\r\n            img1File1= CodeReUse.createFileFromBitmap(act, \"photo.jpeg\", img1);\r\n        }\r\n\r\n        ANRequest.MultiPartBuilder request = AndroidNetworking.upload(APIs.ADD_BRAND)\r\n                .addHeaders(\"Accept\", \"application/json\")\r\n                .addHeaders(\"Content-Type\", \"application/json\")\r\n                .addHeaders(\"Authorization\", \"Bearer\"+preafManager.getUserToken())\r\n                .addMultipartParameter(\"br_category\", commonListModel.getId())\r\n                .addMultipartParameter(\"br_name\", binding.nameTxt.getText().toString())\r\n                .addMultipartParameter(\"br_phone\", binding.phoneTxt.getText().toString())\r\n                .addMultipartParameter(\"br_address\", binding.addressEdt.getText().toString())\r\n                .addMultipartParameter(\"br_website\", binding.websiteEdt.getText().toString())\r\n                .addMultipartParameter(\"br_email\", binding.emailIdEdt.getText().toString())\r\n                .setTag(\"Add User\")\r\n                .setPriority(Priority.HIGH);\r\n\r\n        if (img1File != null) {\r\n            request.addMultipartFile(\"br_logo\", img1File);\r\n            Log.e(\"br_logo\", String.valueOf(img1File));\r\n        }\r\n\r\n        if (img1File1 != null) {\r\n            request.addMultipartFile(\"frame\", img1File1);\r\n            Log.e(\"frame\", String.valueOf(img1File1));\r\n        }\r\n\r\n        request.build().setUploadProgressListener(new UploadProgressListener() {\r\n            @Override\r\n            public void onProgress(long bytesUploaded, long totalBytes) {\r\n                // do anything with progress\r\n            }\r\n        })\r\n                .getAsJSONObject(new JSONObjectRequestListener() {\r\n                    @Override\r\n                    public void onResponse(JSONObject response) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        Utility.Log(\"Verify-Response\", response);\r\n                        ArrayList<BrandListItem> brandListItems=new ArrayList<>();\r\n                        try {\r\n\r\n\r\n                            if (response.getBoolean(\"status\")) {\r\n\r\n\r\n                                JSONObject jsonArray = response.getJSONObject(\"data\");\r\n                                is_completed= jsonArray.getString(\"is_completed\");\r\n\r\n                                alertDialogBuilder.setMessage(ResponseHandler.getString(response, \"message\"));\r\n                                alertDialogBuilder.setPositiveButton(\"Ok\", new DialogInterface.OnClickListener() {\r\n                                    @Override\r\n                                    public void onClick(DialogInterface arg0, int arg1) {\r\n                                        preafManager.loginStep(is_completed);\r\n                                        if (is_completed.equals(\"2\"))\r\n                                        {\r\n                                            getBrandList(ResponseHandler.getString(jsonArray,\"brand_id\"));\r\n                                        }\r\n                                    }\r\n                                });\r\n                                AlertDialog alertDialog = alertDialogBuilder.create();\r\n                                alertDialog.setCancelable(false);\r\n                                alertDialog.show();\r\n                            }\r\n                        }\r\n                        catch (JSONException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(ANError error) {\r\n                        isLoading = false;\r\n                        Utility.dismissProgress();\r\n                        if (error.getErrorCode() != 0) {\r\n                            Log.e(\"onError errorCode : \", String.valueOf(error.getErrorCode()));\r\n                            Log.e(\"onError errorBody : \", error.getErrorBody());\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        } else {\r\n                            Log.e(\"onError errorDetail : \", error.getErrorDetail());\r\n                        }\r\n                    }\r\n                });\r\n\r\n    }\r\n    private void getBrandList(String brand_id) {\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Log.e(\"addbrandresponce\", response);\r\n                int toSetActiveBrand=0;\r\n                ArrayList<BrandListItem> brandListItems = new ArrayList<>();\r\n                try {\r\n                    JSONObject res = new JSONObject(response);\r\n\r\n                    JSONArray jsonArray1 = res.getJSONArray(\"data\");\r\n                    for (int i = 0; i < jsonArray1.length(); i++) {\r\n                        JSONObject jsonObject = jsonArray1.getJSONObject(i);\r\n                        BrandListItem brandListItemm = new BrandListItem();\r\n                        brandListItemm.setId(ResponseHandler.getString(jsonObject, \"id\"));\r\n                        if (brand_id.equals(brandListItemm.getId())){\r\n                            toSetActiveBrand=i;\r\n                        }\r\n                        brandListItemm.setCategoryId(ResponseHandler.getString(jsonObject, \"br_category_id\"));\r\n                        brandListItemm.setCategoryName(ResponseHandler.getString(jsonObject, \"br_category_name\"));\r\n                        brandListItemm.setName(ResponseHandler.getString(jsonObject, \"br_name\"));\r\n                        brandListItemm.setPhonenumber(ResponseHandler.getString(jsonObject, \"br_phone\"));\r\n                        brandListItemm.setWebsite(ResponseHandler.getString(jsonObject, \"br_website\"));\r\n                        brandListItemm.setEmail(ResponseHandler.getString(jsonObject, \"br_email\"));\r\n                        brandListItemm.setAddress(ResponseHandler.getString(jsonObject, \"br_address\"));\r\n                        brandListItemm.setLogo(ResponseHandler.getString(jsonObject, \"br_logo\"));\r\n                        brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, \"is_frame\"));\r\n                        brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, \"frame_message\"));\r\n                        brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, \"fream_base_url\"));\r\n                        brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, \"is_payment_pending\"));\r\n                        brandListItemm.setPayment_message(ResponseHandler.getString(jsonObject, \"payment_message\"));\r\n                        brandListItemm.setPackagename(ResponseHandler.getString(jsonObject, \"package\"));\r\n                        brandListItemm.setPackagemessage(ResponseHandler.getString(jsonObject, \"package_message\"));\r\n                        brandListItemm.setNo_of_total_image(ResponseHandler.getString(jsonObject, \"no_of_img\"));\r\n                        brandListItemm.setNo_of_used_image(ResponseHandler.getString(jsonObject, \"no_of_used_img\"));\r\n                        brandListItemm.setNo_of_frame(ResponseHandler.getString(jsonObject, \"no_of_frame\"));\r\n                        brandListItemm.setNo_of_remaining(ResponseHandler.getString(jsonObject, \"remaining_img\"));\r\n                        brandListItemm.setExpiery_date(ResponseHandler.getString(jsonObject, \"expire_date\"));\r\n\r\n\r\n\r\n                        JSONArray jsonArray = jsonObject.getJSONArray(\"br_frame\");\r\n                        ArrayList<FrameItem> frameItems = null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject, \"fream_base_url\") + \"/\" + ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n\r\n                        brandListItemm.setFrame(frameItems);\r\n                        brandListItems.add(brandListItemm);\r\n                    }\r\n\r\n\r\n                    preafManager.setAddBrandList(brandListItems);\r\n                    preafManager.setIS_Brand(true);\r\n\r\n                    if (brandListItems.size() != 0) {\r\n                        preafManager.setActiveBrand(brandListItems.get(toSetActiveBrand));\r\n                    }\r\n\r\n\r\n                    Intent i = new Intent(act, HomeActivity.class);\r\n                    startActivity(i);\r\n                    overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n                    finish();\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n                        String body;\r\n                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n                        Log.e(\"Error \", body);\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\", \"Bearer \" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(getApplicationContext());\r\n        queue.add(stringRequest);\r\n    }\r\n    private void getBrandCategory(int flag) {\r\n        String apiUrl = \"\";\r\n        int requestedMethod = 0;\r\n\r\n        if (flag == BRAND_CATEGORY) {\r\n            apiUrl = APIs.GET_BRAND_CATEGORY;\r\n            requestedMethod = Request.Method.POST;\r\n        }\r\n\r\n        Utility.Log(\"API : \", apiUrl);\r\n\r\n        StringRequest request = new StringRequest(requestedMethod, apiUrl, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n\r\n\r\n                Utility.Log(flag + \"- Response : \", response);\r\n                try {\r\n                    if (ResponseHandler.isSuccess(response, null)) {\r\n                        JSONObject responseJson = ResponseHandler.createJsonObject(response);\r\n                        JSONArray jsonArray = ResponseHandler.getJSONArray(responseJson, \"data\");\r\n                        Log.e(\"jsonArray-\", jsonArray.toString());\r\n                        for (int i = 0; i < jsonArray.length(); i++) {\r\n                            JSONObject itemObj = jsonArray.getJSONObject(i);\r\n                            CommonListModel listModel = new CommonListModel();\r\n                            listModel.setLayoutType(CommonListModel.LAYOUT_BLOCK);\r\n                            listModel.setId(ResponseHandler.getString(itemObj, \"id\"));\r\n                            listModel.setName(ResponseHandler.getString(itemObj, \"biz_cat_name\"));\r\n                            BRANDTypeList.add(listModel);\r\n                        }\r\n                        Log.w(\"Size\", String.valueOf(BRANDTypeList.size()));\r\n                    }\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                error.printStackTrace();\r\n            }\r\n        }) {\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\"+preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() throws AuthFailureError {\r\n                HashMap<String, String> map = new HashMap<>();\r\n\r\n\r\n                Utility.Log(\"Params : \", map.toString());\r\n                return map;\r\n            }\r\n        };\r\n        RequestQueue queue = Volley.newRequestQueue(this);\r\n        queue.add(request);\r\n\r\n    }\r\n    private void pickerView(int actionId, boolean viewMode, Bitmap selectedBitmap) {\r\n        PickerFragment pickerFragment = new PickerFragment(act);\r\n        pickerFragment.setEnableViewMode(viewMode);\r\n        pickerFragment.setActionId(actionId);\r\n\r\n        if (viewMode) {\r\n            pickerFragment.setSelectedBitmapForFullView(selectedBitmap);\r\n        }\r\n        PickerFragment.HandlerImageLoad imageLoad = new PickerFragment.HandlerImageLoad() {\r\n            @Override\r\n            public void onGalleryResult(int flag, Bitmap bitmap) {\r\n                if (flag == Constant.PICKER_FIRST) {\r\n                    binding.viewImgFirst.setImageBitmap(bitmap);\r\n                    binding.imgEmptyStateFirst.setVisibility(View.GONE);\r\n                    binding.actionDeleteFirst.setVisibility(View.VISIBLE);\r\n                    selectedImagesBitmap = bitmap;\r\n                    binding.viewImgFirst.setTag(\"1\");\r\n                    if (!isEditModeEnable) {\r\n\r\n                    }\r\n                    binding.viewImgFirst.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n\r\n\r\n            }\r\n        };\r\n        pickerFragment.setImageLoad(imageLoad);\r\n        pickerFragment.show(getSupportFragmentManager(), pickerFragment.getTag());\r\n    }\r\n    @Override public void onItemSelection(int calledFlag, int position, CommonListModel listModel) {\r\n        if (bottomSheetFragment != null && bottomSheetFragment.isVisible()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        if (calledFlag == BRAND_CATEGORY) {\r\n            binding.categoryEdt.setText(listModel.getName());\r\n            commonListModel=listModel;\r\n        }\r\n    }\r\n    @Override\r\n    public void onBackPressed() {CodeReUse.activityBackPress(act);\r\n    }\r\n    private void requestAgain() {\r\n        ActivityCompat.requestPermissions(act,\r\n                new String[]{Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                        Manifest.permission.READ_EXTERNAL_STORAGE},\r\n                CodeReUse.ASK_PERMISSSION);\r\n    }\r\n    @Override public void alertListenerClick() {\r\n        requestAgain();\r\n    }\r\n    public void captureScreenShort()\r\n    {\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_SECURE, WindowManager.LayoutParams.FLAG_SECURE);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Activity/AddBrandMultipleActivity.java	(revision a5f3b4f0090c0b76b7b7c4f91e59e7bead54fff8)
+++ app/src/main/java/com/app/brandmania/Activity/AddBrandMultipleActivity.java	(date 1608029237584)
@@ -341,6 +341,7 @@
                         brandListItemm.setAddress(ResponseHandler.getString(jsonObject, "br_address"));
                         brandListItemm.setLogo(ResponseHandler.getString(jsonObject, "br_logo"));
                         brandListItemm.setIs_frame(ResponseHandler.getString(jsonObject, "is_frame"));
+                        brandListItemm.setPackage_id(ResponseHandler.getString(jsonObject, "package_id"));
                         brandListItemm.setFrame_message(ResponseHandler.getString(jsonObject, "frame_message"));
                         brandListItemm.setFrambaseyrl(ResponseHandler.getString(jsonObject, "fream_base_url"));
                         brandListItemm.setIs_payment_pending(ResponseHandler.getString(jsonObject, "is_payment_pending"));
@@ -361,7 +362,7 @@
                         for (int j = 0; j < jsonArray.length(); j++) {
                             JSONObject jsonObject1 = jsonArray.getJSONObject(j);
                             FrameItem frameItem = new FrameItem();
-                            frameItem.setFrame1(ResponseHandler.getString(jsonObject, "fream_base_url") + "/" + ResponseHandler.getString(jsonObject1, "frame_path"));
+                            frameItem.setFrame1(ResponseHandler.getString(jsonObject1, "frame_path"));
                             frameItem.setFrameId(ResponseHandler.getString(jsonObject1, "id"));
 
                             frameItems.add(frameItem);
Index: app/src/main/java/com/app/brandmania/Common/ResponseHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Common;\r\n\r\nimport android.content.Context;\r\nimport android.util.Log;\r\n\r\n\r\nimport com.app.brandmania.Model.SlideSubItem;\r\nimport com.app.brandmania.Model.SliderItem;\r\nimport com.google.gson.Gson;\r\nimport com.app.brandmania.Adapter.MultiListItem;\r\nimport com.app.brandmania.Model.DashBoardItem;\r\nimport com.app.brandmania.Model.DownloadFavoriteItemList;\r\nimport com.app.brandmania.Model.FrameItem;\r\nimport com.app.brandmania.Model.ImageList;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.ViewPagerItem;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ResponseHandler {\r\n    Context context;\r\n\r\n\r\n    public ResponseHandler(Context context) {\r\n        this.context = context;\r\n    }\r\n\r\n    public static ArrayList<String> getListFromJSon(JSONArray food_types) {\r\n        ArrayList<String> strings = new ArrayList<>();\r\n\r\n        if (food_types != null) {\r\n            for (int i = 0; i < food_types.length(); i++) {\r\n                try {\r\n                    strings.add(food_types.getString(i));\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n\r\n            return strings;\r\n        } else {\r\n\r\n            return null;\r\n        }\r\n\r\n    }\r\n\r\n    public static boolean isSuccess(String strResponse, JSONObject jsonResponse) {\r\n        if (strResponse != null) {\r\n            JSONObject jsonObject = createJsonObject(strResponse);\r\n            if (jsonObject != null) {\r\n                return getBool(jsonObject, \"status\");\r\n            }\r\n        } else if (jsonResponse != null) {\r\n            return getBool(jsonResponse, \"status\");\r\n        }\r\n        return false;\r\n    }\r\n    public static JSONObject createJsonObject(String response) {\r\n        JSONObject jsonObject;\r\n        try {\r\n            jsonObject = new JSONObject(response);\r\n            return jsonObject;\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return null;\r\n    }\r\n    public static String getString(JSONObject jObj, String strKey) {\r\n        try {\r\n            return (jObj.has(strKey) && !jObj.isNull(strKey)) ? jObj.getString(strKey) : \"\";\r\n        } catch (JSONException e) {\r\n            return \"\";\r\n        }\r\n    }\r\n    public static int getInt(JSONObject jObj, String strKey) {\r\n        try {\r\n            return (jObj.has(strKey) && !jObj.isNull(strKey)) ? jObj.getInt(strKey) : 0;\r\n        } catch (JSONException e) {\r\n            return 0;\r\n        }\r\n    }\r\n    public static float getFloat(JSONObject jObj, String strKey) {\r\n        try {\r\n            return (jObj.has(strKey) && !jObj.isNull(strKey)) ? (float) jObj.getDouble(strKey) : 0;\r\n        } catch (JSONException e) {\r\n            return 0;\r\n        }\r\n    }\r\n    public static boolean getBool(JSONObject jObj, String strKey) {\r\n        try {\r\n            return (jObj.has(strKey) && !jObj.isNull(strKey)) && jObj.getBoolean(strKey);\r\n        } catch (JSONException e) {\r\n            return false;\r\n        }\r\n    }\r\n    public static JSONObject getJSONObject(JSONObject jObj, String strKey) {\r\n        try {\r\n            return (jObj.has(strKey) && !jObj.isNull(strKey)) ? jObj.getJSONObject(strKey) : new JSONObject();\r\n        } catch (JSONException e) {\r\n            return new JSONObject();\r\n        }\r\n    }\r\n    public static JSONArray getJSONArray(JSONObject jObj, String strKey) {\r\n        try {\r\n            return (jObj.has(strKey) && !jObj.isNull(strKey)) ? jObj.getJSONArray(strKey) : new JSONArray();\r\n        } catch (JSONException e) {\r\n            return new JSONArray();\r\n        }\r\n    }\r\n    public static ArrayList<BrandListItem> HandleGetBrandList(JSONObject jsonObject) {\r\n        ArrayList<BrandListItem> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        BrandListItem examModel = new BrandListItem();\r\n                        examModel.setLayoutType(BrandListItem.LAYOUT_BRANDLIST);\r\n                        examModel.setId(getString(dataJsonObject,\"id\"));\r\n                        examModel.setCategoryId(getString(dataJsonObject, \"br_category_id\"));\r\n                        examModel.setCategoryName(getString(dataJsonObject, \"br_category_name\"));\r\n                        examModel.setName(getString(dataJsonObject, \"br_name\"));\r\n                        examModel.setPhonenumber(getString(dataJsonObject, \"br_phone\"));\r\n                        examModel.setWebsite(getString(dataJsonObject, \"br_website\"));\r\n                        examModel.setEmail(getString(dataJsonObject, \"br_email\"));\r\n                        examModel.setAddress(getString(dataJsonObject, \"br_address\"));\r\n                        examModel.setLogo(getString(dataJsonObject,\"br_logo\"));\r\n                        examModel.setIs_frame(getString(dataJsonObject, \"is_frame\"));\r\n                        examModel.setFrame_message(getString(dataJsonObject, \"frame_message\"));\r\n                        examModel.setFrambaseyrl(getString(dataJsonObject, \"fream_base_url\"));\r\n                        examModel.setIs_payment_pending(getString(dataJsonObject, \"is_payment_pending\"));\r\n                        examModel.setPayment_message(getString(dataJsonObject, \"payment_message\"));\r\n                        examModel.setPackagename(getString(dataJsonObject, \"package\"));\r\n                        examModel.setPackagemessage(getString(dataJsonObject, \"package_message\"));\r\n                        examModel.setNo_of_total_image(getString(dataJsonObject, \"no_of_img\"));\r\n                        examModel.setNo_of_used_image(getString(dataJsonObject, \"no_of_used_img\"));\r\n                        examModel.setNo_of_frame(getString(dataJsonObject, \"no_of_frame\"));\r\n                        examModel.setNo_of_remaining(getString(dataJsonObject, \"remaining_img\"));\r\n                        examModel.setExpiery_date(getString(dataJsonObject, \"expire_date\"));\r\n                        JSONArray jsonArray = dataJsonObject.getJSONArray(\"br_frame\");\r\n                        ArrayList<FrameItem>frameItems=null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n                        Gson gson=new Gson();\r\n                        Log.e(\"Viewww\",gson.toJson(frameItems));\r\n                        examModel.setFrame(frameItems);\r\n                        strings.add(examModel);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n    public static ArrayList<ViewPagerItem> HandleGetBanneList(JSONObject jsonObject) {\r\n        ArrayList<ViewPagerItem> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        ViewPagerItem examModel = new ViewPagerItem();\r\n\r\n                        examModel.setId(getString(dataJsonObject, \"id\"));\r\n                        examModel.setSliderImageUrl(getString(dataJsonObject, \"banner_photo\"));\r\n                        examModel.setRedirection(getString(dataJsonObject, \"redirection\"));\r\n                        examModel.setBannerstatus(getString(dataJsonObject, \"banner_status\"));\r\n                        examModel.setPosition(getString(dataJsonObject, \"position\"));\r\n                        strings.add(examModel);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n    public static ArrayList<DashBoardItem> HandleGetImageCategory(JSONObject jsonObject) throws JSONException {\r\n        ArrayList<DashBoardItem> string = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            JSONArray datajsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!datajsonArray.isNull(0) && datajsonArray.length() != 0) {\r\n                string = new ArrayList<>();\r\n                for (int i = 0; i < datajsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject datajsonObject = datajsonArray.getJSONObject(i);\r\n                        DashBoardItem model = new DashBoardItem();\r\n\r\n                        model.setId(getString(datajsonObject, \"id\"));\r\n                        model.setName(getString(datajsonObject, \"img_cat_name\"));\r\n                        model.setDescription(getString(datajsonObject, \"img_cat_desc\"));\r\n                        model.setTag(getString(datajsonObject, \"img_cat_tagd\"));\r\n                        JSONArray detailjsonArray = getJSONArray(datajsonObject, \"images\");\r\n                        ArrayList<ImageList> stringg = null;\r\n                        if (!detailjsonArray.isNull(0) && detailjsonArray.length() != 0) {\r\n                            stringg = new ArrayList<>();\r\n                            for (int j = 0; j < detailjsonArray.length(); j++) {\r\n                                try {\r\n                                    JSONObject detailjsonobject = detailjsonArray.getJSONObject(j);\r\n                                    ImageList data = new ImageList();\r\n                                    data.setLayoutType(ImageList.LAYOUT_IMAGE_CATEGORY);\r\n                                    data.setId(getString(detailjsonobject, \"id\"));\r\n                                    data.setImagecatid(getString(detailjsonobject, \"img_cat_id\"));\r\n                                    data.setImageid(getString(detailjsonobject, \"img_id\"));\r\n                                    data.setLogo(getString(detailjsonobject, \"img_thumb_path\"));\r\n                                    data.setFrame(getString(detailjsonobject, \"img_path\"));\r\n\r\n                                    stringg.add(data);\r\n                                } catch (JSONException e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        model.setImageLists(stringg);\r\n\r\n                        if (stringg!=null &&  stringg.size()!=0)\r\n                        string.add(model);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        return string;\r\n    }\r\n    public static ArrayList<ImageList> HandleGetImageByIdCategory(JSONObject jsonObject) {\r\n        ArrayList<ImageList> string = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            JSONArray datajsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!datajsonArray.isNull(0) && datajsonArray.length() != 0) {\r\n                string = new ArrayList<>();\r\n                for (int i = 0; i < datajsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject datajsonObject = datajsonArray.getJSONObject(i);\r\n                        ImageList model = new ImageList();\r\n                        model.setLayoutType(ImageList.LAYOUT_IMAGE_CATEGORY_BY_ID);\r\n                        model.setName(getString(datajsonObject, \"title\"));\r\n                        model.setId(getString(datajsonObject,\"img_cat_map_id\"));\r\n                        model.setImagecatid(getString(datajsonObject, \"img_cat_id\"));\r\n                        model.setImageid(getString(datajsonObject, \"image_id\"));\r\n                        model.setLogo(getString(datajsonObject, \"img_thumb_path\"));\r\n                        model.setFrame(getString(datajsonObject, \"img_path\"));\r\n                        string.add(model);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        return string;\r\n    }\r\n    public static ArrayList<MultiListItem> HandleFaqResponse(JSONObject jsonObject) {\r\n        ArrayList<MultiListItem> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        MultiListItem faqModel = new MultiListItem();\r\n                        faqModel.setLayoutType(MultiListItem.LAYOUT_FAQ);\r\n                        faqModel.setQuestion(getString(dataJsonObject, \"question\"));\r\n                        faqModel.setAnswer(getString(dataJsonObject, \"answer\"));\r\n                        strings.add(faqModel);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n    public static ArrayList<DownloadFavoriteItemList> HandleGetIDownloadFavoritList(JSONObject jsonObject) {\r\n        ArrayList<DownloadFavoriteItemList> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        DownloadFavoriteItemList downloadFavoriteItemList = new DownloadFavoriteItemList();\r\n                        downloadFavoriteItemList.setLayoutType(downloadFavoriteItemList.LAYOUT_DOWNLOAD);\r\n                        downloadFavoriteItemList.setName(getString(dataJsonObject, \"image_title\"));\r\n                        downloadFavoriteItemList.setImage(getString(dataJsonObject, \"img_path\"));\r\n                        downloadFavoriteItemList.setFrame(getString(dataJsonObject, \"frame_path\"));\r\n                        strings.add(downloadFavoriteItemList);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n//    public static ArrayList<FrameItem> HandleGetFrame(JSONObject jsonObject) {\r\n//        ArrayList<FrameItem> strings = null;\r\n//        if (isSuccess(null, jsonObject)) {\r\n//            //list fetch\r\n//            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n//            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n//                strings = new ArrayList<>();\r\n//                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n//                    try {\r\n//                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n//                        FrameItem frameItem = new FrameItem();\r\n//                        frameItem.setFrame1(jsonObject.getString(\"message\")+\"/\"+ResponseHandler.getString(dataJsonObject, \"frame_path\"));\r\n//                        frameItem.setFrameId(ResponseHandler.getString(dataJsonObject, \"id\"));\r\n//\r\n//                        strings.add(frameItem);\r\n//                    } catch (JSONException e) {\r\n//                        e.printStackTrace();\r\n//                    }\r\n//                }\r\n//            }\r\n//\r\n//        }\r\n//\r\n//        return strings;\r\n//    }\r\npublic static ArrayList<FrameItem> HandleGetFrame(JSONObject jsonObject) {\r\n    ArrayList<FrameItem> strings = null;\r\n    if (isSuccess(null, jsonObject)) {\r\n        //list fetch\r\n        JSONObject datajsonobject = getJSONObject(jsonObject, \"data\");\r\n        JSONArray dataJsonArray = getJSONArray(datajsonobject, \"frames\");\r\n        if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n            strings = new ArrayList<>();\r\n            for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                try {\r\n                    JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                    FrameItem frameItem = new FrameItem();\r\n                    frameItem.setFrame1(ResponseHandler.getString(dataJsonObject, \"frame_path\"));\r\n                    frameItem.setFrameId(ResponseHandler.getString(dataJsonObject, \"id\"));\r\n\r\n                    strings.add(frameItem);\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return strings;\r\n}\r\n\r\n    public static ArrayList<DownloadFavoriteItemList> HandleGetIDownloadFavoritGrid(JSONObject jsonObject) {\r\n        ArrayList<DownloadFavoriteItemList> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        DownloadFavoriteItemList downloadFavoriteItemList = new DownloadFavoriteItemList();\r\n                        downloadFavoriteItemList.setLayoutType(downloadFavoriteItemList.LAYOUT_DOWNLOADGRID);\r\n                        downloadFavoriteItemList.setName(getString(dataJsonObject, \"image_title\"));\r\n                        downloadFavoriteItemList.setImage(getString(dataJsonObject, \"img_path\"));\r\n                        downloadFavoriteItemList.setFrame(getString(dataJsonObject, \"frame_path\"));\r\n                        strings.add(downloadFavoriteItemList);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n    public static ArrayList<DownloadFavoriteItemList> HandleGetIFavoritList(JSONObject jsonObject) {\r\n        ArrayList<DownloadFavoriteItemList> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        DownloadFavoriteItemList downloadFavoriteItemList = new DownloadFavoriteItemList();\r\n                        downloadFavoriteItemList.setLayoutType(downloadFavoriteItemList.LAYOUT_FAVOURIT);\r\n                        downloadFavoriteItemList.setName(getString(dataJsonObject, \"image_title\"));\r\n                        downloadFavoriteItemList.setImage(getString(dataJsonObject, \"img_path\"));\r\n                        downloadFavoriteItemList.setFrame(getString(dataJsonObject, \"frame_path\"));\r\n                        strings.add(downloadFavoriteItemList);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n    public static ArrayList<DownloadFavoriteItemList> HandleGetIFavoritListGrid(JSONObject jsonObject) {\r\n        ArrayList<DownloadFavoriteItemList> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        DownloadFavoriteItemList downloadFavoriteItemList = new DownloadFavoriteItemList();\r\n                        downloadFavoriteItemList.setLayoutType(downloadFavoriteItemList.LAYOUT_FAVOURITGRID);\r\n                        downloadFavoriteItemList.setName(getString(dataJsonObject, \"image_title\"));\r\n                        downloadFavoriteItemList.setImage(getString(dataJsonObject, \"img_path\"));\r\n                        downloadFavoriteItemList.setFrame(getString(dataJsonObject, \"frame_path\"));\r\n                        strings.add(downloadFavoriteItemList);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n    public static ArrayList<BrandListItem> HandleGetNotificationList(JSONObject jsonObject) {\r\n        ArrayList<BrandListItem> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        BrandListItem brandListItem = new BrandListItem();\r\n                        brandListItem.setLayoutType(brandListItem.LAYOUT_NOTIFICATIONlIST);\r\n                        brandListItem.setMessage(getString(dataJsonObject, \"message\"));\r\n                        brandListItem.setDate(getString(dataJsonObject, \"date\"));\r\n                        brandListItem.setTime(getString(dataJsonObject, \"time\"));\r\n                        strings.add(brandListItem);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n    public static ArrayList<SliderItem> HandleGetPackageList(JSONObject jsonObject) {\r\n        ArrayList<SliderItem> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        SliderItem sliderItem = new SliderItem();\r\n                        sliderItem.setPackageid(getString(dataJsonObject,\"id\"));\r\n                        sliderItem.setPriceForPay(getString(dataJsonObject, \"rate\"));\r\n                        sliderItem.setPackageTitle(getString(dataJsonObject, \"name\"));\r\n                        sliderItem.setTemplateTitle(getString(dataJsonObject, \"frame_counter\"));\r\n                        sliderItem.setImageTitle(getString(dataJsonObject, \"img_counter\"));\r\n                        sliderItem.setPayTitle(getString(dataJsonObject, \"rate\"));\r\n                        JSONArray subPackagejsonArray = getJSONArray(dataJsonObject, \"service\");\r\n                        ArrayList<SlideSubItem> stringg = null;\r\n                        if (!subPackagejsonArray.isNull(0) && subPackagejsonArray.length() != 0) {\r\n                            stringg = new ArrayList<>();\r\n                            for (int j = 0; j < subPackagejsonArray.length(); j++) {\r\n                                try {\r\n                                    JSONObject detailjsonobject = subPackagejsonArray.getJSONObject(j);\r\n                                    SlideSubItem slideSubItem = new SlideSubItem();\r\n                                    slideSubItem.setId(getString(detailjsonobject, \"id\"));\r\n                                    slideSubItem.setName(getString(detailjsonobject, \"name\"));\r\n                                    slideSubItem.setDescription(getString(detailjsonobject, \"description\"));\r\n\r\n                                    stringg.add(slideSubItem);\r\n                                } catch (JSONException e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n                        sliderItem.setSlideSubItems(stringg);\r\n                        if (stringg!=null &&  stringg.size()!=0)\r\n                        strings.add(sliderItem);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n\r\n    public static ArrayList<BrandListItem> HandleGetBrandById(JSONObject jsonObject) {\r\n        ArrayList<BrandListItem> strings = null;\r\n        if (isSuccess(null, jsonObject)) {\r\n            //list fetch\r\n            JSONArray dataJsonArray = getJSONArray(jsonObject, \"data\");\r\n\r\n            if (!dataJsonArray.isNull(0) && dataJsonArray.length() != 0) {\r\n                strings = new ArrayList<>();\r\n                for (int i = 0; i < dataJsonArray.length(); i++) {\r\n                    try {\r\n                        JSONObject dataJsonObject = dataJsonArray.getJSONObject(i);\r\n                        BrandListItem examModel = new BrandListItem();\r\n                        examModel.setLayoutType(BrandListItem.LAYOUT_BRANDLIST);\r\n                        examModel.setId(getString(dataJsonObject,\"id\"));\r\n                        examModel.setCategoryId(getString(dataJsonObject, \"br_category_id\"));\r\n                        examModel.setCategoryName(getString(dataJsonObject, \"br_category_name\"));\r\n                        examModel.setName(getString(dataJsonObject, \"br_name\"));\r\n                        examModel.setPhonenumber(getString(dataJsonObject, \"br_phone\"));\r\n                        examModel.setWebsite(getString(dataJsonObject, \"br_website\"));\r\n                        examModel.setEmail(getString(dataJsonObject, \"br_email\"));\r\n                        examModel.setAddress(getString(dataJsonObject, \"br_address\"));\r\n                        examModel.setLogo(getString(dataJsonObject,\"br_logo\"));\r\n                        examModel.setIs_frame(getString(dataJsonObject, \"is_frame\"));\r\n                        examModel.setFrame_message(getString(dataJsonObject, \"frame_message\"));\r\n                        examModel.setFrambaseyrl(getString(dataJsonObject, \"fream_base_url\"));\r\n                        examModel.setIs_payment_pending(getString(dataJsonObject, \"is_payment_pending\"));\r\n                        examModel.setPayment_message(getString(dataJsonObject, \"payment_message\"));\r\n                        examModel.setPackagename(getString(dataJsonObject, \"package\"));\r\n                        examModel.setPackagemessage(getString(dataJsonObject, \"package_message\"));\r\n                        examModel.setNo_of_total_image(getString(dataJsonObject, \"img_counter\"));\r\n                        examModel.setNo_of_used_image(getString(dataJsonObject, \"no_of_used_img\"));\r\n                        examModel.setNo_of_frame(getString(dataJsonObject, \"frame_counter\"));\r\n                        examModel.setNo_of_remaining(getString(dataJsonObject, \"remaining_img\"));\r\n                        examModel.setExpiery_date(getString(dataJsonObject, \"expire_date\"));\r\n                        examModel.setPackage_id(getString(dataJsonObject, \"package_id\"));\r\n                        examModel.setRate(getString(dataJsonObject, \"rate\"));\r\n                        examModel.setDuration(getString(dataJsonObject, \"duration\"));\r\n                        JSONArray jsonArray = dataJsonObject.getJSONArray(\"br_frame\");\r\n                        ArrayList<FrameItem>frameItems=null;\r\n                        frameItems = new ArrayList<>();\r\n                        for (int j = 0; j < jsonArray.length(); j++) {\r\n                            JSONObject jsonObject1 = jsonArray.getJSONObject(j);\r\n                            FrameItem frameItem = new FrameItem();\r\n                            frameItem.setFrame1(ResponseHandler.getString(jsonObject1, \"frame_path\"));\r\n                            frameItem.setFrameId(ResponseHandler.getString(jsonObject1, \"id\"));\r\n\r\n\r\n                            frameItems.add(frameItem);\r\n                        }\r\n                        Gson gson=new Gson();\r\n                        Log.e(\"Viewww\",gson.toJson(frameItems));\r\n                        examModel.setFrame(frameItems);\r\n                        strings.add(examModel);\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return strings;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Common/ResponseHandler.java	(revision a5f3b4f0090c0b76b7b7c4f91e59e7bead54fff8)
+++ app/src/main/java/com/app/brandmania/Common/ResponseHandler.java	(date 1608028286552)
@@ -141,6 +141,7 @@
                         examModel.setIs_payment_pending(getString(dataJsonObject, "is_payment_pending"));
                         examModel.setPayment_message(getString(dataJsonObject, "payment_message"));
                         examModel.setPackagename(getString(dataJsonObject, "package"));
+                        examModel.setPackage_id(getString(dataJsonObject, "package_id"));
                         examModel.setPackagemessage(getString(dataJsonObject, "package_message"));
                         examModel.setNo_of_total_image(getString(dataJsonObject, "no_of_img"));
                         examModel.setNo_of_used_image(getString(dataJsonObject, "no_of_used_img"));
Index: app/src/main/java/com/app/brandmania/Fragment/bottom/HomeFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.app.brandmania.Fragment.bottom;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.IntentSender;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.os.SystemClock;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.LifecycleOwner;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.swiperefreshlayout.widget.SwipeRefreshLayout;\r\nimport androidx.viewpager.widget.PagerAdapter;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport com.android.volley.AuthFailureError;\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.app.brandmania.Activity.HomeActivity;\r\nimport com.app.brandmania.Activity.LoginActivity;\r\nimport com.app.brandmania.Activity.MainActivity;\r\nimport com.app.brandmania.Activity.ViewNotificationActivity;\r\nimport com.app.brandmania.Adapter.BrandAdapter;\r\nimport com.app.brandmania.Model.FrameItem;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.Priority;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\nimport com.bumptech.glide.request.RequestOptions;\r\nimport com.bumptech.glide.request.target.SimpleTarget;\r\nimport com.bumptech.glide.request.transition.Transition;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.play.core.appupdate.AppUpdateInfo;\r\nimport com.google.android.play.core.appupdate.AppUpdateManager;\r\nimport com.google.android.play.core.appupdate.AppUpdateManagerFactory;\r\nimport com.google.android.play.core.install.model.UpdateAvailability;\r\nimport com.google.android.play.core.tasks.Task;\r\nimport com.google.firebase.iid.FirebaseInstanceId;\r\nimport com.google.firebase.iid.InstanceIdResult;\r\nimport com.google.gson.Gson;\r\nimport com.app.brandmania.Adapter.DasboardAddaptor;\r\nimport com.app.brandmania.Adapter.ImageCateItemeInterFace;\r\nimport com.app.brandmania.Common.Constant;\r\nimport com.app.brandmania.Connection.ItemMultipleSelectionInterface;\r\nimport com.app.brandmania.Model.BrandListItem;\r\nimport com.app.brandmania.Model.DashBoardItem;\r\nimport com.app.brandmania.Model.ImageList;\r\nimport com.app.brandmania.Utils.APIs;\r\nimport com.app.brandmania.Common.PreafManager;\r\nimport com.app.brandmania.R;\r\nimport com.app.brandmania.Common.ResponseHandler;\r\nimport com.app.brandmania.Utils.CodeReUse;\r\nimport com.app.brandmania.Utils.Utility;\r\nimport com.app.brandmania.Adapter.ViewPagerAdapter;\r\nimport com.app.brandmania.Model.ViewPagerItem;\r\nimport com.app.brandmania.databinding.FragmentHomeBinding;\r\nimport com.viewpagerindicator.CirclePageIndicator;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\nimport angtrim.com.fivestarslibrary.FiveStarsDialog;\r\nimport angtrim.com.fivestarslibrary.NegativeReviewListener;\r\nimport angtrim.com.fivestarslibrary.ReviewListener;\r\nimport hotchemi.android.rate.AppRate;\r\nimport me.relex.circleindicator.CircleIndicator3;\r\n\r\nimport static androidx.constraintlayout.motion.utils.Oscillator.TAG;\r\nimport static com.google.android.play.core.install.model.AppUpdateType.IMMEDIATE;\r\n\r\npublic class HomeFragment extends Fragment  implements ItemMultipleSelectionInterface , ImageCateItemeInterFace, NegativeReviewListener, ReviewListener,SwipeRefreshLayout.OnRefreshListener {\r\n    public static int BUSINESS_TYPE = 1;\r\n    private String BusinessTitle;\r\n    ArrayList<BrandListItem> BusinessTypeList = new ArrayList<>();\r\n    ArrayList<DashBoardItem> menuModels = new ArrayList<>();\r\n    BrandListItem brandListItem;\r\n    private int[] layouts;\r\n    ArrayList<BrandListItem> multiListItems=new ArrayList<>();\r\n    FiveStarsDialog fiveStarsDialog;\r\n    private static final int REQUEST_CALL = 1;\r\n    private DasboardAddaptor dasboardAddaptor;\r\n    ArrayList<FrameItem> FramePagerItems = new ArrayList<>();\r\n    ArrayList<FrameItem> brandListItems = new ArrayList<>();\r\n    ArrayList<ViewPagerItem> viewPagerItems = new ArrayList<>();\r\n    private static final float PERCENTAGE_TO_SHOW_TITLE_AT_TOOLBAR = 0.8f;\r\n    private static final float PERCENTAGE_TO_HIDE_TITLE_DETAILS = 0.2f;\r\n    private static final int ALPHA_ANIMATIONS_DURATION = 100;\r\n    private boolean mIsTheTitleVisible = false;\r\n    private boolean mIsTheTitleContainerVisible = true;\r\n    private RelativeLayout mTitleContainer;\r\n    Activity act;\r\n    private String is_frame=\"\";\r\n    private String is_payment_pending=\"\";\r\n    private String is_package=\"\";\r\n    PreafManager preafManager;\r\n    private String deviceToken = \"\";\r\n    private FragmentHomeBinding binding;\r\n    Timer timer;\r\n    private HomeFragment homeFragment;\r\n    private SelectBrandListBottomFragment bottomSheetFragment;\r\n\r\n    public String getDeviceToken(Activity act) {\r\n        FirebaseInstanceId.getInstance().getInstanceId()\r\n                .addOnSuccessListener(act, new OnSuccessListener<InstanceIdResult>() {\r\n                    @Override\r\n                    public void onSuccess(InstanceIdResult instanceIdResult) {\r\n                        deviceToken = instanceIdResult.getToken();\r\n                        UpdateToken();\r\n                    }\r\n                });\r\n        return deviceToken;\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        preafManager=new PreafManager(act);\r\n        super.onResume();\r\n\r\n    }\r\n\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        act = getActivity();\r\n        binding= DataBindingUtil.inflate(inflater, R.layout.fragment_home,container,false);\r\n        homeFragment=this;\r\n\r\n        fiveStarsDialog = new FiveStarsDialog(getActivity(),\"brandmania@gmail.com\");\r\n        preafManager=new PreafManager(act);\r\n\r\n        if (preafManager.getAddBrandList()!=null && preafManager.getAddBrandList().size()!=0){\r\n            if (preafManager.getActiveBrand()==null){\r\n                preafManager.setActiveBrand(preafManager.getAddBrandList().get(0));\r\n                preafManager=new PreafManager(act);\r\n            }\r\n        }\r\n\r\n        Gson gson=new Gson();\r\n        requestAgain();\r\n\r\n\r\n\r\n        Log.e(\"PhoneNumber\",preafManager.getActiveBrand().getPhonenumber());\r\n        Log.e(\"PhoneNumberuyu56\",gson.toJson(preafManager.getActiveBrand()));\r\n        RateUs();\r\n       if (preafManager.getActiveBrand().getPhonenumber()!=null)\r\n           Log.e(\"phonephone\",preafManager.getActiveBrand().getPhonenumber());\r\n       binding.businessName.setText(preafManager.getActiveBrand().getName());\r\n       mTitleContainer =act.findViewById(R.id.main_linearlayout_title);\r\n       binding.alertText.setSelected(true);\r\n\r\n       binding.showNotification.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent=new Intent(act, ViewNotificationActivity.class);\r\n                startActivity(intent);\r\n                act.overridePendingTransition(R.anim.right_enter, R.anim.left_out);\r\n            }\r\n        });\r\n\r\n        getBrandList();\r\n        getFrame();\r\n\r\n        binding.swipeContainer.setColorSchemeResources(R.color.colorPrimary,\r\n               R.color.colorsecond,\r\n                R.color.colorthird);\r\n        binding.swipeContainer.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh() {\r\n\r\n                startAnimation();\r\n                getFrame();\r\n                getImageCtegory();\r\n\r\n            }\r\n        });\r\n\r\n\r\n        getDeviceToken(act);\r\n        AddUserActivity();\r\n\r\n        binding.businessNameDropDown.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showFragmentList(BUSINESS_TYPE,BusinessTitle);\r\n\r\n            }\r\n        });\r\n\r\n       binding.call.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                makePhoneCall();\r\n            }\r\n        });\r\n      binding.whatsapp.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                try {\r\n                    String number =\"8460638464\";\r\n                    String BrandContact=\"\\nRegistered Number: \";\r\n                    String text = \"Hello *BrandMania* ,  \\n\" + \"this is request to add  *Frame* For BrandName:\"+ binding.businessName.getText().toString() +BrandContact+preafManager.getMobileNumber();\r\n                    String toNumber =\"91\"+number;\r\n                    Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                    intent.setData(Uri.parse(\"http://api.whatsapp.com/send?phone=\" + toNumber + \"&text=\" + text));\r\n                    startActivity(intent);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n        startAnimation();\r\n        getImageCtegory();\r\n        getBanner();\r\n\r\n        return binding.getRoot();\r\n\r\n\r\n    }\r\n    private void startAnimation() {\r\n        binding.shimmerViewContainer.startShimmer();\r\n        binding.shimmerViewContainer.setVisibility(View.VISIBLE);\r\n        binding.rocommRecycler.setVisibility(View.GONE);\r\n\r\n    }\r\n    //Show Fragment For BrandList...........\r\n    public void showFragmentList(int callingFlag, String title) {\r\n        bottomSheetFragment = new SelectBrandListBottomFragment();\r\n        bottomSheetFragment.setHomeFragment(homeFragment);\r\n        bottomSheetFragment.setListData(callingFlag,title);\r\n        bottomSheetFragment.setLayoutType(1);\r\n        if (bottomSheetFragment.isVisible()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        if (bottomSheetFragment.isAdded()) {\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        bottomSheetFragment.show(getChildFragmentManager(), bottomSheetFragment.getTag());\r\n    }\r\n    //SetAddeptor.....................\r\n    public void setAdapter() {\r\n        DasboardAddaptor dasboardAddaptor = new DasboardAddaptor(menuModels,act);\r\n        RecyclerView.LayoutManager mLayoutManager = new LinearLayoutManager(act, RecyclerView.VERTICAL, false);\r\n        binding.rocommRecycler.setHasFixedSize(true);\r\n        binding.rocommRecycler.setLayoutManager(mLayoutManager);\r\n        binding.rocommRecycler.setAdapter(dasboardAddaptor);\r\n\r\n    }\r\n    //GetBanner........................\r\n    private void getBanner() {\r\n        binding.swipeContainer.setRefreshing(true);\r\n        Utility.Log(\"API : \", APIs.GET_BANNER);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.GET, APIs.GET_BANNER, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n\r\n                Utility.Log(\"GET_BANNER : \", response);\r\n                try {\r\n\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    binding.swipeContainer.setRefreshing(false);\r\n                    viewPagerItems = ResponseHandler.HandleGetBanneList(jsonObject);\r\n                    if (viewPagerItems != null && viewPagerItems.size() != 0) {\r\n                        final ViewPagerAdapter viewPagerAddeptor=new ViewPagerAdapter(viewPagerItems,act);\r\n                        binding.ViewPagerView.setAdapter(viewPagerAddeptor);\r\n                        TimerTask timerTask = new TimerTask() {\r\n                            @Override\r\n                            public void run() { binding.ViewPagerView.post(new Runnable(){\r\n                                @Override\r\n                                public void run() {\r\n                                    binding.ViewPagerView.setCurrentItem((binding.ViewPagerView.getCurrentItem()+1)%viewPagerAddeptor.getCount(),true);\r\n                                }\r\n                            }); }\r\n                        };\r\n                        timer = new Timer();\r\n                        timer.schedule(timerTask, 3000, 3000);\r\n\r\n                    } else {\r\n                        Log.e(\"Condidtion\", \"Else\");\r\n\r\n                    }\r\n\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        binding.swipeContainer.setRefreshing(false);\r\n                        error.printStackTrace();\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\"+preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n    //GetImageCategory..................\r\n    private void getImageCtegory() {\r\n               Utility.Log(\"API : \", APIs.GET_IMAGE_CATEGORY);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_IMAGE_CATEGORY+\"/1\", new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                binding.swipeContainer.setRefreshing(false);\r\n                Utility.Log(\"GET_IMAGE_CATEGORY : \", response);\r\n\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n\r\n                    menuModels = ResponseHandler.HandleGetImageCategory(jsonObject);\r\n                    if (menuModels != null && menuModels.size() != 0) {\r\n                        setAdapter();\r\n                        binding.shimmerViewContainer.stopShimmer();\r\n                        binding.shimmerViewContainer.setVisibility(View.GONE);\r\n                        binding.rocommRecycler.setVisibility(View.VISIBLE);\r\n                    }\r\n                    else {\r\n                        Log.e(\"Condidtion\", \"Else\");\r\n\r\n\r\n                    }\r\n\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        binding.swipeContainer.setRefreshing(false);\r\n                        error.printStackTrace();\r\n                        binding.swipeContainer.setRefreshing(false);\r\n                        binding.rocommRecycler.setVisibility(View.GONE);\r\n                        binding.shimmerViewContainer.stopShimmer();\r\n                        binding.shimmerViewContainer.setVisibility(View.GONE);\r\n\r\n//                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n//                        Log.e(\"Load-Get_Exam \", body);\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\"+preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n    //Update Token......................\r\n    private void UpdateToken() {\r\n        Utility.Log(\"Verify-Responce-Api\", APIs.UPDATE_TOKEN);\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.UPDATE_TOKEN, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.Log(\"UPDATE_TOKENnn\", response);\r\n\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n\r\n                error.printStackTrace();\r\n            }\r\n        }) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer\"+preafManager.getUserToken());\r\n                return params;\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                hashMap.put(\"firebase_token\", deviceToken);\r\n                Utility.Log(\"Verify-Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n    private void AddUserActivity() {\r\n        Utility.Log(\"Verify-Responce-Api\", APIs.ADD_BRAND);\r\n\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.ADD_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Utility.Log(\"ADD_BRAND\", response);\r\n\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n\r\n                error.printStackTrace();\r\n            }\r\n        }) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer\"+preafManager.getUserToken());\r\n                return params;\r\n\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                HashMap<String, String> hashMap = new HashMap<>();\r\n                Utility.Log(\"Verify-Param\", hashMap.toString());\r\n                return hashMap;\r\n            }\r\n        };\r\n\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n    //Back Event.........................\r\n    public void onBackPressed() {\r\n        CodeReUse.activityBackPress(act);\r\n    }\r\n    @Override public void onItemSMultipleelection(int calledFlag, int position, BrandListItem listModel) {\r\n        if (bottomSheetFragment != null && bottomSheetFragment.isVisible()) {\r\n\r\n            bottomSheetFragment.dismiss();\r\n        }\r\n        Intent i = new Intent(act, HomeActivity.class);\r\n        i.addCategory(Intent.CATEGORY_HOME);\r\n        i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n        startActivity(i);\r\n        act.overridePendingTransition(R.anim.slide_right_in, R.anim.slide_right_out);\r\n        act.finish();\r\n            binding.businessName.setText(listModel.getName());\r\n            brandListItem=listModel;\r\n            preafManager.setActiveBrand(listModel);\r\n            Gson gson=new Gson();\r\n            Log.e(\"Second\",gson.toJson(preafManager.getActiveBrand()));\r\n\r\n    }\r\n    @Override public void ImageCateonItemSelection(int position, ImageList listModel) {\r\n\r\n    }\r\n    private void makePhoneCall() {\r\n        String number =\"8460638464\";\r\n        if (number.trim().length() > 0) {\r\n            if (ContextCompat.checkSelfPermission(act, Manifest.permission.CALL_PHONE) != PackageManager.PERMISSION_GRANTED) {\r\n                ActivityCompat.requestPermissions(act,\r\n                        new String[]{Manifest.permission.CALL_PHONE}, REQUEST_CALL);\r\n            } else {\r\n                String dial = \"tel:\" + number;\r\n                startActivity(new Intent(Intent.ACTION_CALL, Uri.parse(dial)));\r\n            }\r\n        }\r\n    }\r\n    @Override public void onRequestPermissionsResult(int requestCode,  String[] permissions,  int[] grantResults) { if (requestCode == REQUEST_CALL) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                makePhoneCall();\r\n            } else {\r\n                Toast.makeText(getActivity(), \"Permission DENIED\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }}\r\n    private void RateUs() {\r\n//        AppRate.with(act)\r\n//                .setInstallDays(1)\r\n//                .setLaunchTimes(3)\r\n//                .setRemindInterval(2)\r\n//                .monitor();\r\n//\r\n//        AppRate.showRateDialogIfMeetsConditions(act);\r\n\r\n        fiveStarsDialog.setRateText(\"Rate Us\")\r\n\r\n                .setTitle(\"How was your experience with us?\")\r\n\r\n                .setForceMode(false)\r\n\r\n                .setUpperBound(2)\r\n\r\n                .setNegativeReviewListener(this)\r\n\r\n                .setReviewListener(this)\r\n\r\n                .showAfter(2);\r\n\r\n    }\r\n    private void getBrandList() {\r\n        binding.swipeContainer.setRefreshing(true);\r\n        Utility.Log(\"API : \", APIs.GET_BRAND);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_BRAND, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n\r\n                Utility.Log(\"GET_BRAND : \", response);\r\n                ArrayList<BrandListItem> brandListItems=new ArrayList<>();\r\n                try {\r\n\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    binding.swipeContainer.setRefreshing(false);\r\n                    multiListItems = ResponseHandler.HandleGetBrandList(jsonObject);\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n                        binding.swipeContainer.setRefreshing(false);\r\n                        error.printStackTrace();\r\n\r\n\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/json\");\r\n                params.put(\"Content-Type\", \"application/json\");\r\n                params.put(\"Authorization\",\"Bearer \"+preafManager.getUserToken());\r\n                Log.e(\"Token\",params.toString());\r\n                return params;\r\n            }\r\n\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n\r\n                Log.e(\"DateNdClass\", params.toString());\r\n                //params.put(\"upload_type_id\", String.valueOf(Constant.ADD_NOTICE));\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n    private void requestAgain() {\r\n        ActivityCompat.requestPermissions(act,\r\n                new String[]{\r\n                        Manifest.permission.READ_CONTACTS,\r\n                        Manifest.permission.MANAGE_EXTERNAL_STORAGE,\r\n                        Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                        Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                        Manifest.permission.CAMERA,\r\n                        Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                        Manifest.permission.READ_EXTERNAL_STORAGE\r\n                },\r\n                CodeReUse.ASK_PERMISSSION);\r\n    }\r\n    @Override public void onNegativeReview(int stars) {\r\n        Log.d(TAG, \"Negative review \" + stars);\r\n    }\r\n    @Override public void onRefresh() {\r\n        startAnimation();\r\n        getFrame();\r\n        getImageCtegory();\r\n        getBrandList();\r\n        getBanner();\r\n\r\n    }\r\n    @Override public void onReview(int stars) {\r\n        Log.d(TAG, \"Review \" + stars);\r\n    }\r\n\r\n    public class MyViewPagerAdapter extends PagerAdapter {\r\n\r\n        MyViewPagerAdapter() {\r\n        }\r\n\r\n        @Override\r\n        public Object instantiateItem(ViewGroup container, int position) {\r\n            LayoutInflater layoutInflater = (LayoutInflater) act.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\r\n            View view = layoutInflater.inflate(layouts[position], container, false);\r\n\r\n            container.addView(view);\r\n\r\n            return view;\r\n        }\r\n\r\n        @Override\r\n        public int getCount() {\r\n            return layouts.length;\r\n        }\r\n\r\n        @Override\r\n        public boolean isViewFromObject(View view, Object obj) {\r\n            return view == obj;\r\n        }\r\n\r\n\r\n        @Override\r\n        public void destroyItem(ViewGroup container, int position, Object object) {\r\n            View view = (View) object;\r\n            //   container.removeView(view);\r\n        }\r\n    }\r\n\r\n    private void getFrame() {\r\n        Utility.Log(\"API : \", APIs.GET_FRAME);\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, APIs.GET_FRAME,new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n\r\n                Utility.Log(\"GET_FRAME : \", response);\r\n\r\n                try {\r\n                    JSONObject jsonObject = new JSONObject(response);\r\n                    brandListItems = ResponseHandler.HandleGetFrame(jsonObject);\r\n                    JSONObject datajsonobjecttt =ResponseHandler.getJSONObject(jsonObject, \"data\");\r\n                    is_frame= datajsonobjecttt.getString(\"is_frame\");\r\n\r\n                    if (is_frame.equals(\"1\")) {\r\n                      //  Toast.makeText(act,\"Frame is added\",Toast.LENGTH_LONG).show();\r\n                        binding.alertRelative.setVisibility(View.GONE);\r\n                        is_payment_pending= datajsonobjecttt.getString(\"is_payment_pending\");\r\n                        is_package= datajsonobjecttt.getString(\"package\");\r\n\r\n                        if(is_package.equals(\"\"))\r\n                        {\r\n                            binding.alertRelative.setVisibility(View.VISIBLE);\r\n                          //  Toast.makeText(act,ResponseHandler.getString(datajsonobjecttt, \"package_message\"),Toast.LENGTH_LONG).show();\r\n                            binding.alertText.setText(ResponseHandler.getString(datajsonobjecttt, \"package_message\"));\r\n                            Log.e(\"PackagemessageMessage\",ResponseHandler.getString(datajsonobjecttt, \"package_message\"));\r\n\r\n                        }\r\n\r\n                        else if (is_payment_pending.equals(\"1\"))\r\n                        {\r\n                            binding.alertRelative.setVisibility(View.VISIBLE);\r\n                          //  Toast.makeText(act,ResponseHandler.getString(datajsonobjecttt, \"payment_message\"),Toast.LENGTH_LONG).show();\r\n                            binding.alertText.setText(ResponseHandler.getString(datajsonobjecttt, \"payment_message\"));\r\n                            Log.e(\"PaymentmessageMessage\",ResponseHandler.getString(datajsonobjecttt, \"payment_message\"));\r\n\r\n                        }\r\n                        else\r\n                        {\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n                    else if (is_frame.equals(\"0\")) {\r\n                        binding.alertText.setText(ResponseHandler.getString(datajsonobjecttt, \"frame_message\"));\r\n\r\n                    }\r\n\r\n\r\n\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n            }\r\n        },\r\n                new Response.ErrorListener() {\r\n                    @Override\r\n                    public void onErrorResponse(VolleyError error) {\r\n\r\n                        error.printStackTrace();\r\n//                        String body;\r\n//                        body = new String(error.networkResponse.data, StandardCharsets.UTF_8);\r\n//                        Log.e(\"Load-Get_Exam \", body);\r\n\r\n                    }\r\n                }\r\n        ) {\r\n            /**\r\n             * Passing some request headers*\r\n             */\r\n            @Override\r\n            public Map<String, String> getHeaders() throws AuthFailureError {\r\n                Map<String, String> params = new HashMap<String, String>();\r\n                params.put(\"Accept\", \"application/x-www-form-urlencoded\");//application/json\r\n                params.put(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                params.put(\"Authorization\", \"Bearer\" + preafManager.getUserToken());\r\n                Log.e(\"Token\", params.toString());\r\n                return params;\r\n            }\r\n\r\n            @Override\r\n            protected Map<String, String> getParams() {\r\n                Map<String, String> params = new HashMap<>();\r\n                params.put(\"brand_id\",preafManager.getActiveBrand().getId());\r\n                Utility.Log(\"POSTED-PARAMS-\", params.toString());\r\n                return params;\r\n            }\r\n\r\n        };\r\n\r\n        RequestQueue queue = Volley.newRequestQueue(act);\r\n        queue.add(stringRequest);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/app/brandmania/Fragment/bottom/HomeFragment.java	(revision a5f3b4f0090c0b76b7b7c4f91e59e7bead54fff8)
+++ app/src/main/java/com/app/brandmania/Fragment/bottom/HomeFragment.java	(date 1608029591684)
@@ -599,12 +599,23 @@
             public void onResponse(String response) {
 
                 Utility.Log("GET_BRAND : ", response);
-                ArrayList<BrandListItem> brandListItems=new ArrayList<>();
+
                 try {
 
                     JSONObject jsonObject = new JSONObject(response);
                     binding.swipeContainer.setRefreshing(false);
                     multiListItems = ResponseHandler.HandleGetBrandList(jsonObject);
+
+                    //FirstLogin
+                    if (act.getIntent().hasExtra("FirstLogin")){
+
+                        preafManager.setAddBrandList(multiListItems);
+                        preafManager.setIS_Brand(true);
+
+                        if (multiListItems.size() != 0) {
+                            preafManager.setActiveBrand(multiListItems.get(0));
+                        }
+                    }
                 } catch (JSONException e) {
                     e.printStackTrace();
                 }
